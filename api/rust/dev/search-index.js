var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","approx_n_unique","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_leaf_array","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","gt_eq","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","lt_eq","","","","","","","max","","max_binary","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","num_falses","num_trues","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","serialize","","","","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","serialize","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","deserialize","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","serialize","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkApproxNUnique","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","approx_n_unique","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","deserialize","","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_elementwise","is_first_distinct","is_last_distinct","limit","","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","serialize","","","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","serialize","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","limit","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","can_have_dtype","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","contains_categoricals","contains_dictionary","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","div","divide","","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","enum_","eq","","","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_or_infer","get_or_infer_with","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","","","new_dimension","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","","physical","","precision","register_value","remainder","","","","","","","","","","","","","round","","same_src","scale","second","seconds","serialize","","","","","","","","","","","","","","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_fixed_size_list","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_error_source","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","align_chunks","align_chunks_par","append_record_batch","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","first_col_n_chunks","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","max_n_chunks","mean_horizontal","min_horizontal","n_chunks","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","rechunk_mut","rechunk_to_record_batch","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","serialize","","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_extend","","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Partitioned","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_std","agg_sum","agg_valid_count","agg_var","and_reduce","append","apply_binary_elementwise","apply_broadcasting_binary_elementwise","apply_unary_elementwise","approx_n_unique","arg_sort","array","as_list","as_materialized_series","","as_partitioned_column","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","","bitxor","","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","deserialize","div","","","","divide","drop","","drop_nulls","","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","","from_single_value_series","full_null","gather_every","get","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","implode","init","","into","","into_column","","","into_frame","into_materialized_series","into_nulls","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","map_scalar","map_unary_elementwise_to_bool","max_reduce","mean_reduce","median_reduce","min_reduce","mul","","","","n_chunks","n_unique","name","","new","","new_empty","","new_from_index","new_partitioned","new_scalar","not_equal","not_equal_missing","null_count","or_reduce","phys_iter","product","quantile_reduce","rechunk","rem","","","","rename","","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","scalar","serialize","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","sort_with","split_at","std_reduce","str","strict_cast","","struct_","sub","","","","sum_reduce","tail","take","take_chunked_unchecked","take_materialized_series","","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_add_owned","try_apply_binary_elementwise","try_apply_broadcasting_binary_elementwise","try_apply_unary_elementwise","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_map_unary_elementwise_to_bool","try_mul_owned","try_str","try_struct","try_sub_owned","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","var_reduce","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","serialize","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","Any","","","","AnyHorizontal","AnyValue","ApproxNUnique","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","Bytes","","C","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkApproxNUnique","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","Deserialized","","DfTake","Dictionary","Diff","Dimension","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Equiprobable","","Err","EscapeRegex","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","","GtEq","","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","","Hour","IDX_DTYPE","IEJoin","IEJoinOptions","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InequalityOperator","Infer","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Intersect","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","LazySerde","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","","List","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","","LowerBound","Lowercase","Lt","","LtEq","","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","OpaqueColumnUdf","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetAsyncReader","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Partitioned","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","ReshapeDimension","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingFnParams","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","Semi","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Specified","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueCounts","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_csv_read_internal","_finish_anti_semi_join","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_semi_anti_join_from_series","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_missing_columns","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","and_reduce","anonymous_scan","anti_join","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_projection","apply_to_slice","apply_values","approx_n_unique","","","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_provider","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_downcasting","as_error_source","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","","batched_borrowed","binary","","binary_expr","bitand","","bitand_assign","bitor","bitor_assign","bits","","bitxor","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bound_key","boxed","boxed_metadata","buffer","builder","byte_source","cache","","","","call","","","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_span","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","columns_to_projection","comment_prefix","compare","","compile","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","copy","copy_if_not_exists","count","","","count_matches","count_matches_many","count_ones","count_rows","","count_rows_from_slice","count_zeros","create_enum_dtype","create_left_df_chunked","create_sorting_map","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","current_span","data","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","delete","delete_stream","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_raw","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","drop_span","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","enabled","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","enter","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalentescape_regex","escape_regex_str","eval","event","event_enabled","every","exact","exclude","exclude_dtype","execute","exit","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_uri","","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_opts","get_overlapping_bounds_iter","get_parse_options","get_range","get_ranges","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","hash_join_semi_anti","head","","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_cross","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_ie","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_positive_idx_uncertain_col","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","","lazy","","le","leading_ones","leading_zeros","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","","","line_terminator","list","","list_with_delimiter","list_with_offset","lit","","","","","","load","load_any","load_bound","load_buffer","load_data","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","","materialize_empty_df","materialize_projection","materialize_unknown_dtypes","max","","","","","","max_level_hint","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","","method","","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_cyclic_in","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_span","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","","offset","","","offsets","on","","","operator1","operator2","optimize","options","or","or_reduce","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","prepare_cloud_plan","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","put","put_multipart","put_multipart_opts","put_opts","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_exact","read_parallel","","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","rechunk_validity","record","record_follows_from","reduce_exprs","register_callsite","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","","rename_fields","rename_if_not_exists","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_encode","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","semi_join","separator","","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_metadata","set_parallel","set_rechunk","","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","spawn_local_obj","spawn_obj","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","status","status_local","std","","","","","","std_reduce","","store","str","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","trailing_ones","trailing_zeros","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_close","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_map_to_array_inner_dtype","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse","try_parse_dates","try_parse_interval","try_pin","try_pin_in","try_serialize","","","try_set_sorted_flag","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_counts","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_arrow_schema_projection","","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_collapse_joins","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parallel","with_parse_options","with_path","","with_paths","with_predicate","","","","with_predicate_pushdown","with_projection","","","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","","","with_row_limit","with_same_dtype","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_all","write_df_to_file","","write_partitioned_dataset","write_to","write_to_parts","write_to_string","write_varint","write_vectored","writeable_cmp_bytes","writeable_length_hint","xor","xor_reduce","year","","","","zip","zip_with","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","AllColumns","AllColumnsSingle","Columns","CountLines","NullValuesCompiled","__clone_box","borrow","","borrow_mut","","cast_columns","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","find_next","find_starting_point","fmt","from","","init","","into","","new","prepare_csv_schema","read_chunk","to_owned","try_from","","try_into","","type_id","","validate_utf8","vzip","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","validate_utf8","vzip","","","","buf","time_unit","time_zone","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","Time","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudLocation","CloudOptions","CloudType","CloudWriter","File","Gcp","Hf","Http","ObjectStorePath","PolarsObjectStore","__clone_box","","borrow","","","","","borrow_mut","","","","","bucket","build_http","build_object_store","clone","","clone_into","","clone_to_uninit","","credential_provider","default","","deref","","","","","deref_mut","","","","","deserialize","download","drop","","","","","","eq","","","equivalent","","","execute","expansion","file_cache_ttl","flush","","fmt","","","from","","","","","from_str","from_untyped_config","from_url","get_range","get_ranges_sort","glob","hash","head","init","","","","","into","","","","","max_retries","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","serialize","sync_update","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_credential_provider","with_max_retries","write","write_all","write_varint","CredentialProviderFunction","Function","IntoCredentialProvider","None","ObjectStoreCredential","PlCredentialProvider","__clone_box","","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","deref","","","deref_mut","","","deserialize","drop","","","eq","","equivalent","","","","","","fmt","","from","","","from_func","hash","","init","","","into","","","serialize","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","file_cache_ttl","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","enum_","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","EnumChunkedBuilder","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","EscapeRegex","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","limit","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","escape_regex","escape_regex_str","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompareEq","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","append","approx_n_unique","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","","","","bitor","","","","bitxor","","","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","deserialize","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","first","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_chunks","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","last","len","","limit","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lit","lt","","","lt_eq","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","or_reduce","phys_iter","product","quantile_reduce","rechunk","rechunk_validity","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","serialize","","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","time","to_arrow","to_dummies","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_struct","try_sub_owned","try_time","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Add","Div","FloorDiv","LhsNumOps","Mul","NumOpsDispatch","NumOpsDispatchInner","NumericListOp","Output","Rem","Sub","__clone_box","_struct_arithmetic","add","add_to","","borrow","borrow_mut","checked","clone","clone_into","clone_to_uninit","deref","deref_mut","div","divide","","drop","execute","fmt","from","init","into","mul","multiply","","rem","remainder","","sub","subtract","","to_owned","try_from","try_into","type_id","vzip","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[870,"polars::chunked_array::arithmetic"],[898,"polars::chunked_array::builder"],[1159,"polars::chunked_array::builder::list"],[1176,"polars::chunked_array::cast"],[1207,"polars::chunked_array::collect"],[1221,"polars::chunked_array::float"],[1223,"polars::chunked_array::from_iterator_par"],[1227,"polars::chunked_array::iterator"],[1282,"polars::chunked_array::iterator::par"],[1284,"polars::chunked_array::metadata"],[1570,"polars::chunked_array::object"],[1647,"polars::chunked_array::object::builder"],[1671,"polars::chunked_array::object::registry"],[1700,"polars::chunked_array::ops"],[1920,"polars::chunked_array::ops::arity"],[1956,"polars::chunked_array::ops::float_sorted_arg_max"],[1958,"polars::chunked_array::ops::gather"],[1961,"polars::chunked_array::ops::row_encode"],[1970,"polars::chunked_array::ops::search_sorted"],[2002,"polars::chunked_array::ops::sort"],[2009,"polars::chunked_array::ops::sort::arg_bottom_k"],[2010,"polars::chunked_array::ops::sort::options"],[2025,"polars::chunked_array::temporal"],[2033,"polars::chunked_array::temporal::conversion"],[2036,"polars::datatypes"],[3597,"polars::datatypes::categorical"],[3614,"polars::datatypes::categorical::revmap"],[3620,"polars::datatypes::categorical::string_cache"],[3639,"polars::datatypes::enum_"],[3657,"polars::docs"],[3659,"polars::error"],[3753,"polars::error::PolarsError"],[3757,"polars::error::constants"],[3760,"polars::frame"],[4051,"polars::frame::column"],[4334,"polars::frame::explode"],[4365,"polars::frame::group_by"],[4603,"polars::frame::group_by::GroupByMethod"],[4604,"polars::frame::group_by::GroupsProxy"],[4606,"polars::frame::group_by::aggregations"],[4619,"polars::frame::group_by::expr"],[4622,"polars::frame::row"],[4732,"polars::functions"],[4734,"polars::prelude"],[10443,"polars::prelude::AggExpr"],[10450,"polars::prelude::BooleanFunction"],[10453,"polars::prelude::DslPlan"],[10504,"polars::prelude::Expr"],[10539,"polars::prelude::FunctionExpr"],[10561,"polars::prelude::GroupByMethod"],[10562,"polars::prelude::GroupsProxy"],[10564,"polars::prelude::LiteralValue"],[10567,"polars::prelude::PolarsError"],[10571,"polars::prelude::StringFunction"],[10585,"polars::prelude::TemporalFunction"],[10587,"polars::prelude::_csv_read_internal"],[10630,"polars::prelude::_internal"],[10652,"polars::prelude::aggregations"],[10665,"polars::prelude::arity"],[10701,"polars::prelude::array"],[10720,"polars::prelude::binary"],[10737,"polars::prelude::buffer"],[10812,"polars::prelude::buffer::Buffer"],[10815,"polars::prelude::byte_source"],[10896,"polars::prelude::cat"],[10897,"polars::prelude::chunkedarray"],[10963,"polars::prelude::chunkedarray::string"],[11003,"polars::prelude::chunkedarray::string::infer"],[11034,"polars::prelude::cloud"],[11164,"polars::prelude::cloud::credential_provider"],[11231,"polars::prelude::cloud::options"],[11241,"polars::prelude::compression"],[11259,"polars::prelude::datatypes"],[11540,"polars::prelude::datatypes::categorical"],[11557,"polars::prelude::datatypes::categorical::revmap"],[11563,"polars::prelude::datatypes::categorical::string_cache"],[11567,"polars::prelude::datatypes::enum_"],[11568,"polars::prelude::datetime"],[11571,"polars::prelude::default_arrays"],[11577,"polars::prelude::dt"],[11629,"polars::prelude::expr"],[11632,"polars::prelude::fixed_size_list"],[11652,"polars::prelude::float_sorted_arg_max"],[11654,"polars::prelude::function_expr"],[11831,"polars::prelude::function_expr::BooleanFunction"],[11834,"polars::prelude::function_expr::FunctionExpr"],[11856,"polars::prelude::function_expr::StringFunction"],[11870,"polars::prelude::function_expr::TemporalFunction"],[11872,"polars::prelude::function_expr::cat"],[11874,"polars::prelude::function_expr::pow"],[11878,"polars::prelude::function_expr::rolling"],[11911,"polars::prelude::function_expr::rolling_by"],[11944,"polars::prelude::gather"],[11947,"polars::prelude::interpolate"],[11951,"polars::prelude::interpolate_by"],[11952,"polars::prelude::mode"],[11953,"polars::prelude::nan_propagating_aggregate"],[11958,"polars::prelude::null"],[11989,"polars::prelude::row_encode"],[11998,"polars::prelude::schema_inference"],[12025,"polars::prelude::search_sorted"],[12031,"polars::prelude::series"],[12053,"polars::prelude::sort"],[12060,"polars::prelude::sort::arg_bottom_k"],[12061,"polars::prelude::sort::options"],[12076,"polars::prelude::strings"],[12133,"polars::prelude::udf"],[12139,"polars::prelude::utf8"],[12143,"polars::series"],[12626,"polars::series::amortized_iter"],[12650,"polars::series::arithmetic"],[12697,"polars::series::arithmetic::checked"],[12703,"polars::series::ops"],[12732,"dyn_clone::sealed"],[12733,"polars_core::datatypes"],[12734,"polars_core::chunked_array"],[12735,"polars_error"],[12736,"core::result"],[12737,"polars_core::series"],[12738,"core::ops::function"],[12739,"num_traits"],[12740,"num_traits::cast"],[12741,"polars_core::series::arithmetic::borrowed"],[12742,"polars_core::frame::group_by::proxy"],[12743,"polars_core::chunked_array::object"],[12744,"core::option"],[12745,"polars_arrow::array"],[12746,"alloc::boxed"],[12747,"core::iter::traits::iterator"],[12748,"polars_core::chunked_array::list::iterator"],[12749,"polars_utils::pl_str"],[12750,"core::marker"],[12751,"alloc::borrow"],[12752,"polars_core::series::amortized_iter"],[12753,"alloc::string"],[12754,"polars_core::datatypes::dtype"],[12755,"polars_arrow::array::binview::view"],[12756,"polars_core::chunked_array::ops::sort::options"],[12757,"polars_core::frame::column"],[12758,"polars_core::chunked_array::metadata::md_trait"],[12759,"polars_core::chunked_array::cast"],[12760,"polars_core::series::arithmetic::borrowed::checked"],[12761,"core::slice::iter"],[12762,"core::iter::adapters::map"],[12763,"alloc::vec"],[12764,"compact_str"],[12765,"polars_core::chunked_array::metadata"],[12766,"core::iter::traits::double_ended"],[12767,"polars_arrow::offset"],[12768,"core::fmt"],[12769,"core::iter::traits::collect"],[12770,"core::borrow"],[12771,"core::convert"],[12772,"polars_arrow::bitmap::immutable"],[12773,"polars_core::chunked_array::from_iterator"],[12774,"rayon::iter"],[12775,"polars_arrow::pushable"],[12776,"core::iter::traits::exact_size"],[12777,"core::clone"],[12778,"polars_arrow::trusted_len"],[12779,"polars_core::datatypes::any_value"],[12780,"polars_arrow::array::binary"],[12781,"std::sync::rwlock"],[12782,"polars_core::chunked_array::logical"],[12783,"polars_core::datatypes::time_unit"],[12784,"polars_core::series::series_trait"],[12785,"polars_core::chunked_array::iterator"],[12786,"polars_core::scalar"],[12787,"polars_core::chunked_array::metadata::guard"],[12788,"polars_core::chunked_array::metadata::interior_mutable"],[12789,"alloc::sync"],[12790,"core::ops::range"],[12791,"polars_core::datatypes::field"],[12792,"polars_arrow::legacy::kernels::rolling::no_nulls"],[12793,"polars_core::chunked_array::ops::rolling_window"],[12794,"polars_ops::chunked_array::scatter"],[12795,"serde::ser"],[12796,"polars_utils::index"],[12797,"ahash::random_state"],[12798,"polars_utils::hashing"],[12799,"ndarray::data_repr"],[12800,"ndarray::dimension::dim"],[12801,"ndarray"],[12802,"either"],[12803,"core::any"],[12804,"polars_core::frame"],[12805,"polars_core::chunked_array::arithmetic::numeric"],[12806,"polars_core::chunked_array::builder::list::anonymous"],[12807,"polars_core::chunked_array::builder::list::boolean"],[12808,"polars_core::chunked_array::builder::list::primitive"],[12809,"polars_core::chunked_array::builder::list"],[12810,"polars_core::chunked_array::builder"],[12811,"polars_core::chunked_array::builder::list::binary"],[12812,"polars_core::chunked_array::builder::list::null"],[12813,"polars_core::chunked_array::builder::string"],[12814,"polars_arrow::array::binview"],[12815,"polars_core::chunked_array::builder::boolean"],[12816,"polars_core::chunked_array::builder::null"],[12817,"polars_core::chunked_array::builder::primitive"],[12818,"polars_core::series::implementations::null"],[12819,"serde::de"],[12820,"core::hash"],[12821,"polars_core::chunked_array::collect"],[12822,"polars_core::chunked_array::float"],[12823,"polars_core::chunked_array::from_iterator_par"],[12824,"polars_arrow::array::boolean"],[12825,"polars_arrow::array::fixed_size_list"],[12826,"polars_core::chunked_array::metadata::env"],[12827,"polars_core::chunked_array::metadata::collect"],[12828,"bitflags::iter"],[12829,"std::fs"],[12830,"std::sync::mutex"],[12831,"polars_arrow::datatypes"],[12832,"polars_arrow::bitmap::utils::iterator"],[12833,"polars_arrow::bitmap::utils::zip_validity"],[12834,"polars_core::chunked_array::object::builder"],[12835,"polars_core::chunked_array::object::registry"],[12836,"polars_core::chunked_array::ops"],[12837,"polars_arrow::legacy::array::slice"],[12838,"polars_core::chunked_array::ops::arity"],[12839,"polars_arrow::array::static_array"],[12840,"core::error"],[12841,"polars_arrow::array::primitive"],[12842,"polars_row::row"],[12843,"polars_core::chunked_array::ops::search_sorted"],[12844,"polars_core::utils"],[12845,"chrono::naive::datetime"],[12846,"chrono_tz::timezones"],[12847,"chrono::naive::time"],[12848,"polars_core::chunked_array::logical::categorical"],[12849,"polars_core::chunked_array::logical::categorical::builder"],[12850,"polars_arrow::array::static_array_collect"],[12851,"std::ffi::os_str"],[12852,"std::path"],[12853,"bytemuck::zeroable"],[12854,"polars_core::chunked_array::logical::categorical::revmap"],[12855,"polars_core::chunked_array::logical::categorical::merge"],[12856,"polars_arrow::datatypes::reshape"],[12857,"core::cmp"],[12858,"polars_core::datatypes::_serde"],[12859,"polars_arrow::datatypes::physical_type"],[12860,"polars_arrow::types"],[12861,"chrono::time_delta"],[12862,"chrono::naive::date"],[12863,"polars_core::datatypes::into_scalar"],[12864,"polars_plan::dsl::expr"],[12865,"polars_core::chunked_array::logical::categorical::string_cache"],[12866,"polars_core::chunked_array::logical::enum_"],[12867,"polars_error::warning"],[12868,"planus::errors"],[12869,"polars_parquet::parquet::error"],[12870,"regex::error"],[12871,"simdutf8::basic"],[12872,"std::io::error"],[12873,"object_store"],[12874,"alloc::collections"],[12875,"polars_schema::schema"],[12876,"polars_arrow::record_batch"],[12877,"hashbrown::set"],[12878,"polars_core::frame::row"],[12879,"polars_core::frame::group_by"],[12880,"polars_time::group_by::dynamic"],[12881,"polars_lazy::frame"],[12882,"polars_core::series::from"],[12883,"polars_core::chunked_array::ndarray"],[12884,"polars_arrow::array::struct_"],[12885,"polars_time::windows::duration"],[12886,"polars_core::frame::column::scalar"],[12887,"polars_core::frame::column::partitioned"],[12888,"polars_core::frame::explode"],[12889,"polars_utils::idx_vec"],[12890,"rayon::iter::plumbing"],[12891,"polars_plan::plans::aexpr"],[12892,"polars_core::frame::group_by::into_groups"],[12893,"core::iter::adapters::copied"],[12894,"core::iter::adapters::zip"],[12895,"polars_arrow::legacy::kernels::rolling"],[12896,"polars_utils::float"],[12897,"polars_arrow::types::native"],[12898,"polars_core::frame::group_by::aggregations::agg_list"],[12899,"polars_core::frame::group_by::aggregations"],[12900,"polars_core::frame::group_by::expr"],[12901,"polars_core::frame::row::av_buffer"],[12902,"polars_utils::arena"],[12903,"polars_plan::plans::ir"],[12904,"polars_ops::frame::join::hash_join"],[12905,"polars_ops::frame::join::args"],[12906,"polars_plan::dsl::struct_"],[12907,"polars_ops::chunked_array::gather::chunked"],[12908,"polars_ops::frame"],[12909,"polars_io::csv::read::reader"],[12910,"polars_io::predicates"],[12911,"polars_io::mmap"],[12912,"polars_plan::dsl::selector"],[12913,"polars_plan::frame::opt_state"],[12914,"core::alloc"],[12915,"polars_plan::plans::anonymous_scan"],[12916,"polars_lazy::scan::anonymous_scan"],[12917,"polars_plan::dsl::expr_dyn_fn"],[12918,"polars_plan::plans::visitor"],[12919,"polars_plan::dsl::function_expr"],[12920,"polars_ops::series::ops::arg_min_max"],[12921,"polars_plan::dsl::array"],[12922,"polars_plan::dsl::list"],[12923,"polars_plan::dsl::function_expr::schema"],[12924,"polars_io::ipc::ipc_stream"],[12925,"std::io"],[12926,"icu_provider::any"],[12927,"polars_ops::chunked_array::binary"],[12928,"polars_time::chunkedarray::string"],[12929,"std::os::fd::owned"],[12930,"polars_ops::chunked_array::list"],[12931,"std::os::fd::raw"],[12932,"polars_ops::series::ops"],[12933,"polars_ops::chunked_array::strings"],[12934,"core::mem::maybe_uninit"],[12935,"polars_ops::chunked_array::strings::namespace"],[12936,"polars_io::csv::read::read_impl::batched"],[12937,"polars_io::csv::write::writer"],[12938,"polars_io::ipc::write"],[12939,"polars_io::parquet::read::reader"],[12940,"polars_io::parquet::read::read_impl"],[12941,"polars_io::parquet::write::writer"],[12942,"polars_io::parquet::write::batched_writer"],[12943,"polars_plan::dsl::binary"],[12944,"icu_provider::key"],[12945,"icu_provider::marker"],[12946,"icu_provider::data_provider"],[12947,"hyper::service::service"],[12948,"http::request"],[12949,"polars_plan::dsl::udf"],[12950,"polars_lazy::frame::exitable"],[12951,"hashbrown::map"],[12952,"polars_plan::dsl::cat"],[12953,"polars_ops::series::ops::round"],[12954,"polars_time::series"],[12955,"polars_lazy::scan::csv"],[12956,"polars_lazy::scan::ipc"],[12957,"polars_lazy::scan::ndjson"],[12958,"polars_lazy::scan::parquet"],[12959,"polars_time::chunkedarray::rolling_window"],[12960,"polars_time::windows::bounds"],[12961,"polars_time::windows::group_by"],[12962,"polars_time::windows::window"],[12963,"polars_ops::frame::join::asof"],[12964,"polars_ops::frame::join::iejoin"],[12965,"polars_ops::series::ops::interpolation::interpolate"],[12966,"polars_ops::series::ops::is_between"],[12967,"polars_ops::series::ops::rank"],[12968,"polars_io::csv::read::options"],[12969,"polars_io::csv::write::options"],[12970,"polars_plan::dsl::arity"],[12971,"polars_io::ipc::ipc_file"],[12972,"polars_io::ipc::ipc_reader_async"],[12973,"polars_io::json"],[12974,"polars_io::parquet::read::options"],[12975,"polars_parquet::arrow::write"],[12976,"polars_io::parquet::write::options"],[12977,"polars_plan::dsl::function_expr::boolean"],[12978,"polars_parquet::parquet::metadata::file_metadata"],[12979,"polars_plan::dsl::function_expr::cat"],[12980,"polars_plan::dsl::function_expr::datetime"],[12981,"polars_plan::dsl::function_expr::pow"],[12982,"polars_plan::dsl::function_expr::strings"],[12983,"polars_plan::dsl::function_expr::struct_"],[12984,"polars_plan::dsl::functions::temporal"],[12985,"polars_plan::dsl::options"],[12986,"polars_plan::plans::lit"],[12987,"polars_plan::plans::options"],[12988,"polars_plan::plans"],[12989,"polars_arrow::legacy::kernels::time"],[12990,"tracing_core::span"],[12991,"tracing_core::subscriber"],[12992,"polars_lazy::scan::file_list_reader"],[12993,"polars_io::cloud::options"],[12994,"polars_parquet::parquet::metadata::column_order"],[12995,"polars_ops::chunked_array::binary::namespace"],[12996,"object_store::path"],[12997,"core::future::future"],[12998,"core::pin"],[12999,"polars_io::ndjson::core"],[13000,"polars_arrow::io::ipc::read::file"],[13001,"polars_parquet::parquet::metadata::row_metadata"],[13002,"polars_ops::frame::join::cross_join"],[13003,"polars_lazy::dsl::eval"],[13004,"polars_time::chunkedarray::date"],[13005,"polars_time::chunkedarray::datetime"],[13006,"polars_time::chunkedarray::duration"],[13007,"core::ffi::c_str"],[13008,"core::default"],[13009,"futures_core::stream"],[13010,"polars_parquet::parquet::metadata::column_chunk_metadata"],[13011,"polars_core::series::ops"],[13012,"polars_plan::dsl::dt"],[13013,"tracing_core::metadata"],[13014,"polars_ops::series::ops::various"],[13015,"polars_arrow::scalar"],[13016,"polars_lazy::dsl::list"],[13017,"tracing_core::event"],[13018,"crossterm::command"],[13019,"polars_io::shared"],[13020,"polars_plan::plans::apply"],[13021,"polars_parquet::arrow::read::statistics"],[13022,"polars_plan::dsl::function_expr::list"],[13023,"polars_plan::dsl::function_expr::range"],[13024,"polars_plan::dsl::function_expr::binary"],[13025,"polars_plan::dsl::function_expr::array"],[13026,"alloc::ffi::c_str"],[13027,"polars_arrow::array::growable::structure"],[13028,"polars_core::schema"],[13029,"polars_arrow::legacy::array::default_arrays"],[13030,"polars_arrow::buffer::immutable"],[13031,"polars_arrow::array::list"],[13032,"polars_core::named_from"],[13033,"polars_ops::frame::join"],[13034,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[13035,"polars_time::chunkedarray::time"],[13036,"core::num::nonzero"],[13037,"polars_arrow::array::struct_::iterator"],[13038,"polars_ops::frame::join::asof::groups"],[13039,"polars_ops::chunked_array::list::namespace"],[13040,"polars_plan::dsl::name"],[13041,"polars_parquet_format::parquet_format"],[13042,"icu_provider::request"],[13043,"icu_provider::response"],[13044,"icu_provider::error"],[13045,"icu_provider::buf"],[13046,"polars_core::utils::supertype"],[13047,"polars_io::options"],[13048,"polars_core::chunked_array::ops::aggregate"],[13049,"polars_core::chunked_array::ops::aggregate::quantile"],[13050,"polars_arrow::legacy::index"],[13051,"polars_plan::plans::ir::scan_sources"],[13052,"polars_ops::chunked_array::strings::split"],[13053,"object_store::payload"],[13054,"core::io::borrowed_buf"],[13055,"polars_parquet_format::thrift::varint::decode"],[13056,"polars_time::chunkedarray::rolling_window::dispatch"],[13057,"polars_time::round"],[13058,"polars_parquet::parquet::metadata::schema_descriptor"],[13059,"futures_task::future_obj"],[13060,"futures_task::spawn"],[13061,"polars_core::chunked_array::ops::aggregate::var"],[13062,"polars_plan::dsl::string"],[13063,"polars_ops::series::ops::to_dummies"],[13064,"polars_time::truncate"],[13065,"polars_io::csv::read::schema_inference"],[13066,"polars_time::upsample"],[13067,"polars_core::hashing::vector_hasher"],[13068,"alloc::collections::btree::map"],[13069,"writeable"],[13070,"polars_io::csv::read::parser"],[13071,"polars_utils::mmap::private"],[13072,"polars_parquet::arrow::read::deserialize::utils::filter"],[13073,"polars_ops::chunked_array::array::namespace"],[13074,"polars_ops::chunked_array::array"],[13075,"polars_io::csv::read::buffer"],[13076,"polars_io::utils::byte_source"],[13077,"polars_time::chunkedarray::string::patterns"],[13078,"polars_time::chunkedarray::string::infer"],[13079,"polars_io::cloud::glob"],[13080,"polars_io::cloud::polars_object_store"],[13081,"tokio::fs::file"],[13082,"polars_io::cloud::adaptors"],[13083,"url"],[13084,"bytes::bytes"],[13085,"polars_io::cloud::credential_provider"],[13086,"polars_io::utils::compression"],[13087,"polars_arrow::legacy::array::fixed_size_list"],[13088,"polars_plan::dsl::function_expr::rolling"],[13089,"polars_plan::dsl::function_expr::rolling_by"],[13090,"polars_arrow::legacy::array::null"],[13091,"polars_arrow::bitmap::mutable"],[13092,"polars_arrow::array::utf8"],[13093,"polars_core::series::iterator"],[13094,"alloc::rc"],[13095,"polars_core::series::arithmetic::list_borrowed"],[13096,"polars_core"],[13097,"polars_core::chunked_array::struct_"],[13098,"polars_core::chunked_array::iterator::par"],[13099,"polars_core::chunked_array::object::extension"],[13100,"polars_core::chunked_array::ops::float_sorted_arg_max"],[13101,"polars_core::chunked_array::ops::gather"],[13102,"polars_core::chunked_array::ops::row_encode"],[13103,"polars_core::chunked_array::ops::sort"],[13104,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[13105,"polars_core::chunked_array::temporal"],[13106,"polars_core::chunked_array::temporal::conversion"],[13107,"polars_core::chunked_array::temporal::time"],[13108,"polars_core::chunked_array::logical::date"],[13109,"polars_core::chunked_array::logical::datetime"],[13110,"polars_core::chunked_array::logical::decimal"],[13111,"polars_core::chunked_array::logical::duration"],[13112,"polars_core::datatypes::aliases"],[13113,"polars_utils::aliases"],[13114,"polars_core::chunked_array::logical::time"],[13115,"polars_error::constants"],[13116,"polars_core::functions"],[13117,"polars_core::frame::horizontal"],[13118,"polars_arrow::datatypes::schema"],[13119,"polars_io::utils::other"],[13120,"polars_io::parquet::metadata"],[13121,"polars_arrow::legacy::prelude"],[13122,"polars_arrow::legacy::array"],[13123,"polars_io::path_utils"],[13124,"polars_ops::series::ops::rolling"],[13125,"polars_parquet::parquet::write"],[13126,"polars_io::utils"],[13127,"polars_ops::frame::join::general"],[13128,"polars_io::csv::read"],[13129,"polars_io::parquet::read"],[13130,"polars_ops::series::ops::abs"],[13131,"polars_plan::dsl::functions::selectors"],[13132,"polars_plan::dsl::functions::horizontal"],[13133,"polars_plan::dsl::functions::arity"],[13134,"polars_plan::dsl"],[13135,"polars_plan::dsl::functions::range"],[13136,"polars_plan::dsl::functions::index"],[13137,"polars_ops::chunked_array"],[13138,"polars_plan::dsl::functions::coerce"],[13139,"polars_plan::dsl::functions::syntactic_sugar"],[13140,"polars_time::base_utc_offset"],[13141,"polars_time"],[13142,"polars_ops::series::ops::clip"],[13143,"polars_io"],[13144,"polars_ops::series::ops::horizontal"],[13145,"polars_lazy::dsl::functions"],[13146,"polars_plan::dsl::functions::concat"],[13147,"polars_ops::series::ops::index"],[13148,"polars_ops::series::ops::bitwise"],[13149,"polars_ops::series::ops::cum_agg"],[13150,"polars_ops::series::ops::diff"],[13151,"polars_time::dst_offset"],[13152,"polars_ops::chunked_array::strings::escape_regex"],[13153,"polars_ops::series::ops::floor_divide"],[13154,"polars_ops::chunked_array::strings::concat"],[13155,"polars_ops::series::ops::duration"],[13156,"polars_ops::chunked_array::datetime::replace_time_zone"],[13157,"polars_time::date_range"],[13158,"polars_ops::series::ops::interpolation"],[13159,"polars_ops::series::ops::interpolation::interpolate_by"],[13160,"polars_ops::series::ops::is_first_distinct"],[13161,"polars_ops::series::ops::is_in"],[13162,"polars_ops::series::ops::is_last_distinct"],[13163,"polars_io::parquet::read::utils"],[13164,"polars_ops::series::ops::negate"],[13165,"polars_ops::series::ops::not"],[13166,"polars_ops::series::ops::int_range"],[13167,"polars_plan::client"],[13168,"polars_plan::dsl::functions::repeat"],[13169,"polars_ops::chunked_array::repeat_by"],[13170,"polars_ops::series::ops::replace"],[13171,"polars_ops::chunked_array::strings::strip"],[13172,"polars_ops::series::ops::unique"],[13173,"polars_io::partition"],[13174,"polars_io::csv::read::read_impl"],[13175,"polars_io::parquet::read::predicates"],[13176,"polars_io::parquet::read::mmap"],[13177,"polars_time::chunkedarray"],[13178,"polars_io::cloud::object_store_setup"],[13179,"polars_io::cloud"],[13180,"polars_ops::chunked_array::mode"],[13181,"polars_ops::chunked_array::nan_propagating_aggregate"],[13182,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Mf000`l0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000001010``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`00000000000010000000000000000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000`0000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABl00000000000000000000000000````````````````AD`ADdADfADhABn0AC`ACbACd0ACfACh54ACjACl5ACn5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADl000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Gb00000000000000000000000000000``AEbAEd1000101000`AEf``AEhAEj````AEnAFbAFd21021021021021021021021021210210`210210210210210``AGbKhHb0Jn`3Ml22````````42110Mn4AFf43434343434344334343215604321560431150431504315043AFh545426543326715432671544541G`7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653655657757777775776565653372656543782654378265334378265653437826513````AGf00000K`1111`111111110011111111111111111111``111111101111111110Cd2222222222`AHb0000000000000000000000````AHd00AHf00000001```00`0`10000AIh`````````````````````````````0AHl``AIjAJh33333EEl4``0``4FdFl6AHh6AHn077AI`AIb0AId`65;65;AIf0076<76<76<7676<76<7676<76<76<::777666AIl0`AInAJ``:9?::99?`AJbAJd`AJf0??=<AIh>=0>=00AJjAJlFdFlAJh021AHh0AJn1143?43AK`AIj065?2AKb0AKdAKf`AKh0`:9=0AKjAKlAKn0`AIb0AL`<ALbALdALfFdFlAIh210210210AId7321323232232232`ALh`AMbALnALj``````````````````````````````````````````````AMh00`0`0000000000000000000`000000`````>>````8787878787>>```````````B@f`JlEnDn```````21AGh`2``3`0320```32````3`````3200``32`3`3200``0`320``Dd04341```11`51431``431```AOl`3EEnEF`````B@n``9``875``875``875``875``5`666555B@b986``4``6BA`Ld1010Al<;9`<;`<``:3:```````````BAn``35`>=<`=`=<:=`=<::````:0`=<:``=<:``=<:``=<:``:<:`::ALl0<0:L`6:ANbB@dJlB@fEnB@hOj;NdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jB@lB@nAGhBA`ANbJl01L`1CfLhNdOdFfNfNhNlKlLbEhEjBjB`AnAhANdANb110ANf0ANh0EnJlL`0Dd0003OjANnALl3433:BC`5EFbDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGhBA`DdANdBC`L`EFbDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGhBA`EnAOl`JlB@`13L`0100000ANb`LhNdOdFfNfNhNlKlLbEhEjDd=B@bAOl>B@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jB@lB@nAGhBA`DdL`B@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jB@lB@nAGhBA`DdL`B@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jB@lB@nAGhBA`Dd4OjBAd00026En500`L`4BAfB@bAOlJlB@f6;99ANdBC`77EFbDjjCfLhCb<;:ANbB@d;:EnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGhBA`DdANdBC`L`0EFbDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGhBA`DdB@bJlB@fEnOjLd;:987L`CfLhNdOdFfNfNhNlKlLbEhEjAhANdDd1BC`L`EFbDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGhBA`B@`L`0000ANbJlOj0Dd0`0B@b3B@fEn0B@h5Ld>=<;7888888555777333222111666000>>>===<<<;;;9AOlAOnANdBAf9983B@d<<8776;55B@lB@n0AGhBA`>>>>>6BC`L`00EFbDjjCfLhCb=B@bAOlANb?Jl00000B@fEn0000B@hOj00Ld0NdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGh00BA`EnANb0L`01Dd00000001111110002ALl00030AOl9833333B@`544444051DnjCfLhCbNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhAOlB@n0ANbEnJlBBlALl444444Dd3B@f5OjLd9AGhBA`8L`09:6ANdBC`2EFbDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGhBA`En2DdANdBC`L`EFbDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGhBA`L`ANbBC`BBn333332JlDdEn00200055020AOl311101319313131911131111319ALl702173777777``2B@f338`BAf::49:::CfLhNdOdFfNfNhNlKlLbEhEjAhANb0Oj0L`0EEnEF`ANd33333333BAf5B@lB@n06B@hBC`:::::::188DdJlLd6;=;8CfLhNdOdFfNfNhNlKlLbEhEjAhL`0AOl111Dd2B@bANbJlB@fEnOjLd:B@lB@nAGhBA`5====BC`::9>>>9>CfLhNdOdFfNfNhNlKlLbEhEjAhL`00ANbEnOjLd203AGh440Dd6B@bAOl7B@dJlB@f9B@h98NdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jB@lB@nAGhBA`En2L`Dd111Jl3Ld7133ANf0ANh0BAd00045ANdBC`8EFbDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@l0B@nAGhBA`DdANdBC`L`EFbDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGhBA`JlEnDd21Ld61ANdBC`L`EFbDjjCfLhCbBAfB@bAOlANbB@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGhBA`1ANb0ALl10En1DdANdBC`L`EFbDjjCfLhCbBAfB@bAOl?B@dJlB@fEnB@hOjLdNdOdFfNfNhNlKlLbEhEjKnLnBjB`FhAnLjLfLlB@jAhB@lB@nAGhBA`EEnEF`ALlDd00Jl`````AOl`B@b10``AOn`````2121``BCl0000`00`0000000`0`BCn0000000000000000``BDbn000EFd`112101```111111121BD`302302`223002302302`3002230022222222`302302`0``````02302302023023022EFfEFh10```BEl`0BEj11``0``01AB`000000000000000000BG`BGb34210342222342342342`222421034210342421034222222222242224442`22222223422103422222222222222222`222242222222222222103422103421022222222222222222222222102222222222222222`222222222222422222222102222222222222222234222222221034222221034221034222222222210342222222``Fj0`0BHd11111111111111111111111111101111011111111111110101010101110101011111010111111101010111111111111111010111101111111110111111110101BEh122211222222221122221222222222221212122222222222222221222122212222222222212222222222122222122122222222222222212222221222222222221222222212221222222`BHj00000000000000000000000000000`BI`0``0``````BIhC``2`22222222210`222BHl1BFb40`1023BJbBIdBIb453762104537453745374537345621004537621045373162104453745444555`643445377`621044455377445335BIl4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648EFjEFl0``````````BJjBJl0`BJn0BK`BKb``1011110101010101010`10011010101010BF`211210210210210210`02102102100000022110`2102102121021```210210210210210``BNfBM`BCb`C@f1CJhCGj01`CHh`CBj5```CEn4AMhB@fBEl7`;``;;`CLdJlEnDn``?``````````7```?```CIhCFn`CFdAIhBNfCKbCJn``9CLh9AGh``BCb5`;``<``15<2;1`````CEdCFl``CJ``EFnCIjBGnBMf000CLn8;`=JlEn``````1`CK`BNf?`````````````````````````````````````0``0CEl`=`n>CIh`CJn``24CKb0031C@fBI`2CEn```````888884`````<CEfCEh`DGj7>CLh>AGh0``1`9JlEn``;`1`;13022``CFnEFnCIj`5BNf`CLnCBj22`CInBCbn`CJn;=:<`````BMfDEfCKb>=>77EG`A@`EFd38`BM`9CLb```=>AGh66688````;CKd0`````BNf``0=CLn9C@fBI`BEl66`CLhB@f8Jl2En:``130:``8CBjBGnCFdAIh<CEh```CEnAHlBCb``0BNfCK``CJl`AOl``CLn`BI```````CLbCFf?0?CJ``44DnEEnEF`CKb0EG`A@`CJn`CEn``n=DGjBIhC``````C@fBI``BCb```B@n``8`CLhB@f``Jl2EnAGh``2410``2410``2410``BNf0`BM`2```````>``````````CJh0`000`0CJn1Dn222001AIjAJhCLbCLn`````CEl``DOhCKd``1```2BCbCI``>`>``>C@fBI`BElDEf``````EGbCEdCEfCEnCFlAMh`;CKb0B@b`CFjEG`A@`JlEnAGh````BNf````````BCb`AOl`CBj0`CGf984<CFf202CJ`0CF`08CLnCFnC@fAIhBI`1<210<20CJnBA`LdEG`A@`443287656BNf?50?CEh6CGhCKdCBjBMf`=;CInCGj``==<;:AlCFdCFj<;CHh;`0`n``1CEdEElCFlCIhBElCJh>>BCb`DEfJlCLhEnAGhCMdBNf``````53`5`EFdAIhCF`0```CBjCFnCJn:ABlnBLnCL```Dn`BMf0````````FjB@b3```````:```````````BAn`?`CIhCKd`C@fBI`BJd```>`8DEfCMdCFnBNf0CLh1```BCb`922CKb33CJn4``14EGbCEdCEfCEnCFlAMhCL``;;```````BM`8<<``CIhBMf0n01CEh`FjABlCLn`````44```?BA`1`BCb=````CLh5``````BNf8000CGh53CKbBIhC`8``CJ`EEl8:8```B@n555`CK``6``C@fBI`B@f<Jl=En`n``>```2`<<<<<<`21AGh``?1``3`BM`BCbCKd98BNfCEhBMfCKb`3``5`2CJn;CLh;99``1```922`2511111111ABlBAnCBj`47?3><``?3><``?3><``?3><````CJ`CLn>`::`En?```;8`CGfAGh0=ALl0C@fBI`BJd``CEh>>`BCb`01``CKdCJn=0CI`AIhDn:?`CClBGdBMdBMnCDhCDjCDlCDnCE`BFdBGhCEbBHbCEdCEfCEhCEjABbA@jBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMd`BGdBKl`00``BL`1?AHhBLbBLd000BLf6BLh`BCbBLn1BM`BHb0BMb1BMd5`5`5BMf`N`CDnBMjCKnBMl00CKf<BLbBGd0>`>ACfACh1010AHl<BCb`0AHn011``22AI`27`BH`BNhBNjBNl62106AIb7<`0AId8=`BNnCKn`:ANf880ANh099`BO`BMlBLbBOd=1=N`MjBOhBOj000333C@b44C@f5ANnC@h9ALlC@j`699`BCbC@n0`CGlBLhCAbCAhCAlCB`CBb5`8`BM`BMf00000100CD`BNjAMjBMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`0CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdCD`BNjAMjBMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdBGdN`>BLb`ACd`3CDjCDnCKlCCb66CCh`BOdCCj2CCl`9;AIfBCbB@`>2201`1=1CDb2A@bCDdBH`CDfBLb10CGb`11`8`8`8:BGdBMdBMnCDhCDjCDlCDnCE`BFdBGhCEbBHbCEdCEfCEhCEjABbA@jBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdBLbCClBGdBMdBMnCDhCDjCDlCDnCE`BFdBGhCEbBHbCEdCEfCEhCEjABbA@jBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdN`CClBGdBMdBMnCDhCDjCDlCDnCE`BFdBGhCEbBHbCEdCEfCEhCEjABbA@jBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdCE`BFdBGh`CMjCDhCDlCDjCDnBHbN``BMjCElBKn``BGd`BAd000AEbAEd100033`CJj0CGbBLf`CGd<;CGjBMf`CHnCIlCLn`C@n`CMjCDh````BNjCNd4BNl9155``N`0BGdCNnBCb99``CO````BKl`CJj5COf0`4``4`4`4``4COh84CIl`CHf```0`````COlCOnCDdCKfD@`BHbCKh1CKjCM`CGdN`0BGdBMnCDjCDnBFdBGhCEhD@bBKnCElCF`CFbCFdCFfCFhCFlCG`CGbCGdCGfCGlCHfCHhBCbCHlCHnCI`CIbCIfCIhCIlCJ`BNb00N`000CKfCKhCKlCKnCL`CLbCLfBMfA@bBGnCLjBBbMjCLlCLnA@```N`0CD`BNjAMj0BMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNb0CJdCJfCJhCJjCJlCJnCK`N`0CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdCD`BNjAMj0BMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdCG`FdFl8BGd0009N``CE`BFdBGhBHbCEdCEfCEhBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlC@fCHfCHhBCbCHjCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNb0000CJdCJfCJhCJlCJnCK`N`CKbCKdBNfCKjCKlCKnCL`CLbCLdCLfBM`A@bBGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdBFb`7`BNlBCbBMf9D@lCIfBLn4BMb5N`000CD`BNjAMjBMjCBfCA`CCl0BGd0BMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`0CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdBCbBGd01BLbN```3B@`2BH`>=Oj?``CGb`CIfBMf666CGdCNd0```DAj92CE`BFdBGhBHbCEdCEfCEhABbBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlC@fCHfCHhBCb0CHjCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNb0CJdCJfCJhCJlCJnCK`N`00CKbCKdBNfCKjCKlCKnCL`CLbCLdCLfBM`A@bBH`0BGnCLhCLjBBbMjCLlA@`BJdCM`CMbCMdBCbAIj0BFd00BGh00BHb00CEd00CEf00CEh00ABb00BKn00CEl00CEn00CF`00CFb00CFd00CFf00CFh00CFj00CFl00CGb00CGd00CGf00CGh00CGj00CGl00CHf00CHh00BCb00CHn00CI`00CIb00CId00CIf00CIh00CIl00CIn00CBj00CJ`00CJb00CJd00CJf00CJh00CJl00CJn00CK`00N`00CKb00CKd00CKj00CKl00CKn00CL`00CLb00CLd00CLf00BM`00BGn00CLj00BBb00CLl00A@`00CMd00``DB`N`0BFd?BCb022```BGdBNj1AIl30`BMf4C@nA@j111ACfCCl701BLbBL`00BH`CGb;<`;<<AInAJ`5=>999AChDBhDBjAOnBMjCMjCDhCDlBLhCAbDBlBO`DBnCAhDC`DCbCNnCAlCB`CBbACf?>=:CAn`BGdBNlBCbBLb`1CHf0`BNbCDb44`N`0BOdCCjCCbCE`BFdBGhCEbBHb0CEdCEfCEhABbA@jBMlDCdBKnCElCEn0CF`0CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCHfCHhBCb0CHjCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBj0CJ`CJbBNbCJdCJfCJh0CJjCJl0CJn0CK`0N`00CKb0CKd0BNf0CKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMf0000A@bBH`BGnCLhCLjBBbMjCLlA@`BJdCM`CMbCMd`8CE`=`BMjCKnCKl`BCbCD`BNjAMj6CBfCA`CClBGd00BMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABb0DCbA@jCNnDKfCAnCAlCB`BKn0CElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGh0CGjCGlCGnCH`CHbCHdC@fCHfCHhBCb0000000000000CHjCHlCHnCI`CIbD@l0CIdCIfCIhCIjCIlCInCBj0CJ`CJbBNb0000000000CJdCJfCJhCJjCJlCJnCK`N`00000000000000000CKbCKdBNf0000CKfCKhCKjCKlCKnCL`0CLbCLdCLfBM`0000CChBMfDEfA@bBH`0BGnCLh0CLjBBbMj000000000000CLlCLnA@`BJdCM`CMbCMdDDjBMf000DDlDE`DEbAMj0N`5EGd00ADl13310732?CNn3311DEf55BNbCO`CB`DEhALl0`AJb1CIfBGdDEjAJd5BH`CCh`BCb`00N`BLbBNjBNl<43AJfB@`10CD`<CLhDnCEj00D@dBN`DDj?BNn`CAlCB`>??>>?6CGbN`0`DCdBBlALlBLbCMjCDhCDnBGdDFh11``BIlAJhBCb<10=8BFdBGhBHbCEdCEfCEhBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlC@fCHfCHhBCbCHjCHnCI`CIbCIdCIfCIhCIlCInCBjCJ`CJbCJdCJfCJhCJlCJnCK`N`CKbCKdBNfCKjCKlCKnCL`CLbCLdCLfBM`BGnCLhCLjBBbCLlA@`CMdDFl00BMdBNlBCbN`C@n0CDjCDn`DFnCOnCDdCKfD@`CKhBMjBKnABbCGb```>`CAbCGlBFd>=21N`0CLfBHj`3BGh``DCbCNnBMn:CD`BNjAMjBMjCBfCA`CClBGdBMd9CDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdABbACfBGdDEjA@jCChBMf````BCb``011CD`BNjAMjBMjCBfCA`CCl<BMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdBEhN`9>AMj1DKdDFdBCbBMfBH`=DGbBNl88CGbBBnBGf;MjBGl;8CBjCEn`;`1BHb1CIf<BLbCAn?`AJjBCb456`00`AJl1COlCOnCDd4=4`74`7A@j5>ABbBBb``N`CLhBGfDAj35CF`4BHb;:9?ALlBMfBH`DDj2DGjBNjBGdBNlDEjDGl3DGn0BMjBKn1BL`DH`CJj0BFd`:9ALlBCbBLbDHd>N```CFbBGd?<ABl00`5BNl7BH`37FdFlCHf;888`DHfBHbDHhCLhMj=====BCb0<BMdCDlCNnCDnCGbCId6DGn00000000000000000000AJh8N`19CGlCHnCIbCIlFdFl``6BGdDH`BCb`0BNn0BNb020302`22`1?1111CIjCLh``DDj`BNj8BNlAHh8N`DJfBLbCJjD@lCIf`BGd87?4`908AJnBCb6DJh7DBl`CO`BBbCG`CMbCKfD@`CKhCDd21`BNj=BNlAHh=0CE`CKjA@bDJfBLbD@lCIfDFnCOn<?>=CGd`BCbCOl3?CKfBHb0BLn14BMbFdFl=CMjCDhCDlBMnCDjCDnDKfCGbCAb1BNjBNlAIdBCbBLb01:CChOjBBb44`DFnCOnCDdD@`BHbCKhN`CF`3<``3DJj==BNnEEnDBhDBjEF`DJlAMjBMjCDhCDlBLh:CAbBHbDBlCEjBO`DBnD@bCAhDC`DCbCNnCAnCAlBKnCBbBNbN`CKfCKhBM`CChBH`BBbMj772AK`BLbCGh:`05CDhCDl2<<<<<10<<<<DKdDFdBMlCBfCA`CAnBCb0`0BMfAIj0``ABbA@jCHf?BGd6D@lCIfCGdFdFlCAlCB`CJjBFdBGhCEjAIlBMjCLfBHjCFh0BGdCChBCbBLbCOlCOnCDd0CH`CHdDKf77`CDnCIdCLlBHb9DFn9CGb22N`1BFdBGhBCb33````0:DH`0``CMbDJf3BGd8BH`888888`1AJn6DJhBLbCOlCOnCDd>CGdCHf0CGbDL`?N`00CAlCB`2222CMj;CDhCDlCDjCDn9CLlBLb99`9AKb0BLnBCbBMbBMf`5BGd?BL`N```5`C@n60BNn11``7`7`CChAKd<BNj7BNl;CFbBMjDFh;>AKf?BLbBCbDLl10101011101010101010101010101DLnCDb3CEj0140`CIlCJjCMjCDhCDlBMnCDjCDnCGbCKn0DGnBNbBCb0BMlBGd00000DM`AKh0DBlBO`5CAnCAlCB`CJjBMnCDnDKfCGbCId5`BMf2>`DFnCOnCDdCKfD@`CKhN`BGd00CGdCHfCE`BFdBGhBHbCEdCEfCEhBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlC@fCHfCHhBCbCHjCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNb0000CJdCJfCJhCJlCJnCK`N`CKbCKdBNfCKjCKlCKnCL`CLbCLdCLfBM`A@bBGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdCGl`AKhBMfBGdCAl0CBbDBlBO`DCb4CB`DBhBCbBH`AKjBLbBNj<BNl5AKl>6BKn7ACh58BGd00000CNdBMnCGbCLj1:48=<<6AKn=0=====`AIb;6:??60<N`CMjCDhCDl33C@nBLbBH`022`2`2BCbBFd>>CIl99BNjBGdBNlAL`68DNb9A@j8;;`;;;;;CFbCDdCKl;``>`>`>`>`>N`<BLn=BM`BMf0BMbBMjDH`BKn01`BNjBGdBNlAHhBCbDJfBLbBNbCBj=N`8BMd86ALb5DNf066ALd7BH``CGnCHbCHf`CKfCKh1CDdBGdCLn1CLhBNlDDj;ALf5DNjBLfBCbC@nBNj1DH`ABbCCl=BMdBMnCDhCDjCDlCDnCE`BFdBGhCEbBHbCEdCEfCEhCEjABbA@jBKnCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdBCbBNnCDdBHbCEnCF`5CBjCJhCJlCJnCK`N`CKbCKdBNfDDjCLlC@n0DH`CHnCIlBMfCFb0BGdBH`000``ABl00DNlBHb0CEj10CGd21ANf660ANh077N`BAd000AEbAEd1000CD`BNjAMjBMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`0CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdCJjDDjCD`BNjAMjBMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdCGbBNn0BCb11DJjCJbCJdCJfN`BH`11111BHbCGd133BOdCCbBN``4CEnCF`=CBjCJhCJlCJnCK`=CKbCKdBNfN`CD`BNjAMjBMjCBfCA`CClBGdBMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdCd`BMfAIdBNjBGdBNlBCbBLb`13432133N`0MjCGb4DOd0CAlCB`CDnCId`BMjBKnBH`0ALl:DAj>CLfBHj3434BNjBGdBNlAL`BCbBLbDNb187DOf0CJjN`CD`:AMjBMjCBfCA`CCl>BMdBMnCDhCDjCDlCDnBLhDKdDFdBNnCE`CAbBFdBGhCEbBHbBNlCEdDH`CEfDBlBL`CO`CEhCEjBO`DBnD@bCAhDOhDC`ABbDCbA@jCNnDKfCAnCAlCB`BKnCElCEnCBbCF`CFbCFdCFfCFhDHhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdC@fCHfCHhBCbCHjCHlCHnCI`CIbD@lCIdCIfCIhCIjCIlCInCBjCJ`CJbBNbCJdCJfCJhCJjCJlCJnCK`N`CKbCKdBNfCKfCKhCKjCKlCKnCL`CLbCLdCLfBM`CChBMfDEfA@bBH`BGnCLhCLjBBbMjCLlCLnA@`BJdCM`CMbCMdN`COlCOnCDd10CEhBHbCKh1A@b`CH`CHdCE`CKj4BMjCKfCAlCB`CDlCAbDCbCDhEEnEF`CNnCGb47BGdBKn111DBlBO`=4DKf49CGdDBnCAh1D@b1CBb90CAb0CKfCKhCDh8BNn1?19196BL`55322CGb>CAlCB`76765CDlDCbCNn5DBl5493936DC`3=:7BBb=<<=<;CGd>CMj==774BO`6;6;?CAb?3BGdCAh>9>49=<CHl294;:>=?02CDh4740CGb71><04CBb8522??<7=CAlCB`355BNn5CDlDCbCNn782107CKfCKh:>CGd>;:;:87>CMj<6:BKnCAb55>3>3BGdBH`0ALl1782ABl00000000000000000N`0CHnCIl`2222222BCbBLbCOlCOnCDdCKf`ALhEGfEGhEGj2102EGlEGnEH`EHb0EHdEHfEHhEHjEHlEHnEI`EIb55EIdEIfEIh14;3EIj:EIl49EInEJ`0>EJbEHb240;4:029513622><??>;EJdEJfEJh0EJjEJl4EJnEK`EKbEKd3EKf528EKh1EKj11098432323570;5EKlEKnEL`0ELbELdELfELhELj01ELl1ELnEM`EMbEMdEMfEMh697EFjEFl0EMj00EFfEFh10EMlEMnEN`21ENbENdENfENh03421ENj0CNb00``0E@h101`11100101010`10101010``1010101`01E@j00`00`000`0000`0`0000``````````BJjBJl0`AMbALnALj``````````````````````````````````EA`000000000000000EAb`CBh000000000000000EAd`0`00`0000000000000`00ENlENnEO`32103210321032103321032103`21033210321032103`2103EOb00`EAh``0`EAf0`0EAlEAj321032222310321032103221033332EAn21402140214214321433321432143214342143````````BOj0000CE`COlCOnD@`3DFn213232114021320213230232DLl0000000000000132`433543`EBb0000``007777EB`8111111111111111`11111111`EBj``EBd000000000`0000EBf11111211111ECd0````0000``CMlEBnECbEBl3421034203`323232`03103421034232110342034333103110321034243022`32103421034231021``01031321034210342103421034233111`ED``EOd``1EDb1201202020201201202120202220002012022012012022012012012012077``777766EDd`00000000000`0000B@f`JlEnDn```````21AGh`2``3`0320```32````3`````3200``32`3`3200``0`320``3230```00`40320``320```AOl`2EEnEF`````B@n``8``764``764``764``764``4`555444B@b875``4``5BA`Ld1010Al;:8`;:`;``939```````````BAn``35`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALl0;0ANf0ANh0ANn3`B@`0`BAd000`1Oj`AOn7777733DnBBl9BBn::```4EEnEF`;;::7777<<<10<`````AOl`B@b10``7`````1010````````````DDlDE`DEb`DAf00000000000000000000000000000000000000000000000000`BJn0`EDf000000000000000000``BNfCJh000111111CKbCJn33`03`CK`4144142221244444111114441224222CKd055355`51CJl443665555553555531446646633363631365636`13666166466364666366366664444246`4444446`1646`3344463333333336664633133````EGlEGnEH`EKlEKnEL`0ELbELdELfELhELj01ELl1ELnEM`EMbEMdEMfEMh697EMlEMnEN`21ENbENdENfENh03421ENj0`CJlCK`0`0EDh000`0000000000000000000000000000EDj000`0000000000000000000000000000````CFj0`````````EDl00000000000000000000000000000``````````DOb000000000`0000``000000000AMh00`````EE`CDd000000000000000000`````AKn0````FdFl1010101022```C@jC@n0000000``000000000`0000000`0`000`00000`0`0`0`0`00000`CCh0000``EOfEOhMb``0``AIjBHh2````02AbBLb111111`0101100`110010011101111111111111111EEf352035211222212212112252152522222203522035252222203521125242224222225552222221211522203522222222222222222222222222222222222222222222222222222222222222122111122222215222222`2035203522220BGf32333322033332232333333333332232232333323223333333333333333333333333333333333333333333333333333332315333533332`233222333233326233363322331233223223333333332332332223333363333333333333331463333333333146333333333333333146333332322214633323``Ef000000000000000000000EEj00`0```BLn111`0BMbBn33`3333321033333321021021033333``CDfGd10DAb0`00000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{l{An}}{l{An}}}}{{{f{{l{B`}}}}{f{{Bd{Bb}}}}}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{l{c}}e}{}Al{BfBh}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}}{{{l{Bj}}{l{Bj}}}}{{{f{{l{Bj}}}}{f{Bl}}}}{{{f{{l{B`}}}}{f{{l{B`}}}}}}{{{l{B`}}{l{B`}}}}{{{f{{l{c}}}}e}{}Al{BfBh}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{Ah}}}}{f{C`}}}Ab}{{{f{{l{{Cb{c}}}}}}{f{C`}}}AbCd}{{{f{{l{Cf}}}}{f{C`}}}Ab}{{{f{{l{An}}}}{f{C`}}}Ab}{{{f{{l{j}}}}{f{C`}}}Ab}{{{f{{l{c}}}}{f{C`}}}AbAl}{{{f{{l{B`}}}}{f{C`}}}Ab}{{{f{{l{Bj}}}}{f{C`}}}Ab}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cf}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cf}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dn{}{{Dh{Dj}}{Dl{Dj}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{E`{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}Eb}}{{{f{{l{c}}}}e}{{l{c}}}Al{{E`{Ch}{{Ad{Ch}}}}Eb}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{E`{{Ch{{f{Bl}}}}}{{Ad{{Ch{{Ed{Bl}}}}}}}}Eb}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{E`{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}Eb}}{{{f{{l{B`}}}}c}{{l{B`}}}{{E`{{Ch{{f{{Bd{Bb}}}}}}}{{Ad{{Ch{{Ed{{Bd{Bb}}}}}}}}}}Eb}}{{{f{{l{An}}}}c}{{l{An}}}{{E`{{Ch{d}}}{{Ad{{Ch{d}}}}}}Eb}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Eb}Dn}{{{f{{l{Cf}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Eb}Dn}{{{f{{l{Cf}}}}c}{{l{Cf}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{E`{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ej}}}}c}Ab{{E`{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{E`{}{{Ad{}}}}Eb}}{{{f{{l{c}}}}e}{{l{Bj}}}Dn{{Af{{f{DfEl}}}}}}{{{f{{l{An}}}}{f{E`}}}{{l{An}}}}{{{f{{l{B`}}}}{f{E`}}}{{l{B`}}}}{{{f{{l{Bj}}}}{f{E`}}}{{l{Bj}}}}{{{f{{l{c}}}}{f{E`}}}{{l{c}}}Al}{{{f{{l{Bj}}}}{f{E`}}}{{l{c}}}Dn}{{{f{{l{B`}}}}{f{E`}}}{{l{c}}}Dn}{{{f{{l{An}}}}{f{E`}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{E`}}}{{l{e}}}AlDn}{{{f{{l{B`}}}}c}{{l{B`}}}{{Af{{f{{Bd{Bb}}}}}{{Ad{{f{{Bd{Bb}}}}}}}}}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Af{{f{Bl}}}{{Ad{{f{Bl}}}}}}}}{{{f{Df{l{c}}}}e}bAl{{E`{}{{Ad{}}}}Eb}}{{{f{{l{c}}}}Eng}{{l{i}}}Dn{}{{Af{}{{Ad{e}}}}}Dn}{{{f{{l{Ah}}}}{f{E`}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Cf}}}}{f{E`}}}{{A`{{l{Cf}}n}}}}{{{f{{l{{Cb{c}}}}}}g{f{Df{Bd{e}}}}}bCd{}{{E`{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{c}}}}g{f{Df{Bd{e}}}}}bAl{}{{E`{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bd{c}}}}}b{}{{E`{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{An}}}}e{f{Df{Bd{c}}}}}b{}{{E`{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bj}}}}e{f{Df{Bd{c}}}}}b{}{{E`{{Ch{{f{Bl}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{B`}}}}e{f{Df{Bd{c}}}}}b{}{{E`{{Ch{{f{{Bd{Bb}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{E`{{f{Bl}}}{{Ad{{Ed{Bl}}}}}}Eb}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{E`{Ab}{{Ad{Ab}}}}Eb}}{{{f{{l{An}}}}c}{{l{An}}}{{E`{d}{{Ad{d}}}}Eb}}{{{f{{l{c}}}}e}{{l{c}}}Al{{E`{}{{Ad{}}}}Eb}}{{{f{{l{B`}}}}c}{{l{B`}}}{{E`{{f{{Bd{Bb}}}}}{{Ad{{Ed{{Bd{Bb}}}}}}}}Eb}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{E`{{f{c}}}{{Ad{c}}}}Eb}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Af{F`{f{Bl}}}{{Ad{F`}}}}Eb}}{{{f{{l{c}}}}}FbDn}{{{f{{l{j}}}}Fd}{{l{Ff}}}}{{{f{{l{Fh}}}}Fd}{{l{Ff}}}}{{{f{{l{Bj}}}}Fd}{{l{Ff}}}}{{{f{{l{B`}}}}Fd}{{l{Ff}}}}{{{f{{l{An}}}}Fd}{{l{Ff}}}}{{{f{{l{c}}}}Fd}{{l{Ff}}}Al}{{{f{{l{Bj}}}}{f{{Bd{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Fh}}}}{f{{Bd{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{c}}}}{f{{Bd{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}Al}{{{f{{l{B`}}}}{f{{Bd{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{An}}}}{f{{Bd{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{B`}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Bj}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{Ff}}n}}}Cd}{{{f{{l{An}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{c}}}}}{{A`{{l{Ff}}n}}}Al}`{{{f{{l{Cf}}}}}{{f{{l{Cf}}}}}}{{{f{{l{Bj}}}}}{{l{B`}}}}{{{f{{l{B`}}}}}{{f{{l{B`}}}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{Bj}}}}}{{f{{l{Bj}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DnDn{{Af{{Ch{Ef}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fn}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{l{An}}{l{An}}}}201120{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{{l{c}}}}}{{Cn{G`}}}Dn}``{{{f{{l{j}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{E`{}{{Ad{}}}}Eb}Al}{{{f{{l{Cf}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Fh}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bj}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{En}}}{{A`{Abn}}}Al}{{{f{{l{An}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{B`}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{j}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{B`}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Bj}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{c}}}}{f{En}}Gb}{{A`{Abn}}}Al}{{{f{{l{An}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Fh}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Gd}{{{f{{l{c}}}}e}{{A`{Abn}}}GdBh}{{{f{{l{c}}}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gh}}}}}}}Dn}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gh}}}}}}}Dn}{{{f{{l{c}}}}}{{f{{Gn{{Cn{Cl}}}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{Gn{{Cn{Cl}}}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}Dn}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DnAl}}`{fH`}{{{f{{l{c}}}}}{{A`{{f{Bd}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}Hb}bDn}{{{f{Df{l{c}}}}{f{{l{e}}}}Hb}bDnDn}{{{f{{l{c}}}}}{{`{Hd}}}Al}{{}{{l{c}}}Dn}{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{BfBh}}{{{l{c}}e}{}Al{BfBh}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{Ghb}{{{f{Df{l{c}}}}}bDn}1{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{An}}}}{{{f{{l{B`}}}}{f{{Bd{Bb}}}}}{{l{An}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBh}{{{f{{l{Bj}}}}{f{Bl}}}{{l{An}}}}0958312476{{{f{{l{Ah}}}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}{{{f{{l{Cf}}}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{Bl}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gn{Ab}}}}{{{f{{l{B`}}}}{f{{Bd{Bb}}}}}{{A`{{l{B`}}n}}}}{{{f{{l{An}}}}d}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bj}}}}{f{{l{An}}}}}{{A`{{l{Bj}}n}}}}{{{f{{l{{Cb{c}}}}}}{f{{l{An}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{B`}}}}{f{{l{An}}}}}{{A`{{l{B`}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}}{{A`{{l{c}}n}}}{{Dn{}{{Hl{Dj}}{Dl{Dj}}}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gh}}}Dn}`{{{f{{l{Cf}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{Ah}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{{Cb{c}}}}}}{f{DfHn}}}{{A`{bI`}}}Cd}{{{f{{l{c}}}}{f{DfHn}}}{{A`{bI`}}}Al}{{{f{{l{B`}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{Bj}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{An}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{c}}}}e}bDn{{Af{Ch}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ef}}}}}}{{{f{{l{Cf}}}}c}b{{Af{{Ch{Ef}}}}}}{c{{l{e}}}Cl{{Dn{}{{Ib{c}}}}}}{cc{}}0{{Ddc}{{l{e}}}Id{{Dn{}{{Ib{}}}}Dn}}{{{f{{l{c}}}}e}{{l{c}}}{{Dn{}{{Ib{}}}}Dn}Id}{{Dd{Gn{{Cn{Cl}}}}}{{l{c}}}Dn}{{Dd{Gn{{Cn{Cl}}}}En}{{l{c}}}Dn}{{DdGh{f{{Bd{Fj}}}}}{{A`{{l{j}}n}}}}{e{{l{Ah}}}{{If{Ab}}}{{Id{}{{Cj{c}}}}}}{e{{l{Bj}}}{{Ih{Bl}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Id{}{{Cj{{Hj{Gn{Ch{Ij}}}}}}}}}Al}{e{{l{{Cb{c}}}}}Cd{{Id{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{Ab}}}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{Fj}}}}}}}}{e{{l{B`}}}{{Ih{{Bd{Bb}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{e{{l{B`}}}{{Il{{Bd{Bb}}}}}{{Id{}{{Cj{c}}}}}}{e{{l{Bj}}}{{Il{Bl}}}{{Id{}{{Cj{c}}}}}}{c{{l{e}}}{{Id{}{{Cj{Ch}}}}}Al}{c{{l{An}}}{{Id{}{{Cj{{Ch{d}}}}}}}}{c{{l{An}}}{{Id{}{{Cj{d}}}}}}{{Dde}{{l{{Cb{c}}}}}Cd{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{An}}}{{D`{}{{Cj{{Ch{d}}}}}}}}{{Dde}{{l{B`}}}{{Ih{{Bd{Bb}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{Bj}}}{{Ih{Bl}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}:{e{{l{Fh}}}{{Il{{Bd{Bb}}}}}{{Id{}{{Cj{c}}}}}}{e{{l{Bj}}}{{Ih{Bl}}}{{Id{}{{Cj{{Ch{c}}}}}}}}:7>{e{{l{{Cb{c}}}}}Cd{{Id{}{{Cj{{Ch{c}}}}}}}}:{e{{l{Ah}}}{{If{Ab}}}{{Id{}{{Cj{c}}}}}}={e{{l{Fh}}}{{Ih{{Bd{Bb}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}};{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Dde}{{l{{Cb{c}}}}}Cd{{D`{}{{Cj{c}}}}}}{{Dde}{{l{B`}}}{{Ih{{Bd{Bb}}}}}{{D`{}{{Cj{c}}}}}}{{Dde}{{l{Bj}}}{{Ih{Bl}}}{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{An}}}{{D`{}{{Cj{d}}}}}}`{c{{l{Ah}}}{{In{}{{Cj{{Ch{Ab}}}}}}}}{c{{l{An}}}{{In{}{{Cj{{Ch{d}}}}}}}}{c{{l{An}}}{{In{}{{Cj{d}}}}}}{c{{l{e}}}{{In{}{{Cj{Ch}}}}}Al}{e{{l{B`}}}{{Ih{{Bd{Bb}}}}J`Jb}{{In{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bj}}}{{Ih{Bl}}J`Jb}{{In{}{{Cj{{Ch{c}}}}}}}}{e{{l{B`}}}{{Il{{Bd{Bb}}}}J`JbJd}{{In{}{{Cj{c}}}}}}{e{{l{Bj}}}{{Il{Bl}}J`JbJd}{{In{}{{Cj{c}}}}}}{{cDdEn}{{l{Ah}}}{{In{}{{Cj{{Ch{Ab}}}}}}}}{{DdGhc}{{A`{{l{j}}n}}}{{Jf{}{{Cj{{f{Ab}}}}}}Jh}}{{Dd{f{{Bd{c}}}}}{{l{{Cb{c}}}}}Cd}{{Dd{f{Bd}}}{{l{c}}}Al}{{Dd{f{{Bd{d}}}}}{{l{An}}}}{{Dd{f{{Bd{c}}}}}{{l{Bj}}}{{Ih{Bl}}}}{{Dd{f{{Bd{c}}}}}{{l{B`}}}{{Ih{{Bd{Bb}}}}}}{{Dd{f{{Bd{{Ch{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{Dd{f{{Bd{Ch}}}}}{{l{c}}}Al}{{Dd{f{{Bd{{Ch{d}}}}}}}{{l{An}}}}{{Dd{f{{Bd{{Ch{c}}}}}}}{{l{Bj}}}{{Ih{Bl}}}}{{Dd{f{{Bd{{Ch{c}}}}}}}{{l{B`}}}{{Ih{{Bd{Bb}}}}}}{c{{l{e}}}{{Jj{}{{Cj{Ch}}}}}Al}{c{{l{An}}}{{Jj{}{{Cj{{Ch{d}}}}}}}}{{DdGn}{{l{c}}}Al}{{DdGn{Ch{Ij}}}{{l{c}}}Al}{{DddGh}{{l{An}}}}{{Dd{f{Bl}}Gh}{{l{Bj}}}}{{Dd{f{{Bd{Bb}}}}Gh}{{l{B`}}}}{{Dd{f{{Bd{Bb}}}}Gh}{{l{Fh}}}}{{Dd{f{Ab}}Gh}{{l{Ah}}}}{{DdGh}{{l{c}}}Al}{{Dd{f{Ab}}Gh}{{l{Cf}}}}{{DdcGh}{{l{{Cb{c}}}}}Cd}{{DdGh}{{l{Bj}}}}{{DdGh}{{l{An}}}}{{DdGh}{{l{{Cb{c}}}}}Cd}{{DdGh}{{l{j}}}}{{DdGh}{{l{Cf}}}}{{DdGh}{{l{Ah}}}}{{DdGh}{{l{Fh}}}}{{DdGh}{{l{B`}}}}:{{{f{{l{c}}}}Gh}{{l{c}}}Dn}{{DdGh{f{En}}Gh}{{l{Cf}}}}{{DdGh{f{En}}}{{l{Ah}}}}{{{f{{l{c}}}}Gh}ChDn}{{{f{{l{j}}}}Gh}{{A`{Jln}}}}{{{f{{l{Ah}}}}Gh}{{A`{Jln}}}}{{{f{{l{Fh}}}}Gh}{{A`{Jln}}}}{{{f{{l{{Cb{c}}}}}}Gh}{{A`{Jln}}}Cd}{{{f{{l{B`}}}}Gh}{{A`{Jln}}}}{{{f{{l{Bj}}}}Gh}{{A`{Jln}}}}{{{f{{l{An}}}}Gh}{{A`{Jln}}}}{{{f{{l{c}}}}Gh}{{A`{Jln}}}Al}{{{f{{l{Cf}}}}Gh}{{A`{Jln}}}}{{{f{{l{Fh}}}}Gh}Jl}{{{f{{l{Cf}}}}Gh}Jl}{{{f{{l{Ah}}}}Gh}Jl}{{{f{{l{B`}}}}Gh}Jl}{{{f{{l{Bj}}}}Gh}Jl}{{{f{{l{An}}}}Gh}Jl}{{{f{{l{j}}}}Gh}Jl}{{{f{{l{c}}}}Gh}JlAl}{{{f{{l{{Cb{c}}}}}}Gh}JlCd}{{{f{{l{Cf}}}}Gh}{{Ch{Ab}}}}{{{f{{l{Ah}}}}Gh}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Fb}}}Dn}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}JnDn}{{{f{{l{Cf}}}}}Ab}{{{f{{l{Ah}}}}}Ab}1{{{f{{l{c}}}}}ChDn}0{{{f{{l{{Cb{c}}}}}}Gh}{{Ch{{f{K`}}}}}Cd}0{{{f{{l{j}}}}Fd}{{A`{{l{Fh}}n}}}}{{{f{{l{j}}}}Fd}{{A`{{Kb{Hf}}n}}}}{{{f{{l{c}}}}Gh}ChDn}{{{f{{l{Ah}}}}}Gh}{{{f{{l{Cf}}}}}Gh}{{{f{{l{Bj}}}}}Gh}{{{f{{l{Fh}}}}}Gh}{{{f{{l{An}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}dd}{{A`{C`n}}}Al}{{{f{{l{Bj}}}}dd}{{A`{C`n}}}}{{{f{{l{B`}}}}dd}{{A`{C`n}}}}{{{f{{l{Fh}}}}dd}{{A`{C`n}}}}{{{f{{l{Ah}}}}dd}{{A`{C`n}}}}{{{f{{l{Cf}}}}dd}{{A`{C`n}}}}{{{f{{l{{Cb{c}}}}}}dd}{{A`{C`n}}}Cd}{{{f{{l{c}}}}GhdGh}C`Fn}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBh}{{{f{{l{Bj}}}}{f{Bl}}}{{l{An}}}}{{{f{{l{B`}}}}{f{{Bd{Bb}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}6413520{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}{Ch{Gh}}}{{l{c}}}Dn}{{}Gh}0{{GhKd{Ch{Kf}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{f{En}}}}{{{f{{l{Cf}}}}}{{f{En}}}}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Dn}{{}c{}}0{{}Fj}{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}Ld{Ch{Dd}}}{{L`{LfLb}}}}{{{l{Lh}}{Ch{Gh}}Gh}{{A`{{L`{LjLh}}n}}}}{{{l{Lh}}{Ch{Gh}}Gh}{{L`{LjLh}}}}{{{l{Lb}}Ld}{{L`{LlLb}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{{Cb{c}}}}}}}{}Cd}{{{f{{l{An}}}}}}{{{f{{l{Bj}}}}}}{{{f{{l{B`}}}}}}{{{f{{l{Fh}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{Cf}}}}}}{{{f{{l{c}}}}}{{`{J`JbJfHdJj}}}Al}{{{l{c}}}AbDn}{{{l{Lh}}}Ab}{{{l{Lb}}}{{L`{LnLb}}}}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}{{l{An}}}M`}000{{{f{{l{c}}}}}{{l{An}}}Dn}02{{{f{{l{c}}}}}MbDn}{{{f{{l{c}}}}}{{`{Md}}}Dn}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dn}{{{f{{l{c}}}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Ij}}}}}}}}}}}Dn}`{{fc}H`{{Ih{Bl}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gh}}}Dn}{{{f{{l{c}}}}}{{Mf{c}}}Dn}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}10{{{f{{l{c}}}}}GhDn}0{{{f{{l{c}}}}e}{{l{c}}}Al{BfMh}}00{{{f{{l{c}}}}Gh}{{l{c}}}Dn}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBh}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Bj}}}}{f{Bl}}}{{l{An}}}}{{{f{{l{B`}}}}{f{{Bd{Bb}}}}}{{l{An}}}}4563210{{{f{{l{c}}}}}ChAl}{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{B`}}}}}{{Ch{{f{{Bd{Bb}}}}}}}}{{{f{{l{c}}}}}MjAl}{{{f{{l{An}}}}}Mj}{{{f{{l{Bj}}}}}Mj}{{{f{{l{B`}}}}}Mj}{{{f{{l{An}}}}}{{Ch{Aj}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}}{{Ch{Kd}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Fn}{{{f{{l{Ej}}}}}{{Ch{Aj}}}}{{{f{{l{Eh}}}}}Mj}{{{f{{l{Ej}}}}}Mj}{{{f{{l{c}}}}}MjFn}{{{f{Df{l{c}}}}{Kh{c}}}bDn}`{{{f{{l{c}}}}}{{Ml{c}}}Dn}{{{f{{l{c}}}}}{{f{{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{Ch{{Nb{G`}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{N`{{Mn{c}}}}}Dn}{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{B`}}}}}{{Ch{{f{{Bd{Bb}}}}}}}}{{{f{{l{c}}}}}{{Ch{Hj}}}Al}{{{f{{l{c}}}}}MjAl}{{{f{{l{An}}}}}Mj}{{{f{{l{Bj}}}}}Mj}{{{f{{l{B`}}}}}Mj}{{Dd{f{Bd}}}{{l{c}}}Al}{{Dd{f{{Bd{Bb}}}}GhGh}{{l{An}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{BfBh}}{{{f{{l{c}}}}e}{}Al{BfBh}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GhDn}{{{f{{l{c}}}}}{{A`{Ghn}}}Al}{{{f{{l{Bj}}}}}{{A`{Ghn}}}}{{{f{{l{B`}}}}}{{A`{Ghn}}}}{{{f{{l{c}}}}}{{f{Dd}}}Dn}{{Ddc}{{l{Lb}}}{{Ih{{Bd{Hf}}}}}}{{Ddc}{{l{Nd}}}{{Ih{{Bd{{Ch{Bb}}}}}}}}{{Ddc}{{l{Bj}}}{{Ih{{Bd{El}}}}}}{{Ddc}{{l{An}}}{{Ih{{Bd{{Ch{d}}}}}}}}{{Ddc}{{l{B`}}}{{Ih{{Bd{{Ch{{Gn{Bb}}}}}}}}}}{{Ddc}{{l{Ff}}}{{Ih{{Bd{{Ch{Fb}}}}}}}}{{Ddc}{{l{Bj}}}{{Ih{{Bd{{Ch{El}}}}}}}}{{Ddc}{{l{Nf}}}{{Ih{{Bd{{Ch{Kf}}}}}}}}{{Dde}{{l{{Cb{c}}}}}Cd{{Ih{{Bd{{Ch{c}}}}}}}}{{Dd{f{{Bd{c}}}}}{{l{{Cb{c}}}}}Cd}{{Ddc}{{l{B`}}}{{Ih{{Bd{{Ch{{Ed{{Bd{Bb}}}}}}}}}}}}{{Ddc}{{l{B`}}}{{Ih{{Bd{{Ed{{Bd{Bb}}}}}}}}}}{{Ddc}{{l{Nh}}}{{Ih{{Bd{{Ch{Nj}}}}}}}}{{Ddc}{{l{B`}}}{{Ih{{Bd{{Ch{{f{{Bd{Bb}}}}}}}}}}}}{{Ddc}{{l{Nl}}}{{Ih{{Bd{{Ch{Nn}}}}}}}}{{Ddc}{{l{Kl}}}{{Ih{{Bd{{Ch{O`}}}}}}}}{{Ddc}{{l{Lb}}}{{Ih{{Bd{{Ch{Hf}}}}}}}}{{Ddc}{{l{Lh}}}{{Ih{{Bd{{Ch{Ob}}}}}}}}{{Ddc}{{l{Eh}}}{{Ih{{Bd{{Ch{Kd}}}}}}}}{{Ddc}{{l{Ej}}}{{Ih{{Bd{Aj}}}}}}{{Ddc}{{l{B`}}}{{Ih{{Bd{{f{{Bd{Bb}}}}}}}}}}{{Ddc}{{l{Ej}}}{{Ih{{Bd{{Ch{Aj}}}}}}}}{{Ddc}{{l{Bj}}}{{Ih{{Bd{{Ch{{Ed{Bl}}}}}}}}}}{{Ddc}{{l{Eh}}}{{Ih{{Bd{Kd}}}}}}{{Ddc}{{l{Bj}}}{{Ih{{Bd{{Ed{Bl}}}}}}}}{{Ddc}{{l{Lh}}}{{Ih{{Bd{Ob}}}}}}{{Ddc}{{l{Bj}}}{{Ih{{Bd{{Ch{{f{Bl}}}}}}}}}}{{Ddc}{{l{Od}}}{{Ih{{Bd{{Ch{Of}}}}}}}}{{Ddc}{{l{Bj}}}{{Ih{{Bd{{f{Bl}}}}}}}}{{Dd{Oh{Fb}}}{{l{Ff}}}}{{Dd{Oh{Kf}}}{{l{Nf}}}}{{Dd{Oh{O`}}}{{l{Kl}}}}{{Dd{Oh{Hf}}}{{l{Lb}}}}{{Ddc}{{l{Kl}}}{{Ih{{Bd{O`}}}}}}{{Ddc}{{l{Nl}}}{{Ih{{Bd{Nn}}}}}}{{Ddc}{{l{Nh}}}{{Ih{{Bd{Nj}}}}}}{{Ddc}{{l{Nf}}}{{Ih{{Bd{Kf}}}}}}{{Ddc}{{l{Ff}}}{{Ih{{Bd{Fb}}}}}}{{Ddc}{{l{Od}}}{{Ih{{Bd{Of}}}}}}{{Ddc}{{l{Nd}}}{{Ih{{Bd{Bb}}}}}}{{Ddc}{{l{An}}}{{Ih{{Bd{d}}}}}}{{Ddc}{{l{B`}}}{{Ih{{Bd{{Gn{Bb}}}}}}}}{Dd{{l{{Cb{c}}}}}Cd}{{{f{{l{Bj}}}}GhGh}{{l{Bj}}}}{{{f{{l{B`}}}}GhGh}{{l{B`}}}}{{{f{{l{Fh}}}}GhGh}{{l{Fh}}}}{{{f{{l{Ah}}}}GhGh}{{l{Ah}}}}{{{f{{l{j}}}}GhGh}{{l{j}}}}{{{f{{l{Cf}}}}GhGh}{{l{Cf}}}}{{{f{{l{{Cb{c}}}}}}GhGh}{{l{{Cb{c}}}}}Cd}{{{f{{l{An}}}}GhGh}{{l{An}}}}{{{f{{l{c}}}}GhGh}{{l{c}}}Al}{{Dd{Gn{c}}}{{l{{Cb{c}}}}}Cd}{{Dd{Gn{c}}Ij}{{l{{Cb{c}}}}}Cd}{{DdGn}{{l{c}}}Al}{{{N`{Oj}}{Gn{{Cn{Cl}}}}FbFb}{{l{c}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{l{An}}}}{{{f{{l{An}}}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBh}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{B`}}}}{f{{Bd{Bb}}}}}{{l{An}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{An}}}}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{Bl}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}8{{{f{{l{Cf}}}}{f{{l{Cf}}}}}}48:72163{{{f{{l{c}}}}}GhDn}{{{f{{l{An}}}}}Gh}0`{{{f{{l{Ah}}}}}{{A`{{Hh{Hf}}n}}}}{{{f{{l{Cf}}}}}{{A`{{Hh{Hf}}n}}}}`{{{f{{l{Bj}}}}}{{`{{Ol{}{{Cj{{Ch{{f{Bl}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{{l{Bj}}}}}{{`{On}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{c}}}}}MjAl}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fn}{{{f{{l{Ej}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Kd}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{Mjn}}}Fn}{{{f{{l{Ej}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{Eh}}}}AjA@`}{{A`{Mjn}}}}{{DdGhAj}{{A`{{l{An}}n}}}}{{DdGhAjAj}{{A`{{l{c}}n}}}Al}{{DdGh}{{l{c}}}Al}{{DdGhAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}}{{Ch{Ij}}}Dn}{{{f{{l{c}}}}}{{f{Oj}}}Dn}{{{f{{l{Eh}}}}}Ab}{{{f{{l{Od}}}}}Ab}{{{f{{l{Kl}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Ej}}}}}Ab}{{{f{{l{Ff}}}}}Ab}{{{f{{l{Nh}}}}}Ab}{{{f{{l{Lb}}}}}Ab}{{{f{{l{Nl}}}}}Ab}{{{f{{l{Nf}}}}}Ab}{{{f{{l{Nd}}}}}Ab}26041358:97{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{BfBh}}{{{f{{l{c}}}}e}{}Al{BfBh}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDn}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{{l{{Cb{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Fh}}}}}{{l{Fh}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{B`}}}}}{{l{B`}}}}{{{f{{l{Cf}}}}}{{l{Cf}}}}{{{f{{l{c}}}}{f{E`}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Ghe}{{A`{{l{c}}n}}}M`{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}Ghdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{Df{l{c}}}}{f{{Bd{Fb}}}}e}{{A`{Abn}}}A@d{{Id{}{{Cj{Ch}}}}}}{{{f{{l{An}}}}{f{{Bd{Fb}}}}c}{{A`{Abn}}}{{Id{}{{Cj{{Ch{d}}}}}}}}{{{f{{l{Bj}}}}{f{{Bd{Fb}}}}c}{{A`{Abn}}}{{Id{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{{{f{{l{B`}}}}c{Ch{{f{{Bd{Bb}}}}}}}{{A`{{l{B`}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{Bj}}}}c{Ch{{f{Bl}}}}}{{A`{{l{Bj}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Id{}{{Cj{Fb}}}}}}{{{f{{l{An}}}}c{Ch{d}}}{{A`{{l{An}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{B`}}}}ce}{{A`{{l{B`}}n}}}{{Id{}{{Cj{Fb}}}}}{{E`{{Ch{{f{{Bd{Bb}}}}}}}{{Ad{{Ch{{Gn{Bb}}}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Id{}{{Cj{Fb}}}}}{{E`{Ch}{{Ad{Ch}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Id{}{{Cj{Fb}}}}}{{E`{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{Bj}}}}ce}{{A`{{l{Bj}}n}}}{{Id{}{{Cj{Fb}}}}}{{E`{{Ch{{f{Bl}}}}}{{Ad{{Ch{El}}}}}}}}{{{f{{l{Bj}}}}c}A`A@f}{{{f{{l{B`}}}}c}A`A@f}{{{f{{l{j}}}}c}A`A@f}{{{f{{l{c}}}}e}A`AlA@f}{{{f{{l{Cf}}}}c}A`A@f}{{{f{{l{An}}}}c}A`A@f}{{{f{{l{Ah}}}}c}A`A@f}{{{f{{l{Bj}}}}{f{{l{An}}}}{Ch{{f{Bl}}}}}{{A`{{l{Bj}}n}}}}{{{f{{l{An}}}}{f{{l{An}}}}{Ch{d}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{{l{B`}}}}{f{{l{An}}}}{Ch{{f{{Bd{Bb}}}}}}}{{A`{{l{B`}}n}}}}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDn}{{{f{Df{l{Ah}}}}En}b}{{{f{Df{l{c}}}}Fb}bDn}{{{f{Df{l{c}}}}Mb}bDn}{{{f{{l{j}}}}Hf}{{l{j}}}}{{{f{{l{Cf}}}}Hf}{{l{Cf}}}}{{{f{{l{{Cb{c}}}}}}Hf}{{l{{Cb{c}}}}}Cd}{{{f{{l{B`}}}}Hf}{{l{B`}}}}{{{f{{l{Fh}}}}Hf}{{l{Fh}}}}{{{f{{l{Ah}}}}Hf}{{l{Ah}}}}{{{f{{l{Bj}}}}Hf}{{l{Bj}}}}{{{f{{l{An}}}}Hf}{{l{An}}}}{{{f{{l{c}}}}Hf}{{l{c}}}Al}{{{f{{l{{Cb{c}}}}}}Hf{Ch{{Cb{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{Cf}}}}Hf{Ch{{f{Ab}}}}}{{l{Cf}}}}{{{f{{l{Ah}}}}Hf{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{Fh}}}}Hf{Ch{{f{{Bd{Bb}}}}}}}{{l{Fh}}}}{{{f{{l{B`}}}}Hf{Ch{{f{{Bd{Bb}}}}}}}{{l{B`}}}}{{{f{{l{Bj}}}}Hf{Ch{{f{Bl}}}}}{{l{Bj}}}}{{{f{{l{An}}}}Hf{Ch{d}}}{{l{An}}}}{{{f{{l{c}}}}HfCh}{{l{c}}}Al}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}HfGh}{{l{c}}}Dn}0{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{B`}}}}d}{{l{B`}}}}{{{f{{l{Bj}}}}d}{{l{Bj}}}}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Fh}}}}d}{{l{Fh}}}}{{{f{{l{c}}}}Fd}{{l{c}}}Al}{{{f{{l{B`}}}}Fd}{{l{B`}}}}{{{f{{l{Bj}}}}Fd}{{l{Bj}}}}{{{f{{l{Fh}}}}Fd}{{l{Fh}}}}{{{f{{l{An}}}}Fd}{{l{An}}}}{{{f{{l{j}}}}Fd}{{l{j}}}}{{{f{{l{c}}}}Hf}{{Hj{{l{c}}{l{c}}}}}Dn}0{{{f{{l{c}}}}Bb}{{Ch{Aj}}}Al}{{{f{{l{Ej}}}}Bb}Mj}{{{f{{l{c}}}}Bb}MjFn}{{{f{{l{Eh}}}}Bb}Mj}{{{f{{l{j}}}}}{{f{{Bd{Oj}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{l{c}}e}{}Al{BfBh}}{{{f{{l{c}}}}e}{}Al{BfBh}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}ChAl}{{{f{{l{An}}}}}{{Ch{Fb}}}}{{{f{{l{B`}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{An}}}}}Mj}{{{f{{l{c}}}}{Ch{Gh}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{{l{Ff}}}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dn{{Ih{{Bd{Fb}}}}A@h}}{{{f{{l{c}}}}{f{{Bd{A@j}}}}Mb}{{l{c}}}Dn}{{{f{{l{c}}}}{f{{Bd{A@j}}}}}{{l{c}}}Dn}{{{f{{l{B`}}}}{f{{l{Ff}}}}}{{l{B`}}}}{{{f{{l{B`}}}}{f{c}}}{{l{B`}}}{{Ih{{Bd{Fb}}}}A@h}}{{{f{{l{Ah}}}}{f{c}}}{{l{Ah}}}{{Ih{{Bd{Fb}}}}A@h}}{{{f{{l{Cf}}}}{f{c}}}{{l{Cf}}}{{Ih{{Bd{Fb}}}}A@h}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dn{}{{Hl{Dj}}{A@l{Dj}}{Dh{Dj}}}}Dn}{{Ih{{Bd{Fb}}}}A@h}}{{{f{{l{c}}}}{f{{l{Ff}}}}}{{l{c}}}{{Dn{}{{Hl{Dj}}{A@l{Dj}}{Dh{Dj}}}}Dn}}{{{f{{l{Ah}}}}{f{{l{Ff}}}}}{{l{Ah}}}}{{{f{{l{Bj}}}}{f{c}}}{{l{Bj}}}{{Ih{{Bd{Fb}}}}A@h}}{{{f{{l{Bj}}}}{f{{l{Ff}}}}}{{l{Bj}}}}{{{f{{l{j}}}}{f{{l{Ff}}}}}{{l{j}}}}{{{f{{l{Cf}}}}{f{{l{Ff}}}}}{{l{Cf}}}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{Ih{{Bd{Fb}}}}A@h}}`{{{f{{l{c}}}}dA@n}{{Gn{{Gn{AA`}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bj}}}}Gh}{{A`{Abn}}}}{{{f{Df{l{Ah}}}}En}b}{{{f{Df{l{Cf}}}}En}b}{{{f{{l{Ah}}}}}{{A`{{AAh{AAb{AAf{{AAd{Gh}}}}}}n}}}}{{{f{{l{c}}}}}{{A`{{AAh{{AAj{f}}{AAf{{AAd{Gh}}}}}}n}}}Al}{fc{}}{{{f{{l{B`}}}}}{{l{Bj}}}}{{{f{{l{c}}}}}{{Gn{Ch}}}Al}{{{f{{l{c}}}}}{{AAl{Gn{Gn{Ch}}}}}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cf}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Eb}Dn}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Eb}Dn}{{{f{{l{Cf}}}}c}{{A`{{l{Cf}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cf}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{Bj}}e}}}Dn{}{{Af{{f{DfEl}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Id{}{{Cj{{A`{ce}}}}}}}{{Dn{}{{Ib{c}}}}Dn}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAn}0{{{f{{l{{Cb{c}}}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{B`}}}}}{{A`{{l{B`}}n}}}}{{{f{{l{Bj}}}}}{{A`{{l{Bj}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{l{j}}}AB`}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}Gh}{}Dn}{{{f{{l{c}}}}Bb}{{Ch{Aj}}}Al}{{{f{{l{c}}}}Bb}MjFn}{{{f{{l{Eh}}}}Bb}Mj}{{{f{{l{Ej}}}}Bb}Mj}{{{f{{l{Ej}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Od}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bj}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{B`}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}Cd}{{{f{{l{Fh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fh}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{B`}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}Cd}{{{f{{l{Ej}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bj}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Od}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cf}}}}}Gh}{{Ddc}{{l{e}}}Cl{{Dn{}{{Ib{c}}}}Dn}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dn{}{{Ib{c}}}}Dn}}{{{f{{l{c}}}}{Gn{{Cn{Cl}}}}}{{l{c}}}Dn}{{{l{c}}Dd}{{l{c}}}Dn}{{{f{{Bd{ABb}}}}e}c{}{{ABd{{f{{l{Ff}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Ij}}}{{l{j}}}}{{{l{j}}{l{An}}}{{l{j}}}}{{{f{{l{c}}}}Mb}{{l{c}}}Dn}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}23012323013223102332013223103223{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Cf}}}}{f{{l{c}}}}e}{{l{Cf}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dn{}{{A@l{Dj}}}}}}{{{f{{l{j}}}}{f{{l{An}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}````{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}g{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABn}}{f{Cl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}}b}{{{f{DfACb}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jj}}{{{f{Df{ACd{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jj}}{{{f{Df{ACd{c}}}}e}bAl{{D`{}{{Cj{}}}}Jj}}{{{f{DfACf}}}b}{{{f{DfACh}}}b}65{{{f{DfACj}}}b}{{{f{DfACl}}}b}{{{f{DfACb}}}b}{{{f{DfACn}}}b}{{{f{Df{ACd{c}}}}}bAl}{{{f{Df{AD`{c}}}}}b{ADbA@h}}{{{f{DfADd}}}b}{{{f{DfADf}}}b}{{{f{Df{ADh{c}}}}}bAl}{{{f{DfABn}}{Ch{{f{Cl}}}}}b}{{{f{DfABn}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACd{c}}}}{Ch{{f{Bd}}}}}bAl}{{{f{Df{AD`{c}}}}{Ch{e}}}b{ADbA@h}{{Ih{c}}}}{{{f{DfACh}}{Ch{c}}}b{}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACb}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACn}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACd{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACd{c}}}}{f{Bd}}}bAl}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{Bl}}}}}}}}Jj}}{{{f{DfACl}}c}b{{D`{}{{Cj{{Ch{{f{{Bd{Bb}}}}}}}}}}Jj}}{{{f{DfACh}}c}b{}}{{{f{Df{AD`{c}}}}e}b{ADbA@h}{{Ih{c}}}}{{{f{DfADd}}d}b}{{{f{Df{ADh{c}}}}}bAl}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{Bl}}}}}}}}{{{f{DfACl}}c}b{{D`{}{{Cj{{f{{Bd{Bb}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{AD`{c}}}}}{{AD`{c}}}{ADbA@h}}{{{f{ADd}}}ADd}{{{f{ADf}}}ADf}{{{f{{ADh{c}}}}}{{ADh{c}}}{JhAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABn}{{}AC`}{Gh{{f{c}}}{}}0000000000{Gh{{f{Dfc}}}{}}0000000000{Ghb}0000000000{{{f{ACj}}}d}{{{f{ACl}}}d}{{{f{ACb}}}d}{{{f{{ACd{c}}}}}dAl}{{{f{ACf}}}d}{{{f{ACj}}}{{f{Oj}}}}{{{f{ACl}}}{{f{Oj}}}}{{{f{ACb}}}{{f{Oj}}}}{{{f{{ACd{c}}}}}{{f{Oj}}}Al}{{{f{ACf}}}{{f{Oj}}}}{ACh{{l{c}}}Dn}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfAC`}}}{{l{Ah}}}}{{{f{DfACn}}}{{l{Ah}}}}{{{f{DfACf}}}{{l{Ah}}}}{{{AD`{Bl}}}{{l{Bj}}}}{{{AD`{{Bd{Bb}}}}}{{l{B`}}}}{ADd{{l{An}}}}{ADfADj}{{{ADh{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADl{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADl{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bd{c}}}}}ADl{}}{{Dd{f{{Bd{{Ch{c}}}}}}}ADl{}}{{{f{En}}GhGhDd}{{Cn{ACf}}}}{{}Gh}0000000000{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfACl}}}{{Cn{Cl}}}}{{{f{DfACb}}}{{Cn{Cl}}}}{{{f{Df{ACd{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACf}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGh{Ch{En}}}ABn}{{DdGh{Ch{En}}}AC`}{{DdGhGh}ACj}{{DdGhGh}ACl}{{DdGhGh}ACb}{{DdGh}ACn}{{DdGhGhEn}{{ACd{c}}}Al}{{DdGh}{{AD`{c}}}{ADbA@h}}{{DdGh}ADd}{{DdGh}ADf}{{DdGh}{{ADh{c}}}Al}{{DdGhGhEnEn}{{ACd{c}}}Al}{{{f{DfACh}}}b}{{{f{DfADd}}}b}{{{f{DfADf}}}b}{{{f{Df{ADh{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAn}0000000000{{}c{}}0000000000````````{{{f{DfACf}}}b}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACf}}}d}{{{f{ACf}}}{{f{Oj}}}}{{{f{DfACf}}}{{l{Ah}}}}{{{f{En}}GhGhDd}{{Cn{ACf}}}}{{{f{DfACf}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Gb}}}Gb}{{f{f{Dfc}}}b{}}{fb}{{}Gb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{Gb}}}ADn}{Ghb}{{{f{Gb}}{f{Gb}}}d}{{f{f{c}}}d{}}00{{{f{Gb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{Gb}}{f{Dfc}}}bAE`}{{}Gh}{{}c{}}{{{f{Gb}}c}A`A@f}{{{f{Gb}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6``{{AEbDd}{{l{c}}}Dn}{{AEd{f{{l{c}}}}}{{l{c}}}Dn}10{{AEdDdEn}{{l{c}}}Dn}0{{AEbDd}{{A`{{l{c}}e}}}Dn{}}{{AEd{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AEdDdEn}{{A`{{l{c}}e}}}Dn{}}0`{AEfAEf}``{{AEhDdEn}e{}{{AEj{c}}}}{{eDdEn}AEj{}{{In{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00{Ghb}00{cc{}}00{{}Gh}00{{}c{}}00000{{{f{AEl}}}AEn}{{{f{AF`}}En}AFb}{{{f{DfAEn}}}Ch}{{{f{DfAFb}}}Ch}{{{f{Df{AFd{c}}}}}ChD`}21{{{f{Df{AFd{c}}}}}ChHd}`{{{f{AEn}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{AFb}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{{AFd{c}}}}}{{Hj{Gh{Ch{Gh}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00<<<`````````````````````````{{fh}b}0000{{}Hb}{{}Jn}{{HbHb}Hb}{{JnJn}Jn}{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}3210{{{f{Hb}}}Fb}0{{{f{Jn}}}Bb}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mn{c}}}}}{{Cn{G`}}}Dn}{{{f{{Mn{c}}}}}{{Mn{c}}}Dn}{{{f{{Kh{c}}}}}{{Kh{c}}}Dn}{{{f{AFf}}}AFf}{{{f{Hb}}}Hb}{{{f{Jn}}}Jn}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFh}}}b}{HbHb}{JnJn}{{{f{Hb}}Hb}d}{{{f{Jn}}Jn}d}{{}{{Mn{c}}}Dn}{{}{{Kh{c}}}Dn}{{}Hb}{{}Jn}{Gh{{f{c}}}{}}{{{f{{Ml{c}}}}}fDn}111111{Gh{{f{Dfc}}}{}}000000{c{{A`{Jn}}}ADn}{{HbHb}Hb}{{JnJn}Jn}{{}d}{{{f{G`}}}{{Ch{Fb}}}}{{{Kh{c}}Fb}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}}{{Ch{Fb}}}Dn}{{{Kh{c}}{Ch{Fb}}}{{Kh{c}}}Dn}{Ghb}000000=<5{{{f{Hb}}{f{Hb}}}d}{{{f{Jn}}{f{Jn}}}d}7{{{f{DfHb}}c}b{{Id{}{{Cj{Hb}}}}}}{{{f{DfJn}}c}b{{Id{}{{Cj{Jn}}}}}}{{{Kh{c}}d}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{d}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}Hb}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}Hb}{{Kh{e}}}DnDn}{{{Kh{c}}Jn}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Jn}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{f{DfHn}}}{{A`{bI`}}}Dn}{{{f{AFf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Hb}}{f{DfHn}}}{{A`{bI`}}}}0000{{{f{Jn}}{f{DfHn}}}{{A`{bI`}}}}0000{cc{}}000000{Fb{{Ch{Hb}}}}{Bb{{Ch{Jn}}}}{FbHb}0{BbJn}010{cHb{{Id{}{{Cj{Hb}}}}}}{cJn{{Id{}{{Cj{Jn}}}}}}{{{f{Bl}}}{{Ch{Hb}}}}{{{f{Bl}}}{{Ch{Jn}}}}{{{f{{Kh{c}}}}}{{Ch{Fb}}}Dn}{{{f{{Kh{c}}}}}dDn}{{{f{Jn}}}d}{{{f{G`}}}Jn}{{{f{{Kh{c}}}}}JnDn}0{{{f{{Kh{c}}}}}{{Ch{f}}}Dn}0{{{f{Df{Mn{c}}}}}{{f{Df{Kh{c}}}}}Dn}{{{f{Jn}}}Mb}{{}Gh}000000{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{{HbHb}Hb}{{JnJn}Jn}{{{f{Hb}}Hb}d}{{{f{Jn}}Jn}d}{{}c{}}000000{Hb}{Jn}{{{f{Hb}}}d}{{{f{Jn}}}d}{{{f{{Kh{c}}}}}dDn}21{{{f{{Kh{c}}}}}MbDn}111{{{f{Hb}}}{{AFj{Hb}}}}{{{f{Jn}}}{{AFj{Jn}}}}{{{f{Hb}}}{{AFl{Hb}}}}{{{f{Jn}}}{{AFl{Jn}}}}{{}d}{{}{{f{{AG`{AFn}}}}}}{{{f{G`}}}{{Ch{Mj}}}}{{{f{{Kh{c}}}}}{{Ch{Mj}}}Dn}{{{Kh{c}}}{{Kh{c}}}Dn}{{{Kh{c}}Ch}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{Kh{c}}}{{AGb{c}}}Dn}4231{{{Kh{c}}}{{Mn{c}}}Dn}{HbHb}{JnJn}{{{f{{Mn{c}}}}}{{Nb{{Kh{c}}}}}Dn}{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{{{f{Jn}}c}A`A@f}{{{f{DfHb}}Hbd}b}{{{f{DfJn}}Jnd}b}{{{f{Df{Kh{c}}}}{Ch{Fb}}}bDn}{{{f{Df{Kh{c}}}}d}bDn}{{{f{DfJn}}d}b}{{{f{Df{Kh{c}}}}Jn}bDn}{{{f{Df{Kh{c}}}}Ch}bDn}033{{{f{Df{Kh{c}}}}Mb}bDn}{{{f{DfJn}}Mb}b}{{{Kh{c}}Mb}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Mb}}}{{Kh{c}}}Dn}{{HbHb}Hb}{{JnJn}Jn}?>10{{{Mn{c}}}{{Kh{c}}}Dn}{fc{}}0000{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mn{c}}}}}{{Ch{{Nb{{Kh{c}}}}}}}Dn}{{{f{{Mn{c}}}}}{{Ch{{Kj{{Kh{c}}}}}}}Dn}{fAAn}000000:9{{{f{{Mn{c}}}}}{{f{{AGd{G`}}}}}Dn}{{}c{}}000000{AFhAFh}{{{f{{Mn{c}}}}}{{Kj{{Kh{c}}}}}Dn}````{{fh}b}{{{f{{AGf{c}}}}Gh}{{Hj{{AGf{c}}{AGf{c}}}}}Cd}{e{{AGf{c}}}Cd{{Id{}{{Cj{{f{c}}}}}}}}{e{{AGf{c}}}Cd{{Id{}{{Cj{{Ch{{f{c}}}}}}}}}}{{AGhe}g{}{{Id{}{{Cj{c}}}}}{}}0{{{f{K`}}}{{f{AGj}}}}{{{f{{AGf{c}}}}}{{f{AGj}}}Cd}{{{f{Df{AGf{c}}}}}{{f{DfAGj}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGf{c}}}}Gh}dCd}{{{f{{AGf{c}}}}}{{AGf{c}}}{JhCd}}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{{AGf{c}}}}}{{f{AGh}}}Cd}{{{f{{f{K`}}}}{f{{f{K`}}}}}d}{{{f{K`}}{f{K`}}}d}{{{f{{AGf{c}}}}{f{DfHn}}}{{A`{bI`}}}{AGlCd}}{{{Gn{c}}}{{AGf{c}}}Cd}{cc{}}{{GhAGh}{{AGf{c}}}Cd}{{{f{{AGf{c}}}}Gh}{{Ch{{f{c}}}}}Cd}{{}AGh}{{{f{Ij}}{f{{AGf{c}}}}{f{{AGf{c}}}}}{{AGf{c}}}Cd}{{AGh{f{Ij}}}{{AGf{c}}}Cd}{{{f{Ij}}{f{{AGf{c}}}}}{{AGf{c}}}Cd}0{{}Gh}{{}c{}}{{{f{{AGf{c}}}}}{}Cd}{{{f{{AGf{c}}}}Gh}dCd}0{{fGh}d}{{{f{{AGf{c}}}}}{{AH`{{f{c}}{Gf{c}}AGn}}}Cd}{{{f{{AGf{c}}}}}{{AH`{AGn}}}Cd}{{{f{{AGf{c}}}}}GhCd}0`{db}{{{f{Df{AGf{c}}}}{Ch{Ij}}}bCd}{{{f{Df{AGf{c}}}}GhGh}bCd}{{fGhGh}c{}}01{{{f{{AGf{c}}}}Gh}{{Hj{{Cn{Cl}}{Cn{Cl}}}}}Cd}0{{{f{K`}}}{{Cn{K`}}}}{{{f{{AGf{c}}}}}{{Cn{Cl}}}Cd}{fc{}}{g{{A`{{AGf{c}}e}}}Cd{}{{Id{}{{Cj{{A`{{f{c}}e}}}}}}}}{g{{A`{{AGf{c}}e}}}Cd{}{{Id{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{{AGhg}{{A`{ie}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{{f{K`}}}{{f{Bl}}}}{{}{{f{Bl}}}}{{{f{{AGf{c}}}}}{{Ch{{f{Ij}}}}}Cd}{{{f{{AGf{c}}}}Gh}{{f{c}}}Cd}0{{{f{{AGf{c}}}}Gh}{}Cd}{{{f{{AGf{c}}}}}{}Cd}{{{f{{AGf{c}}}}}{{Gf{c}}}Cd}{{}c{}}{{{AGf{c}}{Ch{Ij}}}{{AGf{c}}}Cd}{{{f{{AGf{c}}}}{Ch{Ij}}}{{Cn{Cl}}}Cd}1`{{{f{Df{AHb{c}}}}}bCd}0{{{f{Df{AHb{c}}}}{Ch{c}}}bCd}{{{f{Df{AHb{c}}}}{f{AGj}}}bCd}{{{f{Df{AHb{c}}}}c}bCd}{{{f{Df{AHb{c}}}}{f{AGj}}}{{A`{bn}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AHb{c}}}Cd}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{AHb{c}}}{{l{{Cb{c}}}}}Cd}{cc{}}{{{f{{AHb{c}}}}DdGhGh}{{Cn{ACf}}}Cd}{{}Gh}{{}c{}}{{DdGh}{{AHb{c}}}Cd}{{{f{Df{AHb{c}}}}}AbCd}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5````{{{f{DfAHd}}}b}{{{f{DfAHd}}{Ch{{f{AGj}}}}}b}{{{f{DfAHd}}{f{AGj}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{AHf}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{AHd}}DdGhGh}{{Cn{ACf}}}}{{DdGh}{{Cn{AHd}}}}{{}{{N`{E`}}}}{{}AGh}{{}Gh}{{}c{}}{{}d}`{{{Cn{E`}}{N`{E`}}AGh}b}{{{f{DfAHd}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6`````````````````````````````````````````````````{{fh}b}00{{{f{AHh}}}Aj}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{c}}}}}}Eb}}{{{f{AHn}}{f{E`}}}AHn}{{{f{AHn}}{f{E`}}}{{l{c}}}Dn}{{{f{{AHl{}{{AHj{c}}}}}}i{f{Df{Bd{g}}}}}b{}{}{}{{E`{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{E`{e}{{Ad{c}}}}Eb}}{{{f{AI`}}}Fb}{{{f{AIb}}Fd}{{l{Ff}}}}{{{f{AIb}}{f{{Bd{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{AId}}}{{A`{{l{Ff}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AIf}}{f{En}}}{{A`{Abn}}}}0{{{f{AIf}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Fd}}}Fd}{{{f{Fl}}}Fl}{{{f{AIh}}}AIh}{{f{f{Dfc}}}b{}}00{fb}00{{}Fd}{{}Fl}{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00``{c{{A`{Fd}}}ADn}{c{{A`{Fl}}}ADn}{c{{A`{AIh}}}ADn}{Ghb}00{{{f{Fd}}{f{Fd}}}d}{{{f{Fl}}{f{Fl}}}d}{{{f{AIh}}{f{AIh}}}d}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIl}}}{{A`{Abn}}}}{{{f{AIl}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}`{{{f{AIn}}c}{{A`{AInn}}}{}}{{{f{AJ`}}{f{{l{An}}}}}{{A`{{l{c}}n}}}Dn}`{{{f{Fd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Fl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AIh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Fl}}}Fd}{cc{}}0{{{f{Fd}}}Fl}1`{{DdcGh}AJb{}}{{DdGh}AJd}`{{{f{AJf}}Gh}{{A`{Jln}}}}{{{f{AJf}}Gh}Jl}{{{f{{AJh{}{{Cj{c}}}}}}e}c{}{}}0{{{f{Fd}}{f{Dfc}}}bAE`}{{{f{Fl}}{f{Dfc}}}bAE`}{{{f{AIh}}{f{Dfc}}}bAE`}{{}Gh}00{{}c{}}00{{{f{AIh}}}d}{{{f{AJj}}}{{A`{{l{An}}n}}}}{{{f{AJl}}}{{A`{{l{An}}n}}}}``88``{{{f{AHh}}}{{Ch{c}}}{}}{{{f{AHh}}}{{Ch{Aj}}}}{{{f{AJn}}}{{Ch{c}}}{}}2{{{f{AHh}}}{{Ch{{Hj{cc}}}}}{}}``{{{f{AId}}}{{A`{Ghn}}}}{{}Fd}{{}Fl}{{{f{AK`}}GhGh}{{l{c}}}Dn}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AIl}}}{{A`{{Hh{Hf}}n}}}}{{{f{AJn}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AKb}}}Ab}0{{{f{AKd}}}AKd}{{{f{AKf}}{f{E`}}A@b}{{A`{Abn}}}}`{{{f{AKh}}c{Ch{e}}}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}}{{{f{AKh}}ci}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{Fd}}c}A`A@f}{{{f{Fl}}c}A`A@f}{{{f{AIh}}c}A`A@f}{{{f{AKh}}{f{{l{An}}}}{Ch{c}}}{{A`{AKhn}}}{}}{{{f{AKj}}Hf}{{l{c}}}Dn}{{{f{AKl}}Hfc}{{l{e}}}{}Dn}{{{f{AKn}}GhGh}AKn}0`{{{f{AIb}}d}{{l{c}}}Dn}{{{f{AIb}}Fd}{{l{c}}}Dn}{{{f{AL`}}Bb}{{Ch{Aj}}}}{{{f{AHh}}}{{Ch{c}}}{}}{{{f{ALb}}{f{c}}}{{A`{ALbn}}}A@h}{{{f{ALd}}{f{c}}}ALdA@h}{{{f{ALf}}}{{Gn{{f{{Bd{Bb}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00{{{f{AId}}}{{A`{AIdn}}}}9{{}c{}}00{{Fdd}Fd}{{Fld}Fl}1010{{Flc}Fl{{Id{}{{Cj{d}}}}}}210{FdFd}{FlFl}`{{{f{ALh}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{E`{ff}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALj{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bj}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALl}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALn{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnAM`{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALl}AM`{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{AMb{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnAMbDn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALl}{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}0{{{f{{l{c}}}}}GhAl}0{{MbMb}Mb}{{{f{{l{Ff}}}}Fb}{{A`{bn}}}}{{{f{{AMd{Fb}}}}Fb}{{A`{bn}}}}{{{f{{Bd{Fj}}}}{f{{Bd{d}}}}{f{{Bd{d}}}}}{{A`{AMfn}}}}{{{f{{Bd{Fj}}}}{f{{Bd{d}}}}{f{{Bd{d}}}}}{{A`{{Kb{Hf}}n}}}}{{Dd{f{{Bd{Fj}}}}{f{{Bd{d}}}}{f{{Bd{d}}}}}{{A`{{l{Fh}}n}}}}{{Dd{f{{Bd{Ab}}}}}{{A`{{l{Fh}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bd{Ab}}}}}{{A`{AMfn}}}}{{{f{{Bd{Ab}}}}}{{A`{{l{Fh}}n}}}}00````{{fh}b}{{{f{{l{c}}}}eAMhd}{{Gn{Fb}}}Dn{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{AMh}}}AMh}{{f{f{Dfc}}}b{}}{fb}{{}AMh}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{AMh}}}ADn}{Ghb}{{{f{AMh}}{f{AMh}}}d}{{f{f{c}}}d{}}00{{{f{AMh}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{AMh}}{f{Dfc}}}bAE`}{{}Gh}{{}c{}}{{{f{{Bd{f}}}}cFbe}{{Gn{Fb}}}{{D`{}{{Cj{Ch}}}}}{{E`{fGhf}{{Ad{d}}}}}}{{{f{AMh}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6`{{Gh{f{Df{Gn{d}}}}}b}```{{{f{AKn}}GhGh}AKn}0{{Gh{f{{Bd{Fj}}}}{f{DfFl}}}{{A`{{AMj{{l{Ff}}}}n}}}}`````````````11`{AMlHf}00{{{f{Bl}}}{{A`{Ddn}}}}{{{f{Bl}}}{{A`{AMnn}}}}{{{f{AN`}}}Hf}{{{f{Bl}}}{{A`{bn}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000{{{f{ANb}}}d}{{{f{Jl}}}{{`{{D`{}{{Cj{Jl}}}}}}}}{{{f{Jl}}{f{Df{Gn{Jl}}}}}b}{{ANbd}ANb}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{Jl}}{f{Jl}}}Jl}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bj}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{B`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfANd}}{Ch{{f{Bl}}}}}b}{{{f{DfANb}}{f{ANb}}}{{A`{bn}}}}{{{f{DfANd}}}b}{{{f{DfANd}}{f{Bl}}}b}{{{f{ANb}}Fd}{{l{Ff}}}}{eANf{}{{Id{}{{Cj{c}}}}}}0{{AGhe}ANh{}{{Id{}{{Cj{c}}}}}}0{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{Jl}}}Jl}{{{f{{L`{KnKl}}}}}{{`{Jj}}}}{{{f{{L`{LfLb}}}}}{{`{Jj}}}}{{{f{Dd}}}{{f{ANj}}}}{{{f{Dd}}}{{f{{Bd{Bb}}}}}}{{{f{Dd}}}{{f{ANl}}}}{{{f{Dd}}}{{f{Bl}}}}{{{f{En}}}{{f{En}}}}{{{f{Oj}}}{{f{En}}}}{{{f{ANn}}}{{f{En}}}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{{f{{Bd{c}}}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}4{{{f{{L`{LnLb}}}}}{{`{Jj}}}}{f{{f{c}}}{}}6000000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}000000000000000000000000000000000000000000000{En{{Cn{En}}}}{{{AOj{Bl}}}AOl}{{{f{ANb}}{f{ANb}}c}{{A`{ANbn}}}AOn}{{{f{Jl}}{f{En}}}d}{{{f{B@`}}{f{En}}}{{A`{Abn}}}}{{{f{Jl}}{f{En}}}Jl}{{{f{En}}En}En}{{{f{{L`{LfLb}}}}Ld}{{L`{LfLb}}}}{{{f{{L`{LlLb}}}}Ld}{{L`{LlLb}}}}{{{f{B@`}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LnLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LjLh}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{ANb}}{f{En}}Gb}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ej}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{L`{ce}}}}}{{L`{ce}}}DnDn}{{{f{B@b}}}B@b}{{{f{AOl}}}AOl}{{{f{ANb}}}ANb}{{{f{B@d}}}B@d}{{{f{Jl}}}Jl}{{{f{B@f}}}B@f}{{{f{En}}}En}{{{f{B@h}}}B@h}{{{f{Oj}}}Oj}{{{f{Ld}}}Ld}{{{f{Nd}}}Nd}{{{f{Od}}}Od}{{{f{Ff}}}Ff}{{{f{Nf}}}Nf}{{{f{Nh}}}Nh}{{{f{Nl}}}Nl}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{Eh}}}Eh}{{{f{Ej}}}Ej}{{{f{Kn}}}Kn}{{{f{Ln}}}Ln}{{{f{Bj}}}Bj}{{{f{B`}}}B`}{{{f{Fh}}}Fh}{{{f{An}}}An}{{{f{Lj}}}Lj}{{{f{Lf}}}Lf}{{{f{Ll}}}Ll}{{{f{B@j}}}B@j}{{{f{B@l}}}B@l}{{{f{B@n}}}B@n}{{{f{AGh}}}AGh}{{{f{BA`}}}BA`}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000{fb}00000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}BAb}{{{f{B@l}}{f{B@l}}}BAb}{{{f{DfOj}}En}b}{BAde{}{{ANf{c}}ALl}}0{{BAdAGh}e{}{{ANh{c}}ALl}}0{{f{f{c}}}BAb{}}0{{{f{En}}}d}{{{f{AGh}}}d}11{{{AOj{Bl}}}En}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{}Dd}{{}BAf}{{}B@b}{{}AOl}{{}Jl}{{}B@f}{{}En}{{}AGh}{Gh{{f{c}}}{}}{{{f{Dd}}}f}111{{{f{{L`{ce}}}}}fDnDn}222222222222222222222222222222222222222222{Gh{{f{Dfc}}}{}}00{{{f{Df{L`{ce}}}}}{{f{Df}}}DnDn}1111111111111111111111111111111111111111111{c{{A`{Dd}}}ADn}{c{{A`{B@b}}}ADn}{c{{A`{Jl}}}ADn}{c{{A`{B@f}}}ADn}{c{{A`{En}}}ADn}{c{{A`{Oj}}}ADn}{c{{A`{Ld}}}ADn}{c{{A`{Ah}}}ADn}{c{{A`{B@l}}}ADn}{c{{A`{B@n}}}ADn}{c{{A`{AGh}}}ADn}{c{{A`{BA`}}}ADn}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{ANdc}ANb{{Id{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{Ghb}000000000000000000000000000000000000000000000{{{f{B@`}}}{{f{En}}}}{{{f{{L`{KnKl}}}}}{{f{En}}}}{{{f{{L`{LnLb}}}}}{{f{En}}}}{{{f{{L`{LlLb}}}}}{{f{En}}}}{{{f{{L`{LjLh}}}}}{{f{En}}}}{{{f{{L`{LfLb}}}}}{{f{En}}}}{{{f{ANb}}}{{f{En}}}}{{{f{Jl}}}En}{{{f{Oj}}}{{f{En}}}}`{fc{{BAj{BAh}}}}0`{{{f{Dd}}{f{c}}}d{{Ih{Bl}}A@h}}{{{f{B@b}}{f{B@b}}}d}{{{f{Jl}}{f{Jl}}}d}{{{f{B@f}}{f{B@f}}}d}{{{f{En}}{f{En}}}d}{{{f{En}}{f{AGh}}}d}{{{f{B@h}}{f{B@h}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{B@n}}{f{B@n}}}d}{{{f{AGh}}{f{AGh}}}d}{{{f{BA`}}{f{BA`}}}d}{{{f{Jl}}{f{Jl}}d}d}{{{f{ANb}}{f{Bl}}}}{{{f{ANb}}{f{ANb}}}}{{{f{ANb}}{f{{l{Bj}}}}}}012{{f{f{c}}}d{}}00000000000000000000000000000000{{{f{{L`{ce}}}}}OjDnDn}{{{f{AOl}}{f{Bl}}}{{Ch{Fb}}}}{{AOn{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{ANdANb}{BAf{{N`{AOl}}}}{{{f{Dd}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@b}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AOl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{B@d}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Jl}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@f}}{f{DfHn}}}{{A`{bI`}}}}{{{f{En}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@h}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Oj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Ld}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@l}}{f{DfHn}}}{{A`{bI`}}}}{{{f{B@n}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{AGh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BA`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Bl}}}Dd}{cc{}}{H`Dd}{{{f{El}}}Dd}{ElDd}33{{{l{Lb}}}{{L`{LnLb}}}}4{{{l{Kl}}}{{L`{KnKl}}}}55555555555{dJl}6{{{Ch{c}}}Jl{{BAl{Jl}}}}{cJlBAn}{{{f{{Bd{Bb}}}}}Jl}{{{f{Bl}}}Jl}:{{{f{AGh}}}En}{BB`En}<{{{f{Jl}}}En}{JlEn}>>{{{f{Jl}}}Oj}{{{f{BBb}}}Oj}{cc{}}{{{f{BA`}}}Ld}111111111111111111111111{BBdAGh}{BBfAGh}3{{{f{AGh}}d}En}{{{l{Ff}}En}ANb}{{{l{Ff}}{N`{AOl}}dB@b}ANb}{{DdcLd}{{L`{LlLb}}}{{Id{}{{Cj{BBh}}}}}}{{DdcLd}{{L`{LlLb}}}{{Id{}{{Cj{{Ch{BBh}}}}}}}}{{{l{Ff}}B@b}ANb}{cDd{{Id{}{{Cj{{Cn{Bl}}}}}}}}{cDd{{Id{}{{Cj{El}}}}}}{cDd{{Id{}{{Cj{{f{Dd}}}}}}}}{cDd{{Id{}{{Cj{BAh}}}}}}{cDd{{Id{}{{Cj{Dd}}}}}}{cDd{{Id{}{{Cj{{f{BAh}}}}}}}}{cDd{{Id{}{{Cj{{f{Bl}}}}}}}}{cDd{{Id{}{{Cj{{Ed{Bl}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Id{}{{Cj{BBj}}}}}}{{Ddc}{{L`{KnKl}}}{{Id{}{{Cj{{Ch{BBj}}}}}}}}{{DdcLd}{{L`{LfLb}}}{{Id{}{{Cj{AMl}}}}}}{{DdcLd}{{L`{LfLb}}}{{Id{}{{Cj{{Ch{AMl}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Id{}{{Cj{AN`}}}}}}{{Ddc}{{L`{LnLb}}}{{Id{}{{Cj{{Ch{AN`}}}}}}}}{{{f{Bl}}}Dd}0{ElDd}{{{f{{l{Bj}}}}{f{{AOj{Bl}}}}B@b}{{A`{ANbn}}}}{{{Gn{c}}AGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{Gn{c}}AGh}{{ALl{}{{AO`{e}}{AOb{c}}{AOd{g}}}}}{AOf{AOh{e}}}Jh{{Hd{}{{Cj{e}}}}JjJ`Jb}}{{GhcAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{GhAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{DddGhB@b}ANb}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{AOl}}Fb}{{f{Bl}}}}{B@lKf}{B@n{{Ch{Kf}}}}{{{f{{L`{LlLb}}}}Gh}{{A`{Jln}}}}{{{f{{L`{LfLb}}}}Gh}{{A`{Jln}}}}{{{f{{L`{LjLh}}}}Gh}{{A`{Jln}}}}{{{f{{L`{KnKl}}}}Gh}{{A`{Jln}}}}{{{f{{L`{LnLb}}}}Gh}{{A`{Jln}}}}{{{f{B@`}}Gh}{{A`{Jln}}}}{{{f{ANb}}Gh}{{A`{Jln}}}}{{{f{{L`{LfLb}}}}Gh}Jl}{{{f{{L`{KnKl}}}}Gh}Jl}{{{f{{L`{LjLh}}}}Gh}Jl}{{{f{{L`{LlLb}}}}Gh}Jl}{{{f{{L`{LnLb}}}}Gh}Jl}{{{f{B@`}}Gh}Jl}{{{f{ANb}}Gh}Jl}{{{f{AOl}}}{{f{{AOj{Bl}}}}}}{{}En}0000000000000000000000000{{{f{AOl}}Fb}{{Ch{{f{Bl}}}}}}{{B@nKf}Kf}{{B@nc}Kf{{E`{}{{Ad{Kf}}}}}}{{{f{ANb}}}{{f{{N`{AOl}}}}}}{{{f{En}}}{{Ch{{Gn{Gh}}}}}}{{{f{Jl}}}{{Ch{{f{Bl}}}}}}{{{f{BBl}}Gh}Jl}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{ANb}}{f{ANb}}}}{{{f{ANb}}{f{Bl}}}}{{{f{ANb}}{f{{l{Bj}}}}}}120{{{f{Dd}}{f{Dfc}}}bAE`}{{{f{Jl}}{f{Dfc}}}bAE`}{{{f{B@f}}{f{Dfc}}}bAE`}{{{f{En}}{f{Dfc}}}bAE`}{{{f{Oj}}{f{Dfc}}}bAE`}{{{f{Ld}}{f{Dfc}}}bAE`}{{{f{B@n}}{f{Dfc}}}bAE`}{{{f{AGh}}{f{Dfc}}}bAE`}{{{f{BA`}}{f{Dfc}}}bAE`}{{{f{Jl}}{f{Dfc}}d}bAE`}{{{f{{L`{LnLb}}}}}{{l{Nh}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Jl}}}Fb}{EnEn}{{}Gh}000000000000000000000000000000000000000000000{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{AGh}}}{{Ch{{f{AGh}}}}}}{{}c{}}000000000000000000000000000000000000000000000{{}Fj}01{{BBnEn}{{A`{Mjn}}}}{{{L`{LnLb}}}Ab}{{{L`{KnKl}}}Ab}{{{L`{LjLh}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{LfLb}}}Ab}{ANbAb}{JlJl}{DdEl}{{{f{En}}}d}00{{{f{Jl}}}d}111{{{f{ANb}}}d}0212{{{f{AOl}}}d}23330323{{{f{AGh}}}d}343434044434444340{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{AH`{cgAGn}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{ANb}}}BC`}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{En}}}{{f{En}}}}{{{f{AOl}}}Gh}{{{f{ANb}}}Gh}{DdBCb}{{{f{ANb}}{f{Bl}}}}{{{f{ANb}}{f{ANb}}}}{{{f{ANb}}{f{{l{Bj}}}}}}021{{{f{ANb}}{f{ANb}}}{{A`{{Hj{ANbANb}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{dn}}}}{{{f{B@f}}}{{Ch{En}}}}{{{f{En}}}{{A`{Enn}}}}{{{f{En}}}{{A`{Mjn}}}}{{{f{ANb}}}Mj}{{{f{En}}{f{En}}}{{A`{Enn}}}}{{{f{DfBAf}}{f{{N`{AOl}}}}}{{A`{bn}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}043{{{f{{L`{LnLb}}}}}{{l{Nh}}}}1{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{ANb}}}{{A`{Ghn}}}}{{{f{ANb}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{L`{LnLb}}}}}{{l{Kl}}}}9{{}c{}}0{{DdGhB@b}ANd}{{Ddc}{{L`{LlLb}}}{{Ih{{Bd{{Ch{BBh}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ih{{Bd{{Ch{AN`}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ih{{Bd{AN`}}}}}}{{Ddc}{{L`{LlLb}}}{{Ih{{Bd{BBh}}}}}}{{Ddc}{{L`{LfLb}}}{{Ih{{Bd{{Ch{AMl}}}}}}}}{{Ddc}{{L`{LfLb}}}{{Ih{{Bd{AMl}}}}}}{{Ddc}{{L`{KnKl}}}{{Ih{{Bd{{Ch{BBj}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Ih{{Bd{BBj}}}}}}{{{N`{AOl}}}BAf}{{DdEn}Oj}{KfB@l}{HfB@n}{KfB@n}{{{l{c}}}{{L`{ec}}}DnDn}{{}B@h}{{{f{DfBC`}}}Ch}{{{f{ANb}}{f{Bl}}}}{{{f{ANb}}{f{{l{Bj}}}}}}{{{f{ANb}}{f{ANb}}}}120{{{f{ANb}}}Gh}5{{Dd{f{{Bd{{f{Bl}}}}}}{f{Bl}}}{{L`{LnLb}}}}{{Dd{f{{Bd{{f{Bl}}}}}}{f{Bl}}}{{L`{KnKl}}}}{{{f{Dd}}{f{Dd}}}{{Ch{BAb}}}}{{{f{Jl}}{f{Jl}}}{{Ch{BAb}}}}{{{f{Ld}}{f{Ld}}}{{Ch{BAb}}}}{{{f{B@l}}{f{B@l}}}{{Ch{BAb}}}}{{{f{{L`{ce}}}}}{{f{{l{e}}}}}DnDn}{{{f{ANb}}}{{f{{l{Ff}}}}}}{{{f{{L`{LjLh}}}}}{{Ch{Gh}}}}{{{f{DfANd}}{f{Bl}}}{{Hj{Fbd}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{{l{Bj}}}}{Ch{{f{AMn}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{{L`{LfLb}}}}{f{{l{Bj}}}}{Ch{{f{AMn}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{AOl}}{f{AOl}}}d}{{{f{{L`{LjLh}}}}}Gh}{{{f{{L`{LnLb}}}}}{{l{Nh}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Dd}}c}A`A@f}{{{f{{L`{ce}}}}g}A`DnAlA@f}{{{f{B@b}}c}A`A@f}{{{f{ANb}}c}A`A@f}{{{f{Jl}}c}A`A@f}{{{f{B@f}}c}A`A@f}{{{f{En}}c}A`A@f}{{{f{Oj}}c}A`A@f}{{{f{Ld}}c}A`A@f}{{{f{Ah}}c}A`A@f}{{{f{B@l}}c}A`A@f}{{{f{B@n}}c}A`A@f}{{{f{AGh}}c}A`A@f}{{{f{BA`}}c}A`A@f}{{{f{DfOj}}Dd}b}{{{f{Df{L`{LlLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}LdDd}{{A`{bn}}}}{{{f{Df{L`{LfLb}}}}Dd}{{A`{bn}}}}{{{f{BC`}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{ANb}}d}ANb}{{{f{ANb}}Fd}ANb}{{{f{Jl}}}{{Ed{Bl}}}}{{{f{{L`{LfLb}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{{L`{KnKl}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{{L`{LnLb}}}}{f{Bl}}}{{l{Bj}}}}{{{f{Jl}}{f{En}}}{{Ch{Jl}}}}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}}Ld}{{{f{{L`{LfLb}}}}}Ld}{{{f{{L`{LfLb}}}}}{{f{{Ch{Dd}}}}}}{{{f{ANb}}B@hd}{{Cn{Cl}}}}{{{f{En}}B@h}AGh}{{{f{Oj}}B@h}BBb}{LdBA`}{{{f{En}}DdB@h}BBb}{Ld{{f{Bl}}}}{{{f{ANb}}{f{{AOj{Bl}}}}BCd}ANb}{{AGhGhd}AGh}{{{f{ANb}}}{{A`{ANbn}}}}{{{f{ANb}}}ANb}{{{f{AGh}}}{{f{AGh}}}}{fc{}}00000000000000000000000000000000000{{{f{En}}}En}{{{f{AGh}}}BCf}{{{f{{L`{LjLh}}}}Gh}{{A`{{Ed{{L`{LjLh}}}}n}}}}{fEl}{{{f{{L`{LfLb}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{{L`{KnKl}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{{L`{LnLb}}}}{f{Bl}}}{{l{Bj}}}}3333{{{f{Jl}}{f{Jl}}}d}{{{f{{L`{KnKl}}}}{Ch{{f{AMn}}}}{f{{l{Bj}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{AMn}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{g{{A`{ANfe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGhg}{{A`{ANhe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{BAd{{A`{eg}}}{}{{ANf{c}}ALl}{}}0{{BAdAGh}{{A`{eg}}}{}{{ANh{c}}ALl}{}}0{{{f{Jl}}}{{A`{cn}}}Mh}{c{{A`{e}}}{}{}}00000000000000000000000000000000000000000{Hf{{A`{B@l}}}}1111{{}{{A`{c}}}{}}000000000000000000000000000000000000000000000{{{f{Jl}}{f{En}}}{{A`{Jln}}}}{{{f{En}}B@h}{{A`{AGhn}}}}{f{{A`{H`BCh}}}}0000{fAAn}000000000000000000000000000000000000000000000{{{f{AGh}}}AGh}{{{f{ANb}}}{{A`{ANbn}}}}{{{f{ANb}}}d}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}cJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{ANb}}}{{A`{AB`n}}}}1{{{f{En}}Jl}d}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}gJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{}c{}}000000000000000000000000000000000000000000000{Ghc{}}0{{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}{Ch{Ij}}}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{DfDd}}BAh}{{A`{bI`}}}}{{{f{DfDd}}BCj}{{A`{bI`}}}}{{{f{DfDd}}{f{Bl}}}{{A`{bI`}}}}{{{f{En}}}Jl}```````````{{{f{ANb}}{f{ANb}}c}{{A`{ANbn}}}AOn}{{AOn{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{{{f{ANb}}{f{ANb}}}{{A`{{Hj{ANbANb}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BCl}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{{}b}{{{f{DfBCl}}}b}{Ghb}2{cc{}}6{{}Gh}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{}d}4`{{{f{DfBCn}}Fb{f{AOl}}}{{A`{{f{DfBCn}}n}}}}{{{f{DfBCn}}}{{f{DfBCn}}}}{{{f{DfBCn}}{f{Bl}}}{{A`{{f{DfBCn}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}>{BCnANb}>=<{{DdGh{N`{AOl}}B@bd}BCn}<;:=``````````````````````````{f{{f{AM`}}}}{{{f{BD`}}}{{f{Bl}}}}777666`{{nBD`}n}{nn}77{{{f{BD`}}}f}8777{Ghb}00`{{{f{BDb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BD`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{n}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}0{cBD`{{BAl{{Ed{Bl}}}}}}{BDdn}{BDfn}{BDhn}{BDjn}{BDln}6{BDnn}{BE`n}{{}{{Gj{{f{Bl}}BDb}{{Ad{b}}}}}}{{}Gh}00{{}c{}}00{cnAM`}{{{f{Bl}}}BD`}````{{{Gj{{f{Bl}}BDb}{{Ad{b}}}}}b}{cnBEb}{fEl}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{H`BCh}}}}0{fAAn}00999{{{f{n}}c}n{{ABd{{f{Bl}}}{{Ad{El}}}}}}``````````````````{{fh}b}00{{{f{DfAB`}}{Gn{Fj}}{f{{BEd{En}}}}}{{A`{bn}}}}{{{f{DfAB`}}{Gn{Ab}}{f{{BEd{En}}}}}{{A`{bn}}}}{{{f{AB`}}{f{E`}}}{{Gn{Fj}}}}0{{{f{AB`}}{f{{l{An}}}}}{{A`{AB`n}}}}{{Gh{Gn{Fj}}}AB`}{{{f{AB`}}{f{{Bd{Dd}}}}}{{A`{AB`n}}}}0{{{f{AB`}}{f{{Bd{Dd}}}}{f{{BEd{En}}}}d}{{A`{AB`n}}}}{{{f{AB`}}HfGh}AB`}{{{f{AB`}}}AB`}{{{f{DfAB`}}}{{f{DfAB`}}}}0{{{f{DfAB`}}{BEf{{Cn{Cl}}}}}{{A`{bn}}}}{{{f{DfAB`}}{f{Bl}}e}{{A`{{f{DfAB`}}n}}}BEh{{ABd{{f{Fj}}}{{Ad{c}}}}}}{{{f{DfAB`}}Ghe}{{A`{{f{DfAB`}}n}}}BEh{{ABd{{f{Fj}}}{{Ad{c}}}}}}33{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AB`}}}{{`{{D`{}{{Cj{Gh}}}}}}}}7{{{f{DfAB`}}}b}{{{f{BEj}}}BEj}{{{f{BEl}}}BEl}:{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AB`}}{f{Bl}}}{{A`{{f{Fj}}n}}}}{{{f{DfAB`}}c}b{{D`{}{{Cj{Fj}}}}}}{{{f{AB`}}e}{{A`{{Gn{{f{Fj}}}}n}}}{{Ih{Bl}}}{{Id{}{{Cj{c}}}}}}{{}BEl}{{}AB`}{Gh{{f{c}}}{}}0000{Gh{{f{Dfc}}}{}}0000{c{{A`{BEl}}}ADn}{c{{A`{AB`}}}ADn}{Ghb}0000{{{f{AB`}}{f{Bl}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{Bl}}}{{A`{Fjn}}}}{{{f{AB`}}e}AB`{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}{f{{BEn{DdA@n}}}}}AB`}{{{f{AB`}}{Ch{{f{{Bd{c}}}}}}}{{A`{AB`n}}}{}}{{{f{AB`}}}{{Gn{En}}}};{{{f{{BEd{BBb}}}}}AB`}{{{f{{BEd{En}}}}}AB`}{{{f{BEl}}{f{BEl}}}d}{{{f{AB`}}{f{AB`}}}d}00{{f{f{c}}}d{}}00{{{f{AB`}}}Gh}`{{{f{AB`}}e}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}{Gn{Fj}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{AB`}}}{{A`{bn}}}}{{{f{AB`}}}{{Gn{Oj}}}}{{{f{AB`}}AIh}{{A`{AB`n}}}}{{{f{AB`}}{f{{l{An}}}}}{{A`{AB`n}}}}6{{{f{BEj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BEl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AB`}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}0000{cAB`{{Id{}{{Cj{Ab}}}}}}{cAB`{{Id{}{{Cj{Fj}}}}}}{{{f{{Bd{BF`}}}}}{{A`{AB`n}}}}{{{f{{Bd{BF`}}}}{f{{BEd{En}}}}}{{A`{AB`n}}}}{{c{f{{BEd{En}}}}}{{A`{AB`n}}}{{D`{}{{Cj{{f{BF`}}}}}}}}{{{f{AB`}}Gh}{{Ch{{Gn{Jl}}}}}}{{{f{AB`}}{f{Bl}}}{{Ch{Gh}}}}{{{f{AB`}}}{{Gn{{f{Dd}}}}}}{{{f{AB`}}}{{Gn{Dd}}}}{{{f{AB`}}}{{Gn{{f{Bl}}}}}}{{{f{AB`}}}{{f{{Bd{Fj}}}}}}{{{f{DfAB`}}}{{f{Df{Gn{Fj}}}}}}{{{f{AB`}}Gh}{{A`{BF`n}}}}{{{f{AB`}}Gh{f{DfBF`}}}{{A`{bn}}}}{{{f{AB`}}Gh{f{DfBF`}}}b}{{{f{AB`}}}{{Ch{{A`{Enn}}}}}}`{{{f{AB`}}e}{{A`{BFbn}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}{Gn{Fj}}{f{BFd}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}1{{{f{AB`}}{Gn{Fj}}dd}{{A`{BFbn}}}}{{{f{BEl}}{f{Dfc}}}bAE`}{{{f{AB`}}{Ch{Gh}}}AB`}{{{f{AB`}}}Gh}{{{f{AB`}}{f{{Bd{Fj}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{{Bd{Fj}}}}}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{{Bd{Fj}}}}}{{f{DfAB`}}}}{{{f{AB`}}{f{Bl}}}f}{{{f{AB`}}{Oh{Gh}}}f}{{{f{AB`}}BFf}f}{{{f{AB`}}{BFh{Gh}}}f}{{{f{AB`}}{BFj{Gh}}}f}{{{f{AB`}}{BFl{Gh}}}f}{{{f{AB`}}Gh}f}{{{f{AB`}}{BFn{Gh}}}f}{{}Gh}0000{{{f{DfAB`}}Ghc}{{A`{{f{DfAB`}}n}}}BEh}{{}c{}}000000{{AB`Dd}{{l{j}}}}{{{f{AB`}}}{{A`{{l{An}}n}}}}{{{f{AB`}}}d}1{{{f{AB`}}}{{`{Jf}}}}{{{f{AB`}}B@hd}BG`}{{{f{AB`}}}{{`{{D`{}{{Cj{AB`}}}}}}}}{{{f{AB`}}}BGb}{AB`BGd}{{{f{AB`}}}Gh}5{{{f{AB`}}}{{A`{{Ch{Fj}}n}}}}1{{{f{AB`}}BEj}{{A`{{Ch{Ab}}n}}}}12{{{Gn{Fj}}}{{A`{AB`n}}}}{{Gh{Gn{Fj}}}AB`}{{{Gn{Fj}}}AB`}22{{{Gn{Fj}}Gh}{{A`{AB`n}}}}0{{{f{DfBG`}}}Ch}{{{f{DfBGb}}}Ch}{{{f{AB`}}}AB`}{{{f{AB`}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AB`}}ed}{{A`{{Gn{AB`}}n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}0{{AB`e}{{A`{cn}}}{}{{E`{AB`}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}e}{{A`{cn}}}{}{{E`{{f{DfAB`}}}{{Ad{{A`{cn}}}}}}}}{{AB`gc}{{A`{en}}}{}{}{{E`{AB`c}{{Ad{{A`{en}}}}}}}}{{{f{DfAB`}}}{{Ch{Fj}}}}{{{f{DfAB`}}}b}{{AB`B@h}{{BEf{{Cn{Cl}}}}}}{{{f{DfAB`}}{f{Bl}}Dd}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{Bl}}c}{{A`{{f{DfAB`}}n}}}BGf}{{{f{DfAB`}}Ghc}{{A`{{f{DfAB`}}n}}}BEh}{{{f{DfAB`}}Ddc}{{A`{{f{DfAB`}}n}}}BGf}<{{{f{AB`}}{Gn{Fj}}{f{BGh}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}`{{{f{AB`}}{f{Ab}}dd{Ch{Kf}}}{{A`{AB`n}}}}0{{{f{AB`}}Ghdd{Ch{Kf}}}{{A`{AB`n}}}}{{{f{AB`}}}{{BEd{En}}}}{{{f{AB`}}{f{AB`}}}{{A`{bn}}}}{{{f{AB`}}e}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}Gh}{{Ch{{f{Fj}}}}}}{{{f{AB`}}c}{{A`{AB`n}}}{{BGj{Gh}}}}{{{f{AB`}}c}{{A`{{Gn{Fj}}n}}}{{BGl{Dd}}}}3{{{f{AB`}}e{f{{N`{{BEd{En}}}}}}}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}e{f{{BEd{En}}}}}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{BEl}}c}A`A@f}{{{f{AB`}}c}A`A@f}{{{f{DfAB`}}e}{{A`{bn}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{DfAB`}}Gh}b}{{{f{AB`}}}{{Hj{GhGh}}}}{{{f{AB`}}Hf}AB`}{{{f{AB`}}}d}{{{f{DfAB`}}}b}{{{f{AB`}}}Gh}{{{f{BG`}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{BGb}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{AB`}}HfGh}AB`}00{{{f{AB`}}cFl}{{A`{AB`n}}}{{BGl{Dd}}}}{{{f{DfAB`}}cFl}{{A`{{f{DfAB`}}n}}}{{BGl{Dd}}}}{{{f{AB`}}Hf}{{Hj{AB`AB`}}}}0{{{f{DfAB`}}}{{`{{D`{}{{Cj{AB`}}}}}}}}{{AB`Ghd}{{Gn{AB`}}}}{{{f{AB`}}BEj}{{A`{{Ch{Ab}}n}}}}{{{f{AB`}}{Ch{Gh}}}AB`}{{{f{AB`}}{f{{l{Ff}}}}}{{A`{AB`n}}}}{AB`{{Gn{Fj}}}}{{{f{AB`}}{f{{l{Ff}}}}}AB`}{{{f{AB`}}{f{{l{Ff}}}}d}AB`}{{{f{AB`}}}{{f{AB`}}}}{{{f{AB`}}BGn}{{A`{{AAh{AAb{AAf{{AAd{Gh}}}}}}n}}}}{fc{}}00{fEl}{{{f{DfAB`}}{Ch{{f{Bl}}}}{Ch{{AAl{El{Gn{El}}}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{Ch{{f{Bl}}}}{Ch{{AAl{Dd{Gn{Dd}}}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{Bl}}e}{{A`{{f{DfAB`}}n}}}BEh{{ABd{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}Ghe}{{A`{{f{DfAB`}}n}}}BEh{{ABd{{f{Fj}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}c}{{A`{bn}}}{{Id{}{{Cj{{BEf{{Cn{Cl}}}}}}}}}}{{{f{DfAB`}}c}{{A`{bn}}}{{Id{}{{Cj{{A`{{BEf{{Cn{Cl}}}}n}}}}}}}}{c{{A`{e}}}{}{}}0000{{{Hj{{BEf{{Cn{Cl}}}}{f{{BEd{BBb}}}}}}}{{A`{AB`n}}}}{BH`{{A`{AB`n}}}}{{c{f{{BEd{En}}}}}{{A`{AB`n}}}{{D`{}{{Cj{{A`{{f{BF`}}n}}}}}}}}{{{f{AB`}}{f{Bl}}}{{A`{Ghn}}}}{{}{{A`{c}}}{}}0000{f{{A`{H`BCh}}}}{fAAn}0000{{{f{AB`}}{Ch{{f{{Bd{El}}}}}}BEl{Ch{{Hj{HfGh}}}}}{{A`{AB`n}}}}{{{f{AB`}}d{Ch{{Gn{Dd}}}}BEl{Ch{{Hj{HfGh}}}}}{{A`{AB`n}}}}1{{{f{AB`}}c}{{A`{AB`n}}}{{BGl{Dd}}}}{{{f{AB`}}c{f{Bl}}BHb}{{A`{AB`n}}}{{BGl{Dd}}}}0{{{f{AB`}}{f{AB`}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{AB`}}}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{AB`}}}b}{{}c{}}0000{{{f{AB`}}}Gh}{{{f{DfAB`}}c}{{A`{{f{DfAB`}}n}}}BEh}{{{f{DfAB`}}c{f{{BEd{En}}}}}{{A`{{f{DfAB`}}n}}}BEh}{{{f{DfAB`}}Fj}{{f{DfAB`}}}}{{{f{AB`}}Dd{Ch{Fb}}}{{A`{AB`n}}}}{{{f{DfAB`}}Dd{Ch{Fb}}}{{f{DfAB`}}}}``````{{fh}b}0{{{f{Fj}}{f{Fj}}}}{{{f{Fj}}c}{}{BfMh}}{{Fjc}{}{BfMh}}{{FjFj}}{{{f{Fj}}{f{C`}}}Fj}0000000{{{f{Fj}}{f{C`}}AjA@`}Fj}{{{f{Fj}}{f{C`}}Bb}Fj}220{{{f{Fj}}}{{A`{Mjn}}}}{{{f{DfFj}}{f{Fj}}}{{A`{{f{DfFj}}n}}}}{{{f{Fj}}{f{Fj}}ceg}Fj{{E`{{f{Ab}}{f{Ab}}}{{Ad{Ab}}}}}{{E`{{f{Mj}}{f{Ab}}}{{Ad{Ab}}}}}{{E`{{f{Ab}}{f{Mj}}}{{Ad{Ab}}}}}}{{{f{Fj}}{f{Fj}}c}{{A`{Fjn}}}{{E`{{f{Ab}}{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Fj}}c}Fj{{E`{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Fj}}}{{A`{Fbn}}}}{{{f{Fj}}Fd}{{l{Ff}}}}{{{f{Fj}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{Fj}}}{{l{Ah}}}}{{{f{BHd}}}{{f{Ab}}}}{{{f{Fj}}}{{f{Ab}}}}{{{f{Fj}}}{{Ch{{f{BHf}}}}}}{{{f{Fj}}}{{Ch{{f{BHd}}}}}}{{{f{Fj}}}{{Ch{{f{Ab}}}}}}{{{f{BHd}}}Ab}{{{f{Fj}}}{{A`{{f{{l{B`}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Fh}}}}n}}}}{{{f{Fj}}}{{Ch{BHh}}}}{{{f{Fj}}{f{Fj}}}{{A`{Fjn}}}}{{{f{Fj}}{f{Fj}}}}{{FjFj}}201120{{{f{Fj}}}{{A`{{f{{l{An}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{BHd}}{f{En}}}{{A`{BHdn}}}}{{{f{Fj}}{f{En}}}{{A`{Fjn}}}}10{{{f{BHd}}{f{En}}Gb}{{A`{BHdn}}}}{{{f{Fj}}{f{En}}Gb}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{ANb}}n}}}}{{{f{Fj}}}Fj}{{{f{BHd}}}BHd}1{{f{f{Dfc}}}b{}}0{fb}0{{{f{Fj}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Fj}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Fj}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Fj}{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0{c{{A`{Fj}}}ADn}{{FjFj}}{{{f{Fj}}{f{Fj}}}}{{Fjc}{}{BfMh}}{{{f{Fj}}c}{}{BfMh}}{{{f{Fj}}{f{Fj}}}{{A`{Fjn}}}}{Ghb}0?{{{f{Fj}}}Fj}{{{f{BHd}}}{{f{En}}}}{{{f{Fj}}}{{f{En}}}}{{{f{Fj}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Fj}}{f{Fj}}}d}{{{f{Fj}}{f{Fj}}}{{A`{{l{An}}n}}}}011{{{f{Fj}}}{{A`{Fjn}}}}{{{f{DfFj}}{f{Fj}}}{{A`{{f{DfFj}}n}}}}{{{f{Fj}}JlGh}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{Fj}}}{{Ed{Oj}}}}{{{f{Fj}}AIh}{{A`{Fjn}}}}{{{f{Fj}}{f{{l{An}}}}}{{A`{Fjn}}}}{{{f{BHd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Fj}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0{BHfFj}{BHdFj}{AbFj}{{AbGh}BHd}{{DdGh{f{En}}}Fj}{{{f{Fj}}GhGh}Fj}{{{f{Fj}}Gh}{{A`{Jln}}}}{{{f{Fj}}}Jn}{{{f{Fj}}}{{Ch{{Cn{G`}}}}}}{{{f{Fj}}Gh}{{Ch{{f{K`}}}}}}{{{f{Fj}}Gh}Jl}{{{f{Fj}}{f{Fj}}}{{A`{{l{An}}n}}}}0{{{f{BHd}}}d}{{{f{Fj}}}d}{{{f{Fj}}{Ch{Gh}}}Fj}{{{f{Fj}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Fj}}}{{A`{{l{Ah}}n}}}}{{}Gh}0{{}c{}}0{BEhFj}{BHdFj}{FjFj}{FjAB`}{{{f{DfFj}}}{{f{DfAb}}}}{BHdBHd}{{{f{BHd}}}d}{{{f{Fj}}}d}{{{f{Fj}}}{{A`{{l{An}}n}}}}000{{{f{Fj}}}{{l{An}}}}0{{{f{Fj}}}Mb}{{{f{BHd}}}{{Ch{{f{Ab}}}}}}{{{f{BHd}}}Gh}{{{f{Fj}}}Gh}{{{f{Fj}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Fj}}{f{Fj}}}{{A`{{l{An}}n}}}}0{{{f{DfBHd}}c}b{{E`{Mj}{{Ad{Mj}}}}}}{{{f{Fj}}c}{{l{An}}}{{E`{{f{Ab}}}{{Ad{{l{An}}}}}}}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}}Mj}11{{FjFj}}{{{f{Fj}}c}{}{BfMh}}{{{f{Fj}}{f{Fj}}}}{{Fjc}{}{BfMh}}:{{{f{Fj}}}{{A`{Ghn}}}}{{{f{BHd}}}{{f{Dd}}}}{{{f{Fj}}}{{f{Dd}}}}{{DdMjGh}BHd}{{Ddc}Fj{}}{{DdEn}BHd}{{Dd{f{En}}}Fj}{{{f{Fj}}GhGh}Fj}{{DdMjGh}Fj}0{{{f{Fj}}{f{Fj}}}{{A`{{l{An}}n}}}}0{{{f{Fj}}}Gh}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}}{{Cn{Jf}}}}1{{{f{Fj}}AjA@`}{{A`{Mjn}}}}{{{f{Fj}}}Fj}{{{f{Fj}}{f{Fj}}}}{{FjFj}}{{Fjc}{}{BfMh}}{{{f{Fj}}c}{}{BfMh}}{{{f{DfBHd}}Dd}{{f{DfBHd}}}}{{{f{DfFj}}Dd}b}{{{f{Fj}}{f{{Bd{B@n}}}}}{{A`{Fjn}}}}0{{{f{BHd}}Gh}BHd}8{{{f{Fj}}Ajdd{Ch{Kf}}}{{A`{Fjn}}}}{{{f{Fj}}Ghdd{Ch{Kf}}}{{A`{Fjn}}}}{{{f{BHd}}}{{f{Mj}}}}{{{f{Fj}}c}A`A@f}{{{f{DfFj}}Mb}b}{{{f{Fj}}Hf}Fj}{{{f{DfFj}}}b}{{{f{Fj}}{Ch{Kf}}}Fj}{{{f{Fj}}HfGh}Fj}{{{f{Fj}}Fd}{{A`{Fjn}}}}0{{{f{Fj}}Hf}{{Hj{FjFj}}}}{{{f{Fj}}Bb}{{A`{Mjn}}}}{{{f{Fj}}}{{A`{{f{{l{Bj}}}}n}}}}{{{f{BHd}}{f{En}}}{{A`{BHdn}}}}{{{f{Fj}}{f{En}}}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Fj}}c}{}{BfMh}}{{FjFj}}{{Fjc}{}{BfMh}}{{{f{Fj}}{f{Fj}}}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}{Ch{Gh}}}Fj}{{{f{Fj}}{f{{l{Ff}}}}}{{A`{Fjn}}}}{{{f{Fj}}{f{{Bd{A@j}}}}Mb}Fj}{BHdAb}{FjAb}{{{f{Fj}}{f{{Bd{A@j}}}}}Fj}{{{f{Fj}}{f{{Bd{Fb}}}}}{{A`{Fjn}}}}{{{f{Fj}}{f{{Bd{Fb}}}}}Fj}{{{f{Fj}}{f{{l{Ff}}}}}Fj}{fc{}}0{{{f{Fj}}}Fj}{{{f{BHd}}}Ab}{{FjFj}{{A`{Fjn}}}}{{{f{Fj}}{f{Fj}}ceg}{{A`{Fjn}}}{{E`{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}{{E`{{f{Mj}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}{{E`{{f{Ab}}{f{Mj}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}{f{Fj}}c}{{A`{Fjn}}}{{E`{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}c}{{A`{Fjn}}}{{E`{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Cf}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{B`}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Fh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Fj}}}{{Ch{{f{ANb}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Eh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Ej}}}}}}}}{c{{A`{e}}}{}{}}0{{{f{Fj}}}{{Ch{{f{{l{Nl}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Nh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Ff}}}}}}}}{{}{{A`{c}}}{}}0{{{f{Fj}}}{{Ch{{f{{l{Ah}}}}}}}}{{{f{Fj}}c}{{A`{{l{An}}n}}}{{E`{{f{Ab}}}{{Ad{{A`{{l{An}}n}}}}}}}}{{FjFj}{{A`{Fjn}}}}{{{f{Fj}}}{{Ch{{f{{l{Bj}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{j}}}}}}}}2{{{f{Fj}}}{{Ch{{f{{l{Od}}}}}}}}7{{{f{Fj}}}{{Ch{{f{{l{Nf}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Nd}}}}}}}}{fAAn}0{{{f{Fj}}}{{A`{{f{{l{Od}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Nf}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Fj}}}{{A`{Fjn}}}}0{AbBHd}{{{f{Fj}}Bb}{{A`{Mjn}}}}{{{f{Fj}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{Fj}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{FjDd}Fj}{{{f{Fj}}c}Fj{BfMh}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}{f{{l{An}}}}{f{Fj}}}{{A`{Fjn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BHj}}}BHj}{{f{f{Dfc}}}b{}}{fb}{{}BHj}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{BHj}}}ADn}{Ghb}{{{f{BHj}}{f{BHj}}}d}{{f{f{c}}}d{}}00{{{f{BHj}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{BHj}}{f{Dfc}}}bAE`}`{{}Gh}{{}c{}}`{{{f{BHj}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}``5````````````````````````````````{{fh}b}000{{{f{BFb}}}{{A`{AB`n}}}}`{{{f{BHl}}}{{f{{Bd{{BHn{Fb}}}}}}}}{{{f{BFb}}c}{{A`{AB`n}}}{{Af{AB`}{{Ad{{A`{AB`n}}}}}}J`Jb}}{{{f{C`}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BHl}}}BHl}{{{f{C`}}}C`}{{{f{BFb}}}BFb}{{{f{BI`}}}BI`}{{f{f{Dfc}}}b{}}000{fb}000;{{}BHl}{{}C`}{Gh{{f{c}}}{}}000{{{f{BIb}}}f}1111{Gh{{f{Dfc}}}{}}0000000`{{BIdc}{}BIf}{Ghb}0000{{{f{DfBHl}}}b}111{{{f{BHl}}{f{BHl}}}d}{{{f{C`}}{f{C`}}}d}{{f{f{c}}}d{}}00000`{{{f{BIh}}}Fb}{{{f{BHl}}}{{f{{Bd{Fb}}}}}}{{{f{BFb}}}{{A`{AB`n}}}}{{{f{DfBHl}}}{{f{Df{Gn{Fb}}}}}}{{{f{BHl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{C`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BFb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BI`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{Bl}}BI`}Dd}{cc{}}0000{{{Gn{{Hj{Fb{BHn{Fb}}}}}}}BHl}{{{Gn{{Gn{{Hj{Fb{BHn{Fb}}}}}}}}}BHl}2{BHlC`}33{BIjBI`}{cBHl{{Id{}{{Cj{{Hj{Fb{BHn{Fb}}}}}}}}}}{cBHl{{In{}{{Cj{{Hj{Fb{BHn{Fb}}}}}}}}}}{{{f{C`}}Gh}BIh}{{{f{BFb}}}{{f{C`}}}}{{{f{DfBFb}}}{{f{DfC`}}}}{{{f{C`}}}{{l{Ff}}}}{{{f{BIl}}dd}{{A`{C`n}}}}{{{f{BFb}}}{{A`{AB`n}}}}{{{f{DfC`}}}{{f{DfBHl}}}}{{}Gh}0000000{{}c{}}0000000{C`BHl}1{BHl}{{{f{BHl}}}}310{{{f{BIh}}}d}{{{f{C`}}}d}{{{f{BHl}}}d}{{{f{BHl}}}{{BJ`{{BIn{{Gf{Fb}}}}{Gf{{BHn{Fb}}}}}}}}{{{f{C`}}}BJb}{{{f{BFb}}}{{Gn{Fj}}}}{{{f{BFb}}{Ch{{Hj{HfGh}}}}}{{Gn{Fj}}}}={{{f{BIh}}}Gh}{{{f{C`}}}Gh}?????{{{Gn{Fb}}{Gn{{BHn{Fb}}}}d}BHl}{{{f{AB`}}{Gn{Fj}}C`{Ch{{Gn{Dd}}}}}BFb}{{{f{DfBJb}}}Ch}{{{f{DfBJb}}Gh}Ch}{{{f{BFb}}c}{{A`{AB`n}}}{{E`{AB`}{{Ad{{A`{AB`n}}}}}}J`Jb}}{f}{{{f{C`}}}BId}{{{f{BFb}}AjA@`}{{A`{AB`n}}}}{{BFbe}BFb{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{C`}}HfGh}BIb}{{{f{DfBHl}}}b}{{{f{DfC`}}}b}{{{f{BFb}}Bb}{{A`{AB`n}}}}{{{f{BFb}}}{{A`{AB`n}}}}{C`{{Gn{Fb}}}}0{BFbC`}{{{f{DfBFb}}}C`}{fc{}}000{fEl}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{H`BCh}}}}{fAAn}0000000{C`C`}{{{f{C`}}}{{f{BHl}}}}{{{f{C`}}}{{f{{Gn{{AAd{Fb}}}}}}}}={{}c{}}0000000`````{{{f{BHl}}c}Ab{{E`{{Hj{Fb{f{{BHn{Fb}}}}}}}{{Ad{Ch}}}}J`Jb}}{{{f{BHl}}c}Ab{{E`{{Hj{Fb{f{{BHn{Fb}}}}}}}{{Ad{}}}}J`Jb}}{{{f{{Bd{{AAd{Fb}}}}}}c}Ab{{E`{{AAd{Fb}}}{{Ad{Ch}}}}J`Jb}}{{{f{{Bd{{AAd{Fb}}}}}}c}Ab{{E`{{AAd{Fb}}}{{Ad{}}}}J`Jb}}{{{f{{Bd{c}}}}e{Ch{BJd}}}{{AMd{c}}}{BJfBJh}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{Bd{c}}}}{f{Ij}}e{Ch{BJd}}}{{AMd{c}}}{BJfBJh}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{l{c}}}}FbFb}{{l{c}}}Dn}{{{f{{Gn{{AAd{Fb}}}}}}{f{{Bd{{Cn{Cl}}}}}}}d}{{{f{BJj}}{f{C`}}}Ab}{{BJlBJl}BJl}0`{{{f{BJn}}{f{AB`}}{f{C`}}}{{A`{Abn}}}}{{{f{BJn}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBK`}}Jl}{{Ch{b}}}}{{{f{DfBKb}}{f{Jl}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BK`}}}BK`}{{{f{BKb}}}BKb}{{{f{BF`}}}BF`}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bd{c}}}}}En{{If{En}}}}{{}BF`}{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00{Ghb}00{{{f{BF`}}{f{BF`}}}d}{{f{f{c}}}d{}}00{{{f{BF`}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{Hj{{f{En}}Gh}}}BK`}{{{Hj{{f{En}}Gh}}}BKb}22{{gGh}{{BEd{En}}}{{BAl{Dd}}}{{BAl{En}}}{{D`{}{{Cj{{Gn{{Hj{ce}}}}}}}}}}{{}Gh}00{{}c{}}00{BK`Ab}{BKbAb}{{{f{En}}Gh}BK`}{{{f{En}}Gh}BKb}{{{Gn{Jl}}}BF`}{{{f{DfBK`}}Gh}Ab}{{{f{DfBKb}}Gh}Ab}{{{f{{Bd{BF`}}}}{Ch{Gh}}}{{A`{{BEd{En}}n}}}}0{{{f{{Bd{BF`}}}}{Ch{Gh}}}{{A`{{Gn{En}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00==={{{f{{Bd{AB`}}}}}{{A`{AB`n}}}}{{{f{{Bd{AB`}}}}d}{{A`{AB`n}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AB`{f{{Bd{Dd}}}}{f{{Bd{Dd}}}}{Ch{Dd}}{f{AB`}}}AB`}{{BGdc}{{A`{AB`n}}}{{E`{BKd{f{Df{BKh{BKf}}}}{f{Df{BKh{BKj}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BKl}}{f{{Bd{Fb}}}}ddd}AB`}`{{{f{BKl}}{f{{Bd{Fb}}}}{Ch{{Hj{HfGh}}}}}AB`}{{{f{BKl}}{f{AB`}}{f{Ab}}{f{Ab}}BKn}{{A`{AB`n}}}}`{{{f{Bl}}{f{Bl}}}Dd}{{BL`{N`{{Bd{Dd}}}}}BCb}{{{f{BKl}}{f{Ab}}{f{Ab}}{Ch{{Hj{HfGh}}}}dd}{{A`{AB`n}}}}{{{f{BH`}}Gh}{{Hj{BH`BH`}}}}{{{f{AHh}}}Aj}{{{f{BLb}}}Aj}{{{f{BLd}}{f{{Bd{A@j}}}}Mb}AB`}0{{{f{BLd}}{f{{Bd{A@j}}}}}AB`}0{{{f{BLf}}{Ch{{Gn{{f{Bl}}}}}}{Ch{{f{Bl}}}}d}{{A`{AB`n}}}}{{BGdd}BGd}{{{BLh{c}}{Ch{{N`{BLj}}}}}{{BLh{c}}}BLl}{{{f{Ab}}}{{A`{Abn}}}}{BCbBCb}{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCbBCb}}{{BM`BM`}}{{{f{BHb}}Hf{Ch{{f{AMn}}}}}{{A`{Hfn}}}}0{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}1{{BMdc}BGd{{Ih{{Bd{BCb}}}}}}6`{{BCbc}BCb{{BAl{Dd}}}}{{}BCb}{{BCbd}BCb}{{}BMf}{c{{A`{BCbn}}}{{Ih{{Bd{BCb}}}}}}{{{f{{N`{ce}}}}}{{f{e}}}A@hBMh}`{{BMjd}BMj}`{{{f{BMl}}}d}00`{{BCbc}BCb{{BAl{BCb}}}}{{{f{BLb}}}{{A`{Mjn}}}}{{{N`{BMl}}BMn}{{A`{BGdn}}}}{{BGdBGdcc}BGd{{BAl{BCb}}}}97{{BCbcd}BCb{{BAl{BCb}}}}{{{f{DfACf}}}b}{{{f{DfACh}}}b}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACh}}{Ch{c}}}b{}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}c}b{}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{c}}}}}}Eb}}{{BMdc{N`{{BEd{En}}}}}BGd{{E`{AB`}{{Ad{{A`{AB`n}}}}}}J`Jb}}{{BCbc{BNb{{N`{BN`}}}}}BCb{{E`{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{BCbBCbc{BNb{{N`{BN`}}}}}BCb{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{{f{BCb}}{f{Dfc}}f}{{A`{BNdn}}}{{Af{{f{BCb}}f}{{Ad{{A`{BNdn}}}}}}}}{{{f{AHn}}{f{E`}}}AHn}{{{f{AHn}}{f{E`}}}{{l{c}}}Dn}{{BCbc{f{{Bd{BCb}}}}{BNb{{N`{BN`}}}}}BCb{{E`{{f{Df{Bd{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{BCbBNf{f{{Bd{BCb}}}}dd}BCb}{{ce{BNb{{N`{BN`}}}}d}BCb{{E`{{f{Df{Bd{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{Ih{{Bd{BCb}}}}}}{{{f{{BEd{BBb}}}}{f{{Bd{Gh}}}}}{{BEd{BBb}}}}{{{f{{AHl{}{{AHj{c}}}}}}i{f{Df{Bd{g}}}}}b{}{}{}{{E`{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{E`{e}{{Ad{c}}}}Eb}}{{{f{AI`}}}Fb}{BCbBCb}{{{f{BLb}}}{{A`{Fbn}}}}{{BCbBCbHfEn}BCb}{BH`{{N`{Cl}}}}{{{f{BNh}}}{{Ch{Gh}}}}{BNjBCb}{BNlBCb}62106{{{f{AIb}}Fd}{{l{Ff}}}}{{BCbFd}BCb}{{{f{BLb}}Fd}{{l{Ff}}}}{{cFl}BCb{{Ih{{Bd{BCb}}}}}}{{{f{AIb}}{f{{Bd{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{AId}}}{{A`{{l{Ff}}n}}}}<{{{f{BLb}}}{{A`{{l{Ff}}n}}}}{cBCb{{BAl{BCb}}}}{{{f{BNn}}}{{f{{Bd{Oj}}}}}}``{BCbBNj}{eANf{}{{Id{}{{Cj{c}}}}}}{cBH`{{Id{}{{Cj{{Ch{b}}}}}}}}{cBH`{{Id{}{{Cj{b}}}}}}2{{AGhe}ANh{}{{Id{}{{Cj{c}}}}}}0{{AGhc}BH`{{Id{}{{Cj{b}}}}}}{{AGhc}BH`{{Id{}{{Cj{{Ch{b}}}}}}}}`{{{f{Df{BO`{c}}}}}{{A`{{BEd{BBb}}n}}}BOb}{{{f{BMl}}}{{f{AGj}}}}{{{f{BLb}}}{{f{AGj}}}}{{{f{BOd}}}{{f{AGj}}}}{{{f{BH`}}}{{f{AGj}}}}{{{f{DfBLb}}}{{f{DfAGj}}}}{{{f{DfBH`}}}{{f{DfAGj}}}}{f{{BOf{c}}}{}}{{{f{Mj}}}Jl}{{{f{BOh}}}{{f{{l{B`}}}}}}{{{f{BOj}}{Ch{{f{Bl}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bl}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bl}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOj}}{Ch{{f{Bl}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{f{{BOl{c}}}{}}{f{{f{AM`}}}}{{{f{{N`{c}}}}}BOn{C@`A@h}}{{{f{C@b}}}{{f{{l{Ah}}}}}}{{{f{{N`{ce}}}}}{}A@hBMh}{{{f{{N`{c}}}}}O`C@d}{{{f{C@f}}}{{f{BCb}}}}{{{f{{N`{ce}}}}}{{f{c}}}A@hBMh}{{{f{ANn}}}{{f{En}}}}{{{f{C@h}}}{{f{Ab}}}}{{{f{DfBLb}}}{{A`{Ghn}}}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{{f{{Bd{c}}}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{C@j}}}{{f{{l{Bj}}}}}}{{{Gn{BCb}}}BCb}{{{f{BOj}}{Ch{{f{Bl}}}}d}{{A`{{L`{LnLb}}n}}}}{{{N`{{C@l{c}}e}}}{{N`{ce}}}{}BMh}{{{N`{{Bd{{C@l{c}}}}e}}}{{N`{{Bd{c}}e}}}{}BMh}{{{f{Bl}}}BCb}{{BCb{Ch{Fb}}}BCb}{{{f{C@n}}}{{A`{{l{Bj}}n}}}}{{{f{C@n}}}{{l{Bj}}}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMn}}}{{L`{LlLb}}}}`{{{BLh{{Cn{BLl}}}}{Ch{{N`{{BEd{En}}}}}}}{{A`{CA`n}}}}{{{CAb{c}}{f{{BEd{En}}}}}{{A`{{CAd{c}}n}}}CAf}{{{CAh{c}}{f{{BEd{En}}}}}{{A`{{CAj{c}}n}}}CAf}{{{CAl{c}}Gh}{{A`{CAnn}}}BLl}{{CB`Gh}{{A`{CAnn}}}}{{{CBb{c}}{f{{BEd{En}}}}}{{A`{{CBd{c}}n}}}CAf}{{{f{Df{BLh{c}}}}}{{A`{CBfn}}}BLl}`{BCbCBh}{{BCbCBjBCb}BCb}{{BM`BM`}}{{BMfBMf}BMf}{{{f{DfBMf}}BMf}b}10{{{f{BMf}}}Fb}0321{f{{f{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}{{f{c}}}A@hBMh}111111111111111111111111111111{{{f{Df}}}{{f{Dfc}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BGdFbcFl}BGd{{Ih{{Bd{BCb}}}}}}{{{f{{N`{e}}}}}CBlCBn{{CC`{c}}A@h}}{BH`{{Cn{Cl}}}}{{{f{BLb}}}{{Ch{{Cn{G`}}}}}}```{BGdBGd}```{{{f{CCb}}{f{Dd}}}{{A`{Ddn}}}}{{{f{{N`{e}}}}c}{}{}{{CCd{c}}A@h}}{{{f{Df}}{CCf{c}}}{}{}}{{CCh{Gn{BCb}}}{{A`{BCbn}}}}{{{f{ANb}}{f{ANb}}c}{{A`{ANbn}}}AOn}{{{f{BOd}}{f{Df{Bd{Fj}}}}}{{A`{{Ch{Fj}}n}}}}{{{f{CCj}}FjFj}{{A`{Fjn}}}}{{CCh{Gn{BCb}}}BCb}{{{f{CCl}}}b}{{BCbEn}BCb}{{{f{BLb}}{f{En}}Gb}{{A`{Abn}}}}{{BGd{CCn{{f{Bl}}EnA@n}}d}BGd}{{{f{AIf}}{f{En}}}{{A`{Abn}}}}3{{{f{B@`}}{f{En}}}{{A`{Abn}}}}{{BGdEnd}BGd}2{{{f{AIf}}{f{En}}Gb}{{A`{Abn}}}}{{{f{B@`}}{f{En}}Gb}{{A`{Abn}}}}{{BCbEnGb}BCb}`{BCbCD`}{{{f{{N`{c}}}}}{{Ch{{f{AM`}}}}}{AM`A@h}}{BCbBCb}{{{f{CDb}}}{{A`{Abn}}}}1`{{{f{CDd}}}{{A`{{l{Kl}}n}}}}{{{f{BH`}}Gh}d}{{{f{CDf}}{f{Ab}}}{{A`{Abn}}}}{{{f{BLb}}{f{Ab}}}{{A`{Abn}}}}{{{f{CDf}}c}{{A`{Abn}}}Bh}{{{f{BLb}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gh}}}}}}}}``{{{f{BLb}}}{{f{{Gn{{Cn{Cl}}}}}}}}{{{f{DfBLb}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BCbBCbBCb}BCb}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BCbBCb}BCb}10{{{f{CCl}}}CCl}{{{f{BGd}}}BGd}{{{f{BMd}}}BMd}{{{f{BMn}}}BMn}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{BFd}}}BFd}{{{f{BGh}}}BGh}{{{f{CEb}}}CEb}{{{f{BHb}}}BHb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{ABb}}}ABb}{{{f{A@j}}}A@j}{{{f{BKn}}}BKn}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{C@f}}}C@f}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{BCb}}}BCb}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{{CIj{c}}}}}{{CIj{c}}}{JhJh}}{{{f{CIl}}}CIl}{{{f{CIn}}}CIn}{{{f{CBj}}}CBj}{{{f{CJ`}}}CJ`}{{{f{CJb}}}CJb}{{{f{{BNb{c}}}}}{{BNb{c}}}Jh}{{{f{CJd}}}CJd}{{{f{CJf}}}CJf}{{{f{CJh}}}CJh}{{{f{CJj}}}CJj}{{{f{CJl}}}CJl}{{{f{CJn}}}CJn}{{{f{CK`}}}CK`}{{{f{{N`{ce}}}}}{{N`{ce}}}A@h{BMhJh}}{{{f{CKb}}}CKb}{{{f{CKd}}}CKd}{{{f{BNf}}}BNf}{{{f{CKf}}}CKf}{{{f{CKh}}}CKh}{{{f{CKj}}}CKj}{{{f{CKl}}}CKl}{{{f{CKn}}}CKn}{{{f{CL`}}}CL`}{{{f{CLb}}}CLb}{{{f{CLd}}}CLd}{{{f{CLf}}}CLf}{{{f{BM`}}}BM`}{{{f{CCh}}}CCh}{{{f{BMf}}}BMf}{{{f{A@b}}}A@b}{{{f{BH`}}}BH`}{{{f{BGn}}}BGn}{{{f{CLh}}}CLh}{{{f{CLj}}}CLj}{{{f{BBb}}}BBb}{{{f{Mj}}}Mj}{{{f{CLl}}}CLl}{{{f{CLn}}}CLn}{{{f{A@`}}}A@`}{{{f{BJd}}}BJd}{{{f{CM`}}}CM`}{{{f{CMb}}}CMb}{{{f{CMd}}}CMd}{{{f{BLb}}}{{N`{BLb}}}}{{f{f{Dfc}}}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{c}}}}{f{CMf}}}CMf{CMhA@h}}{fb}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CMj}}}{{Ch{{f{CMl}}}}}}{{{f{CDh}}}{{Ch{{f{CMl}}}}}}{{{f{CDl}}}{{Ch{{f{CMl}}}}}}``{{{f{BHb}}{f{BHb}}}BAb}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}BAb{CMnA@h}BMh}{{{f{{Bd{BCb}}}}}BCb}{{BMjCEl}BMj}{{{f{CEl}}{f{CEn}}}d}`{{{f{{Bd{Fj}}}}}{{A`{Fjn}}}}{cBCb{{BAl{Dd}}}}{BGd{{A`{AB`n}}}}{c{{A`{{Gn{AB`}}n}}}{{In{}{{Cj{BGd}}}}}}{BAde{}{{ANf{c}}ALl}}0{{BAdAGh}e{}{{ANh{c}}ALl}}0{{AEbDd}{{l{c}}}Dn}{{AEd{f{{l{c}}}}}{{l{c}}}Dn}10{{AEdDdEn}{{l{c}}}Dn}0{BGd{{A`{CCln}}}}{{{f{DfBGd}}}{{A`{{N`{{BEd{En}}}}n}}}}{eBCb{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{CJj}}Gh}CN`}``{{{f{BLf}}{Gn{{f{Bl}}}}{Ch{{f{Bl}}}}d}{{A`{AB`n}}}}{{{f{{Bd{c}}}}{f{{BEd{BBb}}}}}{{A`{{Gn{Gh}}n}}}{{Ih{Bl}}}}`{{f{f{c}}}BAb{}}0{{CGj{f{{BEd{En}}}}}{{A`{CNbn}}}}{BMfBMf}```{{{f{CLn}}}{{A`{{N`{{BEd{En}}}}n}}}}{{cCLl}{{A`{BGdn}}}{{Ih{{Bd{BGd}}}}}}{{{f{C@n}}{f{{l{Bj}}}}}{{l{Bj}}}}{{ed}{{A`{BCbn}}}{{BAl{BCb}}Jh}{{Ih{{Bd{c}}}}}}{{{f{CMj}}{Gn{BGd}}}{{A`{BGdn}}}}{{{f{CDh}}{Gn{BGd}}}{{A`{BGdn}}}}44{e{{A`{BCbn}}}{{BAl{BCb}}Jh}{{Ih{{Bd{c}}}}}}{{c{f{Bl}}d}BCb{{Ih{{Bd{BCb}}}}}}{{BNjc}BCb{{BAl{BCb}}}}{{{f{CNd}}{f{{Bd{Bb}}}}}{{l{An}}}}{{{f{C@n}}{f{Bl}}d}{{A`{{l{An}}n}}}}{{BNlc}BCb{{BAl{BCb}}}}{{{f{BMf}}BMf}d}{{{f{CNd}}{f{{l{B`}}}}}{{l{An}}}}{{{f{C@n}}{f{{l{Bj}}}}dd}{{A`{{l{An}}n}}}}{{{f{C@n}}{f{Bl}}}{{A`{{l{An}}n}}}}{{{f{Cl}}{f{AGh}}}{{Cn{Cl}}}}{{{f{Ab}}Gh}{{A`{{l{Ff}}n}}}}{{{f{{N`{CNf}}}}{f{CNh}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}0{BGdBGd}{{{CNn{c}}}{{A`{Ghn}}}BLl}{BCbBCb}{{{f{C@n}}{f{Bl}}d}{{A`{{l{Ff}}n}}}}{{{f{C@n}}{f{{l{Bj}}}}d}{{A`{{l{Ff}}n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{ANl}}Bb{Ch{Bb}}{Ch{{f{CGh}}}}Bbd}{{A`{Ghn}}}}{{{f{CO`}}{Ch{{f{COb}}}}}{{A`{Hfn}}}}{{{f{{Bd{Bb}}}}Bb{Ch{Bb}}{Ch{{f{CGh}}}}Bbd}{{A`{Ghn}}}}3{{{AOj{Bl}}}En}{{{f{BKl}}{f{{Bd{A@j}}}}dd}AB`}{{{f{COd}}}{{CCn{GhMbA@n}}}}`{{BGdBGd{Ch{Dd}}}BGd}{{{f{COf}}{f{AB`}}{Ch{Dd}}{Ch{{Hj{HfGh}}}}}{{A`{AB`n}}}}{{{f{COf}}{f{AB`}}{Ch{{Hj{HfGh}}}}d}{{A`{{Hj{AB`AB`}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BCbd}BCb}{{BCbced}BCb{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{Ih{{Bd{BCb}}}}}}212121{{ce}BCb{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{Ih{{Bd{BCb}}}}}}32{{COhBCbGhd}BCb}{{{f{{N`{c}}}}}COj{CMhA@h}}{{{f{CO`}}{Ch{{f{COb}}}}CHld}{{A`{AB`n}}}}```{{BCbBCbBHbCEd}BCb}`{CKfBCb}`{{BCbBCbBHbCEd{Ch{Ld}}{Ch{Dd}}}BCb}0{AMlHf}00{{{f{COl}}}{{l{Nh}}}}{{{f{COn}}}{{l{Nh}}}}{{{f{CDd}}}{{A`{{l{Nh}}n}}}}`{{{f{D@`}}}{{l{Lb}}}}{{{f{BHb}}}Hf}`{{{f{BHb}}}d}```{{}b}{cbBMh}{{}BGd}{{}BMn}{{}CDj}{{}CDn}{{}BFd}{{}BGh}{{}CEh}{{}D@b}{{}BKn}{{}CEl}{{}CF`}{{}CFb}{{}CFd}{{}CFf}{{}CFh}{{}CFl}{{}CG`}{{}CGb}{{}CGd}{{}CGf}{{}CGl}{{}CHf}{{}CHh}{{}BCb}{{}CHl}{{}CHn}{{}CI`}{{}CIb}{{}CIf}{{}CIh}{{}CIl}{{}CJ`}{{}{{BNb{{N`{CCj}}}}}}{{}{{BNb{{N`{BN`}}}}}}{{}{{BNb{{N`{D@d}}}}}}{{}{{N`{D@f}}}}{{}{{N`{Bl}}}}{{}{{N`{c}}}D@h}{{}{{N`{{Bd{c}}}}}{}}{{}CKf}{{}CKh}{{}CKl}{{}CKn}{{}CL`}{{}CLb}{{}CLf}{{}BMf}{{}A@b}{{}BGn}{{}CLj}{{}BBb}{{}Mj}{{}CLl}{{}CLn}{{}A@`}`{{}{{AAl{{Gn{ABb}}{Gn{A@j}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{CNl{{Cn{D@j}}}}}{{CNl{{Cn{D@j}}}}}}{Gh{{f{c}}}{}}00{{{f{{AMj{c}}}}}f{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BNb{c}}}}}f{}}22222222{{{f{{N`{ce}}}}}{{f{c}}}A@hBMh}333333333333333333333333333333{Gh{{f{Dfc}}}{}}00{{{f{Df{AMj{c}}}}}{{f{Df}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CLn}}}{{A`{Eln}}}}{{{f{BGd}}}{{A`{Eln}}}}0001{{{f{{N`{c}}}}}{{f{Bl}}}{AM`A@h}}{{{f{BBb}}c}{{A`{D@ln}}}{{Jf{}{{Cj{{f{D@n}}}}}}}}{c{{A`{CE`}}}ADn}{c{{A`{BFd}}}ADn}{c{{A`{BGh}}}ADn}{c{{A`{BHb}}}ADn}{c{{A`{CEd}}}ADn}{c{{A`{CEf}}}ADn}{c{{A`{CEh}}}ADn}{c{{A`{BKn}}}ADn}{c{{A`{CEl}}}ADn}{c{{A`{CEn}}}ADn}{c{{A`{CF`}}}ADn}{c{{A`{CFb}}}ADn}{c{{A`{CFd}}}ADn}{c{{A`{CFf}}}ADn}{c{{A`{CFh}}}ADn}{c{{A`{CFj}}}ADn}{c{{A`{CFl}}}ADn}{c{{A`{CFn}}}ADn}{c{{A`{CG`}}}ADn}{c{{A`{CGb}}}ADn}{c{{A`{CGd}}}ADn}{c{{A`{CGf}}}ADn}{c{{A`{CGh}}}ADn}{c{{A`{CGj}}}ADn}{c{{A`{CGl}}}ADn}{c{{A`{C@f}}}ADn}{c{{A`{CHf}}}ADn}{c{{A`{CHh}}}ADn}{c{{A`{BCb}}}ADn}{c{{A`{CHj}}}ADn}{c{{A`{CHn}}}ADn}{c{{A`{CI`}}}ADn}{c{{A`{CIb}}}ADn}{c{{A`{CId}}}ADn}{c{{A`{CIf}}}ADn}{c{{A`{CIh}}}ADn}{c{{A`{{CIj{e}}}}}ADn{DA`Jh}}{c{{A`{CIl}}}ADn}{c{{A`{CIn}}}ADn}{c{{A`{CBj}}}ADn}{c{{A`{CJ`}}}ADn}{c{{A`{CJb}}}ADn}{c{{A`{{BNb{{N`{BOd}}}}}}}ADn}{c{{A`{{BNb{{N`{CCb}}}}}}}ADn}{c{{A`{{BNb{{N`{BN`}}}}}}}ADn}{c{{A`{{BNb{{N`{CLn}}}}}}}ADn}{c{{A`{{BNb{Ab}}}}}ADn}{c{{A`{CJd}}}ADn}{c{{A`{CJf}}}ADn}{c{{A`{CJh}}}ADn}{c{{A`{CJl}}}ADn}{c{{A`{CJn}}}ADn}{c{{A`{CK`}}}ADn}{c{{A`{{N`{e}}}}}ADnA@h}{c{{A`{CKb}}}ADn}{c{{A`{CKd}}}ADn}{c{{A`{BNf}}}ADn}{c{{A`{CKj}}}ADn}{c{{A`{CKl}}}ADn}{c{{A`{CKn}}}ADn}{c{{A`{CL`}}}ADn}{c{{A`{CLb}}}ADn}{c{{A`{CLd}}}ADn}{c{{A`{CLf}}}ADn}{c{{A`{BM`}}}ADn}{c{{A`{A@b}}}ADn}{c{{A`{BGn}}}ADn}{c{{A`{CLh}}}ADn}{c{{A`{CLj}}}ADn}{c{{A`{BBb}}}ADn}{c{{A`{Mj}}}ADn}{c{{A`{CLl}}}ADn}{c{{A`{CLn}}}ADn}{c{{A`{A@`}}}ADn}{c{{A`{BJd}}}ADn}{c{{A`{CM`}}}ADn}{c{{A`{CMb}}}ADn}{c{{A`{CMd}}}ADn}```{{{f{Ab}}HfDAb}{{A`{Abn}}}}{{BNlHfDAb}BCb}{{BCbHfDAb}BCb}{{BMfBMf}BMf}{{{f{CLn}}}{{A`{{`{BEb}}n}}}}``{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCbBCb}}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}{{BCbc}BCb{{BAl{BCb}}}}{{{N`{AGjc}}}{{A`{{N`{ec}}{N`{AGjc}}}}}BMh{AGjJ`Jb}}{{{f{{N`{c}}}}AAn}{{Ch{b}}}{CMhA@h}}{{{N`{AGjc}}}{{N`{ec}}}BMh{AGjJ`Jb}}{{{f{{N`{ce}}}}}{{DAd{ce}}}A@h{JhBMh}}{Ghb}00000{{{f{DfCCl}}}b}11{{BGde}BGd{{BAl{BM`}}}{{Id{}{{Cj{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{N`{ce}}}}}bA@hBMh}333333333333333333333333333333{BCbBCb}2{{BGd{Ch{{Gn{BCb}}}}}BGd}1{{{f{BLb}}}Ab}{{{f{{N`{c}}}}CMf}b{CMhA@h}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMn}}}{{L`{LlLb}}}}`{BCbDAf}{{{f{B@`}}}{{f{En}}}}{{{f{BLb}}}{{f{En}}}}{{{f{BH`}}}{{f{AGh}}}}{{{f{BBb}}}{{f{AGh}}}}{{{f{Mj}}}{{f{En}}}}``{{{f{En}}}BCb}{cBCb{{Ih{{Bd{En}}}}}}`{CKhBCb}{{}CIf}{{}BMf}{{{f{{N`{c}}}}{f{DAh}}}d{CMhA@h}}{fc{{BAj{BAh}}}}0`{{{f{CNd}}{f{{Bd{Bb}}}}}{{l{An}}}}{{{f{CNd}}{f{{l{B`}}}}}{{l{An}}}}{{BHb{f{En}}{f{Bl}}}{{A`{bn}}}}{{BHb{Ch{{f{Bl}}}}{f{Bl}}}{{A`{bn}}}}{{{f{{BEd{c}}}}{f{{BEd{c}}}}}{{A`{bn}}}{}}{{{f{DAj}}{f{Bl}}}{{A`{bn}}}}{{{f{{N`{c}}}}{f{CMf}}}b{CMhA@h}}`{{{f{CE`}}{f{CE`}}}d}{{{f{BFd}}{f{BFd}}}d}{{{f{BGh}}{f{BGh}}}d}{{{f{BHb}}{f{BHb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{ABb}}{f{ABb}}}d}{{{f{BKn}}{f{BKn}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{CHh}}{f{CHh}}}d}{{{f{BCb}}{f{BCb}}}d}{{BCbc}BCb{{BAl{BCb}}}}{{{f{CHj}}{f{CHj}}}d}{{{f{CHn}}{f{CHn}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIb}}{f{CIb}}}d}{{{f{D@l}}{f{D@l}}}d}{{{f{CId}}{f{CId}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{{CIj{c}}}}{f{{CIj{c}}}}}d{DAlJh}}{{{f{CIl}}{f{CIl}}}d}{{{f{CIn}}{f{CIn}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CJ`}}{f{CJ`}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{{BNb{{N`{c}}}}}}{f{{BNb{{N`{c}}}}}}}dA@h}{{{f{{BNb{Ab}}}}{f{{BNb{Ab}}}}}d}{{{f{CJd}}{f{CJd}}}d}{{{f{CJf}}{f{CJf}}}d}{{{f{CJh}}{f{CJh}}}d}{{{f{CJl}}{f{CJl}}}d}{{{f{CJn}}{f{CJn}}}d}{{{f{CK`}}{f{CK`}}}d}{{{f{{N`{Cl}}}}{f{Cl}}}d}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAlA@h}BMh}{{{f{{N`{DAn}}}}{f{DAn}}}d}{{{f{CKb}}{f{CKb}}}d}{{{f{CKd}}{f{CKd}}}d}{{{f{BNf}}{f{BNf}}}d}{{{f{CKj}}{f{CKj}}}d}{{{f{CKl}}{f{CKl}}}d}{{{f{CKn}}{f{CKn}}}d}{{{f{CL`}}{f{CL`}}}d}{{{f{CLb}}{f{CLb}}}d}{{{f{CLd}}{f{CLd}}}d}{{{f{CLf}}{f{CLf}}}d}{{{f{BM`}}{f{BM`}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BH`}}{f{BH`}}}d}{{{f{BH`}}{f{{f{Cl}}}}}d}{{{f{BGn}}{f{BGn}}}d}{{{f{CLh}}{f{CLh}}}d}{{{f{CLj}}{f{CLj}}}d}{{{f{BBb}}{f{BBb}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{CLl}}{f{CLl}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BJd}}{f{BJd}}}d}{{{f{CM`}}{f{CM`}}}d}{{{f{CMb}}{f{CMb}}}d}{{{f{CMd}}{f{CMd}}}d}{{BCbc}BCb{{BAl{BCb}}}}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{Bl}}}El}{{DB`BCbd}BCb}{{{f{{N`{c}}}}{f{DBb}}}b{CMhA@h}}{{{f{{N`{c}}}}{f{DBb}}}d{CMhA@h}}``{{BCbc}BCb{{BGl{Dd}}}}{{BCbc}BCb{{Ih{{Bd{En}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDl}}}DBd{}}{{{f{{N`{c}}}}{f{CMf}}}b{CMhA@h}}{{{f{{Bd{DBf}}}}d{Ch{{f{CMl}}}}}{{A`{{N`{{Bd{DBf}}}}n}}}}{{{f{{Bd{DBf}}}}d{Ch{{f{CMl}}}}d}{{A`{{Hj{{N`{{Bd{DBf}}}}Gh}}n}}}}{{{f{{Bd{c}}}}{f{{Bd{c}}}}}d{{Ih{ANl}}}}{{{f{BGd}}d}{{A`{Eln}}}}{BNjBCb}{{BGde}BGd{{BAl{BM`}}Jh}{{Ih{{Bd{c}}}}}}{{{f{AIl}}}{{A`{Abn}}}}{BCbBCb}{{{f{AIl}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}`{{{f{DfBMf}}c}b{{Id{}{{Cj{BMf}}}}}}{{BCbBCbBCb}BCb}{{{f{C@n}}{f{{l{Bj}}}}Gh}{{A`{{l{Bj}}n}}}}{A@j{{Hj{FbFb}}}}{{{f{C@n}}{f{Bl}}}{{A`{{l{Ah}}n}}}}{{{f{C@n}}{f{{l{Bj}}}}}{{A`{{l{Ah}}n}}}}{{{f{C@n}}{f{Bl}}{f{En}}}{{A`{Abn}}}}{{{f{ACf}}}d}{{{f{CCl}}}{{Ch{{A`{AB`n}}}}}}{{BGdGh}{{A`{AB`n}}}}{{{f{CCl}}}{{A`{AB`n}}}}{{{f{ACf}}}{{f{Oj}}}}{{{f{BLb}}}{{Ed{Oj}}}}{{BL`Hf}BCb}{{BL`{f{Bl}}}BCb}{{BL`e}BCb{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{BH`}}}{{f{{Bd{BBb}}}}}}`{{BGdc}BGd{{BAl{BCb}}}}{{BCbc}BCb{{BAl{BCb}}}}`10{{BCbAIh}BCb}{{{f{AIn}}c}{{A`{AInn}}}{}}{{{f{AJ`}}{f{{l{An}}}}}{{A`{{l{c}}n}}}Dn}{{{f{BLb}}{f{{l{An}}}}}{{A`{Abn}}}}{{BGdBCb}BGd}5{{{f{C@n}}{f{Bl}}d}{{A`{{l{Ff}}n}}}}{{{f{C@n}}{f{{l{Bj}}}}dd}{{A`{{l{Ff}}n}}}}{{{f{C@n}}{f{Bl}}}{{A`{{l{Ff}}n}}}}{ACh{{l{c}}}Dn}{DBh{{A`{AB`n}}}}{{{f{DfDBj}}{f{DfAB`}}}{{A`{bn}}}}{{AOn{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{BMjBGd}{CMj{{A`{BGdn}}}}{CDh{{A`{BGdn}}}}{CDl{{A`{BGdn}}}}{{{BLh{c}}}{{A`{AB`n}}}BLl}{{{f{Df{CAb{c}}}}{f{DfAB`}}}{{A`{bn}}}CAf}{{{DBl{c}}}{{A`{AB`n}}}BLl}{{{BO`{c}}}{{A`{AB`n}}}BOb}{{{f{Df{DBn{c}}}}{f{DfAB`}}}{{A`{bn}}}CAf}{{{f{Df{CAh{c}}}}{f{DfAB`}}}{{A`{bn}}}CAf}{{{f{Df{DC`{c}}}}{f{DfAB`}}}{{A`{bn}}}CAf}{{{DCb{c}}}{{A`{AB`n}}}BLl}{{{CNn{c}}}{{A`{AB`n}}}BLl}{{{CAl{c}}}{{A`{AB`n}}}BLl}{CB`{{A`{AB`n}}}}{{{CBb{c}}{f{DfAB`}}}{{A`{Kfn}}}CAf}{{{f{DfACf}}}{{l{Ah}}}}?>={{{DBl{c}}{Ch{{N`{BLj}}}}d}{{A`{AB`n}}}BLl}{{{f{CAn}}Gh}d}{{}BCb}{BGdBGd}{BNlBCb}{BCbBCb}{{{f{BLb}}}Mj}`1```{{}{{BNb{{N`{BN`}}}}}}{{{f{CDb}}}{{A`{Abn}}}}3{{BCbBCb}BCb}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df}}}{{A`{b}}}}{{{f{Df{N`{AFn}}}}}{{A`{bBDl}}}}{{{f{BOd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CE`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BFd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BGh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BHb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CEd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{ABb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{A@j}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BMl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{DCd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BKn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEn}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CF`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CFb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CG`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CHf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CHh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BCb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CHj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CHn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CI`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{D@l}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CId}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{CIj{c}}}}{f{DfHn}}}{{A`{bI`}}}Jh}{{{f{CIl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CBj}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CJ`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{BNb{c}}}}{f{DfHn}}}{{A`{bI`}}}{}}{{{f{CJd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJh}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CJj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJl}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CJn}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CK`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}A@hBMh}{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}{AGlA@h}BMh}{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}{BEbA@h}BMh}{{{f{CKb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CKd}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{BNf}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CKf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CL`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BM`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BMf}}{f{DfHn}}}{{A`{bI`}}}}0000{{{f{A@b}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BH`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BGn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BBb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Mj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{A@`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BJd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CM`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CMb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CMd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Bl}}BI`}Dd}```{{BCbce}BCb{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{Ih{{Bd{BCb}}}}}}{{BMjd}BMj}``{{{f{Bl}}c}{{A`{BCbn}}}{{Ih{{Bd{BCb}}}}}}{{BCb{Ch{Fb}}}BCb}{cc{}}000000{CLnBGd}1{BMdBGd}22222222222222222222222222222222{FbABb}3333333{CEnBKn}444444444444444444{{{f{Bl}}}CGh}555555555{NnBCb}6{KdBCb}{FbBCb}{KfBCb}{AjBCb}{NjBCb}{HfBCb}{OfBCb}{dBCb}{O`BCb}{{{f{Bl}}}BCb}{C@fBCb}{BbBCb}{cc{}}00000{DCfD@l}1111111{CFfCBj}22{CJh{{BNb{{N`{BOd}}}}}}{CKb{{BNb{{N`{BOd}}}}}}{DCh{{BNb{{N`{BOd}}}}}}{DCj{{BNb{{N`{BOd}}}}}}{DCl{{BNb{{N`{BOd}}}}}}{DCn{{BNb{{N`{BOd}}}}}}{CJn{{BNb{{N`{BOd}}}}}}{CJl{{BNb{{N`{BOd}}}}}}:{CKd{{BNb{{N`{BOd}}}}}}{BNf{{BNb{{N`{BOd}}}}}}<<<<<<<{{{Gn{ce}}}{{N`{{Bd{c}}e}}}{}{BMhJh}}{{{f{D@f}}}{{N`{D@f}}}}{{{N`{Bl}}}{{N`{{Bd{Bb}}}}}}?{{{Cn{ce}}}{{N`{ce}}}A@hBMh}{El{{N`{Bl}}}}{DD`c{}}{{{f{ANl}}}{{N`{ANl}}}}{{{f{Bl}}}{{N`{Bl}}}}{DDb{{N`{D@f}}}}{{{AAd{c}}}{{N`{{Bd{c}}}}}{}}{DBf{{N`{ANl}}}}{H`{{N`{Bl}}}}{{{Ed{c}}}{{N`{c}}}{DDdA@h}}{c{{N`{c}}}{}}{DDf{{N`{ANj}}}}{{{f{ANj}}}{{N`{ANj}}}}{{{f{{Bd{c}}}}}{{N`{{Bd{c}}}}}Jh}{cc{}}0{CKbBNf}{CJhBNf}2{CJlBNf}{DClBNf}444444{CLbCL`}5555{DdBM`}{BCbBM`}{ElBM`}{{{f{Bl}}}BM`}99999{DDhBH`}:{JlCLh};;;{BbMj}{DdMj}{HfMj}{O`Mj}{NnMj}{cc{}}{KfMj}{KdMj}{AjMj}{NjMj}{OfMj}{FbMj}{dMj}7777777{{{f{{BEd{BBb}}}}}DDj}{Fb{{Ch{BMf}}}}{FbBMf}00{{c{Ch{Ij}}}DDl{}}{{{DDn{Hf}}{DDn{Bb}}{Ch{Ij}}}DE`}{{{DDn{Hf}}{DDn{Bb}}{Ch{Ij}}}DEb}{c{{AMj{{l{e}}}}}{{Id{}{{Cj{}}}}}Al}{c{{AMj{{l{An}}}}}{{Id{}{{Cj{d}}}}}}{e{{N`{{Bd{c}}}}}{}{{Id{}{{Cj{c}}}}}}{cBMf{{Id{}{{Cj{BMf}}}}}}{{gGh}{{DEd{Hf}}}Ih{{Id{}{{Cj{{Ch{c}}}}}}}{{Id{}{{Cj{{Ch{e}}}}}}}}0{e{{DEd{Hf}}}{{Id{}{{Cj{{Ch{d}}}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADl{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGh}{{DEd{Hf}}}BJh{{Id{}{{Cj{{Ch{c}}}}}}}{{Id{}{{Cj{{Ch{e}}}}}}}}763{{Dde}ADl{}{{D`{}{{Cj{c}}}}}}{{{f{Bl}}}{{Ch{BMf}}}}{c{{AMj{{l{e}}}}}{{In{}{{Cj{}}}}}Al}{e{{N`{{Bd{c}}}}}J`{{In{}{{Cj{c}}}}}}`{c{{A`{{CNn{AFn}}n}}}{{BAl{DBf}}}}{{}{{N`{c}}}A@h}{c{{N`{ec}}}BMhA@h}{{Dd{f{{Bd{c}}}}}ADl{}}{{Dd{f{{Bd{{Ch{c}}}}}}}ADl{}}{{{f{Bl}}}{{A`{DEf}}}}{c{{AMj{{l{An}}}}}{{Jj{}{{Cj{d}}}}}}{c{{AMj{{l{e}}}}}{{Jj{}{{Cj{}}}}}Al}{En{{BNb{{N`{BN`}}}}}}{{{f{Bl}}{Ch{{f{CMl}}}}}{{A`{CO`n}}}}{{{f{Bl}}{Ch{{f{CMl}}}}{Ch{{N`{CJj}}}}}{{A`{CB`n}}}}{{Ddc}DEh{}}{{{Gn{c}}AGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{Gn{c}}AGh}{{ALl{}{{AO`{e}}{AOb{c}}{AOd{g}}}}}{AOf{AOh{e}}}Jh{{Hd{}{{Cj{e}}}}JjJ`Jb}}`{{DdcGh}AJb{}}{{GhcAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{}CIf}{{BGdBGdcc}BGd{{BAl{BCb}}}}{{{f{DEj}}{f{AB`}}ei}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}{{BAl{Dd}}}{{Id{}{{Cj{g}}}}}}{{DdGh}AJd}{{GhAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{GhAGh}BH`}``{{BCbc{BNb{{N`{BN`}}}}DEl}BCb{{E`{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}`{{BCbc}BCb{{BAl{BCb}}}}{{BCbGhGh}BCb}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DEnA@h}BMh}{{{f{BLb}}Gh}{{A`{Jln}}}}{{BNjBCbd}BCb}{{BNlBCbd}BCb}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}6{{{f{{N`{CNf}}}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}{{{f{AJf}}Gh}{{A`{Jln}}}}{{{f{B@`}}Gh}{{A`{Jln}}}}{{{f{AJf}}Gh}Jl}{{{f{B@`}}Gh}Jl}{CD`BCb}{{{f{BGd}}}BMf}{{{f{CLh}}}En}{{}En}{{{f{CEj}}HfCEd{Ch{{f{AMn}}}}}{{A`{CEbn}}}}00{{{f{D@d}}{f{{BEd{En}}}}DF`{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BN`}}{f{{BEd{En}}}}DF`{f{{Bd{Oj}}}}}{{A`{Ojn}}}}{{{f{DDj}}{f{Bl}}}{{Ch{Oj}}}}{{{f{AGh}}}{{f{{Bd{BBb}}}}}}{{{f{BNn}}}Gh}{{{f{{Bd{Bb}}}}}{{Ch{Gh}}}}{{{f{Df{CAl{c}}}}}{{A`{{f{{N`{CJj}}}}n}}}BLl}{{{f{DfCB`}}}{{A`{{f{{N`{CJj}}}}n}}}}{{{f{BLb}}}{{Ch{{Nb{G`}}}}}}{{{f{Df{N`{ce}}}}}{{Ch{{f{Dfc}}}}}A@hBMh}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}A@hBMh}{{{f{BLb}}Gh}{{Ch{{f{K`}}}}}}{{{f{BLb}}GhGh}{{Ch{{f{K`}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}DFb}{{CNl{{Cn{CNj}}}}}}{{{f{CEj}}CEbCEdLd{Ch{{f{AMn}}}}CEh}{{A`{DFdn}}}}{{{f{CGb}}}{{N`{CGd}}}}{{{f{{N`{CNf}}}}{f{CNh}}{Oh{Gh}}}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}{f{{Bd{{Oh{Gh}}}}}}}{{CNl{{Cn{CNj}}}}}}{{{f{Dfc}}}{{A`{DFfn}}}{BObBLlA@h}}{{{f{DCd}}{f{{BEd{En}}}}}{{A`{{N`{{BEd{En}}}}n}}}}{{{f{BBl}}Gh}Jl}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{BLb}}Gh}Jl}{{{f{CMj}}}d}{{{f{CDh}}}d}`{{BGde}BMd{{BAl{BCb}}Jh}{{Ih{{Bd{c}}}}}}{{{f{DFh}}{Gn{Fj}}{f{BFd}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}{{BGdBCbcBFd}BMd{{Ih{{Bd{BCb}}}}}}2{{BHbBHb{f{{Bd{Hf}}}}CEdLd{Ch{AMn}}}{{A`{{Gn{{AAd{Fb}}}}n}}}}{{CEj{f{{Bd{Hf}}}}CEdLd{f{{Ch{Dd}}}}ddCEh}{{Hj{{Gn{{AAd{Fb}}}}{Gn{Hf}}{Gn{Hf}}}}}}{{{f{BIl}}dd}{{A`{C`n}}}}{{{f{{AJh{}{{Cj{c}}}}}}e}c{}{}}{{BCbc}BCb{{BAl{BCb}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DEnA@h}BMh}21`{{{f{BLb}}}d}{{{f{BFd}}{f{Dfc}}}bAE`}{{{f{BGh}}{f{Dfc}}}bAE`}{{{f{BHb}}{f{Dfc}}}bAE`}{{{f{CEd}}{f{Dfc}}}bAE`}{{{f{CEf}}{f{Dfc}}}bAE`}{{{f{CEh}}{f{Dfc}}}bAE`}{{{f{BKn}}{f{Dfc}}}bAE`}{{{f{CEl}}{f{Dfc}}}bAE`}{{{f{CEn}}{f{Dfc}}}bAE`}{{{f{CF`}}{f{Dfc}}}bAE`}{{{f{CFb}}{f{Dfc}}}bAE`}{{{f{CFd}}{f{Dfc}}}bAE`}{{{f{CFf}}{f{Dfc}}}bAE`}{{{f{CFh}}{f{Dfc}}}bAE`}{{{f{CFj}}{f{Dfc}}}bAE`}{{{f{CFl}}{f{Dfc}}}bAE`}{{{f{CFn}}{f{Dfc}}}bAE`}{{{f{CG`}}{f{Dfc}}}bAE`}{{{f{CGb}}{f{Dfc}}}bAE`}{{{f{CGd}}{f{Dfc}}}bAE`}{{{f{CGf}}{f{Dfc}}}bAE`}{{{f{CGh}}{f{Dfc}}}bAE`}{{{f{CGj}}{f{Dfc}}}bAE`}{{{f{CGl}}{f{Dfc}}}bAE`}{{{f{C@f}}{f{Dfc}}}bAE`}{{{f{CHf}}{f{Dfc}}}bAE`}{{{f{CHh}}{f{Dfc}}}bAE`}{{{f{BCb}}{f{Dfc}}}bAE`}{{{f{CHj}}{f{Dfc}}}bAE`}{{{f{CHn}}{f{Dfc}}}bAE`}{{{f{CI`}}{f{Dfc}}}bAE`}{{{f{CIb}}{f{Dfc}}}bAE`}{{{f{CId}}{f{Dfc}}}bAE`}{{{f{CIf}}{f{Dfc}}}bAE`}{{{f{CIh}}{f{Dfc}}}bAE`}{{{f{CIl}}{f{Dfc}}}bAE`}{{{f{CIn}}{f{Dfc}}}bAE`}{{{f{CBj}}{f{Dfc}}}bAE`}{{{f{CJ`}}{f{Dfc}}}bAE`}{{{f{CJb}}{f{Dfc}}}bAE`}{{{f{CJd}}{f{Dfc}}}bAE`}{{{f{CJf}}{f{Dfc}}}bAE`}{{{f{CJh}}{f{Dfc}}}bAE`}{{{f{CJl}}{f{Dfc}}}bAE`}{{{f{CJn}}{f{Dfc}}}bAE`}{{{f{CK`}}{f{Dfc}}}bAE`}{{{f{{N`{ce}}}}{f{Dfg}}}b{DFjA@h}BMhAE`}{{{f{CKb}}{f{Dfc}}}bAE`}{{{f{CKd}}{f{Dfc}}}bAE`}{{{f{BNf}}{f{Dfc}}}bAE`}{{{f{CKj}}{f{Dfc}}}bAE`}{{{f{CKl}}{f{Dfc}}}bAE`}{{{f{CKn}}{f{Dfc}}}bAE`}{{{f{CL`}}{f{Dfc}}}bAE`}{{{f{CLb}}{f{Dfc}}}bAE`}{{{f{CLd}}{f{Dfc}}}bAE`}{{{f{CLf}}{f{Dfc}}}bAE`}{{{f{BM`}}{f{Dfc}}}bAE`}{{{f{BGn}}{f{Dfc}}}bAE`}{{{f{CLh}}{f{Dfc}}}bAE`}{{{f{CLj}}{f{Dfc}}}bAE`}{{{f{BBb}}{f{Dfc}}}bAE`}{{{f{CLl}}{f{Dfc}}}bAE`}{{{f{A@`}}{f{Dfc}}}bAE`}{{{f{CMd}}{f{Dfc}}}bAE`}{{{f{DFl}}{f{Ab}}CF`d}{{A`{{Hj{{Hj{{Gn{Fb}}{Gn{Fb}}}}d}}n}}}}{{{f{DFl}}{f{Ab}}CF`d}{{A`{{Hj{{AMd{Fb}}{AMd{Fb}}}}n}}}}{{{f{DFl}}{f{Ab}}dd}{{A`{{Gn{Fb}}n}}}}{{BMd{Ch{Gh}}}BGd}{{BNlBCb}BCb}{{BCb{Ch{Gh}}}BCb}{{{f{{N`{CNf}}}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}{{{f{C@n}}}{{A`{{l{Bj}}n}}}}{{{f{C@n}}}{{l{Bj}}}}``{{{f{{Bd{{f{{l{Bj}}}}}}}}{f{Bl}}d}{{A`{{l{Bj}}n}}}}{{{f{DFn}}}{{l{Nh}}}}{{{f{COn}}}{{l{Nh}}}}{{{f{CDd}}}{{A`{{l{Nh}}n}}}}`{{{f{D@`}}}{{l{Lb}}}}`{{BMjCEn}BMj}`{{{f{ABb}}}Fb}`{{{f{{Bd{Fj}}}}Ld}{{A`{Fjn}}}}{{{f{{L`{LfLb}}}}{f{{l{Bj}}}}CMd{Gj{Hf}{{Ad{AMl}}}}{Gj{AMl}{{Ad{Hf}}}}{f{AMn}}{f{AMn}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{Gj{Hf}{{Ad{AMl}}}}{Gj{AMl}{{Ad{Hf}}}}{f{AMn}}{f{AMn}}}{{A`{{l{Lb}}n}}}}{BCbBCb}{{{f{AMl}}}d}{{{CAb{c}}d}{{CAb{c}}}CAf}````0`{{}b}{cb{JhBMh}}``{cBCb{{Ih{{Bd{Hf}}}}}}``{{{f{{Bd{Fb}}}}}{{`{{D`{}{{Cj{Gh}}}}}}}}{{{f{DFf}}Bb{Ch{Gh}}d{Ch{{f{{BEd{En}}}}}}GhGh{Ch{{f{CGh}}}}{Ch{Bb}}Bb{Ch{{f{CGj}}}}dd{f{Df{Ch{Gh}}}}d}{{A`{{Hj{{BEd{En}}GhGh}}n}}}}{{{DCb{c}}{Ch{{DG`{Gh}}}}}{{DCb{c}}}BLl}{{{CNn{c}}{Ch{{DG`{Gh}}}}}{{CNn{c}}}BLl}``{{}Gh}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACf}}}{{Cn{Cl}}}}{{BGdBGdcc}BGd{{BAl{BCb}}}}{{{f{DEj}}{f{AB`}}ei}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}{{BAl{Dd}}}{{Id{}{{Cj{g}}}}}}{{{f{DfA@j}}}{{f{DfKf}}}}`{{{f{DfBMf}}BMf}b}{{BCbBCbHfEn}BCb}{{BCbBCbBCb}BCb}`{{{f{Ab}}CFj}Ab}{{BCbCFj}BCb}`{{{f{Fj}}{f{Fj}}d}{{A`{Fjn}}}}{{BCbBCb}BCb}{{BMfBMf}BMf}{{{f{BMf}}BMf}d}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BEhFj}{{}Fj}{{MjDd}Fj}{BH`{{Hj{{Gn{BBb}}Gh{Gn{{Cn{Cl}}}}{Ch{Ij}}}}}}{{{AMj{c}}}c{}}{{{N`{ce}}}{{Ch{c}}}{}BMh}66{{{f{BCb}}}}{BMf}{{{f{BH`}}}}{{{f{CLn}}}}{DGbBNl}{BNlBNl}{{{N`{ce}}}{}A@hBMh}{{{N`{ce}}}{{Hj{e}}}A@hBMh}{{CGbc}{{BLh{c}}}BLl}{{BBnEn}{{A`{Mjn}}}}{BGfAb}{{{N`{BLb}}}Ab}{{MjDd}Ab}{BGl{{Gn{c}}}{}}{{}{{Gn{Dd}}}}{{{f{BMf}}}d}{{{f{CBj}}}d}{{{f{CEn}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CFl}{{A`{{l{An}}n}}}}{{BCbccCFl}BCb{{BAl{BCb}}}}{cd{{Ih{ANl}}}}4{{{f{BHb}}{Ch{{f{Bl}}}}}d}4{{{f{CIf}}}d}7{{{f{BLb}}}d}{{{f{CAn}}}d}{BCbBCb}{{{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{AJj}}}{{A`{{l{An}}n}}}}25{{{f{BHb}}}d};{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}{{BCbc}BCb{{BAl{BCb}}}}54{{{f{AJl}}}{{A`{{l{An}}n}}}}6{{{f{COl}}}{{l{An}}}}{{{f{COn}}}{{l{An}}}}{{{f{CDd}}}{{A`{{l{An}}n}}}}9{{{f{Mj}}}d}::{{{f{BLb}}}{{l{An}}}};;0{{{f{A@j}}}d}<2{{{f{ABb}}}d}`{{{f{Ab}}}d}{{{f{Fj}}}d}{{{f{{N`{AFn}}}}}d}{{{f{CLh}}}d}{{}d}{{{f{DAj}}Fd}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CF`}}{f{CEn}}}{{A`{bn}}}}6{{{f{BHb}}}d}{{{f{COl}}}{{l{Kl}}}}{{{f{COn}}}{{l{Kl}}}}{{{f{CDd}}}{{A`{{l{Kl}}n}}}}{{CAnGh}DGd}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{AH`{cgAGn}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{BMf}}}{{AFj{BMf}}}}{{{f{BH`}}}{{AH`{{Gn{{Cn{DAn}}}}DGfAGn}}}}{{{f{DDj}}}{{`{Jf}}}}{{{f{BMf}}}{{AFl{BMf}}}}{{{f{{DGj{}{{DGh{c}}}}}}}{{`{Jf}}}{AGlJhD@hDAl}}{{BNjBCbd}BCb}{{BGdBGdccBKn}BGd{{Ih{{Bd{BCb}}}}}}{{BNlBCbd}BCb}{{{f{DEj}}{f{AB`}}eiBKn}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}{{BAl{Dd}}}{{Id{}{{Cj{g}}}}}}{{{f{DGl}}{f{AB`}}{f{Bl}}{f{Bl}}eeCFd{Ch{Jl}}}{{A`{AB`n}}}{{Ih{Bl}}}{{Id{}{{Cj{c}}}}}}{BGdBMj}{{{f{DGn}}{f{Bl}}d}{{A`{{l{Bj}}n}}}}{{{f{DGn}}{f{{l{Bj}}}}d}{{A`{{l{Bj}}n}}}}{{BMjd}BMj}`{{BMj{Gn{BCb}}}BGd}{BL`BCb}{DH`BCb}{{{f{CJj}}}{{f{{Ch{{Gn{DHb}}}}}}}}``{{}BCb}{BGdBGd}{BNlBCb}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{BCbBCb}{{{f{BLb}}}Mj}{DHdBGd}5{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DEnA@h}BMh}{{{f{Ab}}}{{A`{Abn}}}}0`{{BGdBGdcc}BGd{{BAl{BCb}}}}{{{f{DEj}}{f{AB`}}ei}{{A`{AB`n}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}{{BAl{Dd}}}{{Id{}{{Cj{g}}}}}}{{BMjc}BMj{{Ih{{Bd{BCb}}}}}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}>{{{f{BLb}}}Gh}=;{{{f{BH`}}}Gh}{{BGdFb}BGd}{{{f{BLb}}Gh}Ab}```{BCbBNl}{{{f{{N`{CNf}}}}{Ch{{f{CNh}}}}}{{CNl{{Cn{D@j}}}}}}{{{f{{N`{CNf}}}}{Ch{{f{CNh}}}}}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{Ch{{f{CNh}}}}{f{CNh}}}{{CNl{{Cn{D@j}}}}}}{cBCbDHf}{DHfBCb}{BHbBCb}{DHhBCb}{CLhBCb}{MjBCb}{{{f{{N`{e}}}}DHj}{{A`{{DHl{c}}DHn}}}DI`{{DIb{c}}A@h}}{{{f{{N`{c}}}}CBlDHj}{{A`{DIdDHn}}}{DIfA@h}}{{{f{{N`{e}}}}DHj}{{A`{{DHl{c}}DHn}}}CBn{{CC`{c}}A@h}}{{{f{{N`{c}}}}CBlDHj}{{A`{{DHl{DIh}}DHn}}}{DIjA@h}}{{{f{{N`{e}}}}CBlDHj}{{A`{{DHl{c}}DHn}}}CBn{{DIl{c}}A@h}}{{BCbc}BCb{{BAl{BCb}}}}0``{{CDld}CDl}{{{CNn{c}}d}{{CNn{c}}}BLl}```{BCbBCb}{{{f{DGn}}}{{l{Ff}}}}0{{{f{DGn}}{f{{Bd{Fj}}}}}{{A`{{l{Ah}}n}}}}{{{f{DGn}}HfDAb}{{A`{{l{Ah}}n}}}}{{{f{DGn}}Hfd}{{A`{Abn}}}}{{{f{DGn}}{f{{l{Bj}}}}d}{{A`{{l{Bj}}n}}}}4{{{f{DGn}}}{{A`{Abn}}}}{{{f{DGn}}}Ab}01{{{f{DGn}}}{{A`{{l{Ff}}n}}}}{{{f{DGn}}}{{l{Ah}}}}{{{f{DGn}}{f{Fj}}}{{A`{{l{Ah}}n}}}}{{{f{DGn}}HfGh}{{l{Ah}}}}{{{f{DGn}}Fd}{{A`{{l{Ah}}n}}}}{{{f{DGn}}Bb}Ab}7{{{f{DGn}}}{{A`{{l{Ah}}n}}}}01{{{f{{AJh{}{{Cj{c}}}}}}e}c{}{}}{{BCbc}BCb{{BAl{BCb}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DEnA@h}BMh}21``````{{{f{ANb}}{f{ANb}}}{{A`{{Hj{ANbANb}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}{DInA@h}{BMhJh}}{{BGdcBMf{Ch{{N`{DCd}}}}{Ch{{f{Bl}}}}}BGd{{E`{AB`}{{Ad{{A`{AB`n}}}}}}J`Jb}}{{DH`c}BCb{{E`{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}J`Jb}}{{BCbc{BNb{{N`{BN`}}}}}BCb{{E`{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{BCbBCbc{BNb{{N`{BN`}}}}}BCb{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{BCb{f{Dfc}}{f{Df}}}{{A`{BCbn}}}{{Af{BCb{f{Df}}}{{Ad{{A`{BCbn}}}}}}}}{{{f{BNn}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BNn}}c}{{A`{Ojn}}}{{ABd{{f{En}}}{{Ad{En}}}}}}{c{{BNb{{N`{BN`}}}}}{{E`{{f{En}}}{{Ad{{A`{Enn}}}}}}J`Jb}}{c{{BNb{{N`{BN`}}}}}{{E`{{f{{Bd{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}J`Jb}}{{BCbc}BCb{{Af{BCb}{{Ad{BCb}}}}}}{c{{BNb{{N`{BN`}}}}}{{E`{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}J`Jb}}{{DH`{N`{E`}}}BCb}{c{{BNb{{N`{BN`}}}}}{{E`{{f{{Bd{Oj}}}}}{{Ad{{A`{Ojn}}}}}}J`Jb}}:{{ce{BNb{{N`{BN`}}}}}BCb{{E`{{f{Df{Bd{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{Ih{{Bd{BCb}}}}}}{{BCbc{f{{Bd{BCb}}}}{BNb{{N`{BN`}}}}}BCb{{E`{{f{Df{Bd{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{BCbBNf{f{{Bd{BCb}}}}d{Ch{DJ`}}}BCb}2{{{f{BNn}}}{{A`{Ojn}}}}{{CGbc}CGb{{E`{CGd}{{Ad{CGd}}}}}}1111{{{CIj{{BNb{{N`{BOd}}}}}}}{{A`{{BNb{{N`{BOd}}}}n}}}}{CLhCLh}{{{Ch{{f{{Bd{Gh}}}}}}{f{{BEd{BBb}}}}{Ch{{f{{Bd{Ab}}}}}}{Ch{{f{DJb}}}}}AB`}{{{Ch{{f{{Bd{Dd}}}}}}{f{{BEd{En}}}}{Ch{{f{{Bd{Ab}}}}}}d}{{Ch{{Gn{Gh}}}}}}{{{f{DDj}}}{{A`{{BEd{En}}n}}}}{{{f{Bl}}}BCb}{BNjBCb}{BGdBGd}{BNlBCb}{{{f{AHh}}}{{Ch{c}}}{}}{BCbBCb}{{{f{{N`{c}}}}}{{Ch{DJd}}}{CMhA@h}}{{{f{DJf}}}Mj}{{{f{BLb}}}{{A`{Mjn}}}}```865{{{f{AHh}}}{{Ch{Aj}}}}4{{{f{BLb}}}{{Ch{Aj}}}}:987{{{f{AJn}}}{{Ch{c}}}{}}61{{{f{DJh}}}Mj}4{{{DBl{c}}{Ch{DBf}}}{{DBl{c}}}BLl}{{{f{En}}{f{En}}}{{A`{Enn}}}}{{{f{CO`}}}{{A`{CObn}}}}````{{{f{D@`}}}{{l{Lb}}}}`{{{f{CDd}}}{{A`{{l{Kl}}n}}}}1`{{{f{Bl}}}BCb}{BNjBCb}{BGdBGd}{BNlBCb}{{{f{AHh}}}{{Ch{c}}}{}}{BCbBCb}{{{f{AHh}}}{{Ch{{Hj{cc}}}}}{}}```{{{f{DJf}}}Mj}{{{f{BLb}}}{{A`{Mjn}}}}``{{{f{DFn}}}{{l{Nh}}}}{{{f{COn}}}{{l{Nh}}}}{{{f{CDd}}}{{A`{{l{Nh}}n}}}}`=```6{{{f{COl}}}{{l{Nh}}}}21`{{{f{BHb}}}Hf}{{{f{BHb}}}d}{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{BHbHf}BHb}{{BCbBCb}}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BLb}}}Gh}{{{f{CMj}}}{{Ch{Gh}}}}{{{f{CDh}}}{{Ch{Gh}}}}{{{f{CDl}}}{{Ch{Gh}}}}`````{{{CAb{c}}Gh}{{CAb{c}}}CAf}`{BNjBCb}{BNlBCb}{{{f{AId}}}{{A`{Ghn}}}}{BCbBCb}{{{f{BLb}}}{{A`{Ghn}}}}{{{f{BLb}}}{{f{Dd}}}}{BCbDH`}````33`{{{f{DFn}}}{{l{Kl}}}}{{{f{COn}}}{{l{Kl}}}}{{{f{CDd}}}{{A`{{l{Kl}}n}}}}{{{f{D@`}}}{{l{Lb}}}}{{{f{BHb}}}Hf}`{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAlA@h}BMh}{{{f{CF`}}}d}{BHb}{BCb}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BHb}}}d}{{DJjGh}{{Ch{Gh}}}}{{BCbc}BCb{{BAl{BCb}}}}0{{{f{BNn}}}{{A`{Ojn}}}}{{}c{}}{cDBhBOb}{cDBjCAf}2{{Ddc}DJl{}}{c{{AMj{c}}}{}}{BGdBMj}{cCDh{{Ih{ANl}}}}{cCDl{{Ih{ANl}}}}{c{{BLh{c}}}BLl}{{{f{{Bd{Oj}}}}}BNn}{c{{CAb{c}}}CAf}{HfBHb}{c{{DBl{c}}}BLl}{{BHbBHbBHb}CEj}{c{{BO`{c}}}BOb}{c{{DBn{c}}}CAf}{{}D@b}{c{{CAh{c}}}CAf}{c{{DC`{c}}}CAf}{c{{DCb{c}}}BLl}{c{{CNn{c}}}BLl}{{DJn{N`{CJj}}{N`{{BEd{BBb}}}}{Hj{GhGh}}{Ch{{Gn{Gh}}}}{Ch{{N`{BLj}}}}{Ch{DJb}}Ghd{Ch{{Gn{Ab}}}}{Ch{{Hj{Dd{N`{Bl}}}}}}CIh}{{A`{CAnn}}}}{c{{CAl{c}}}BLl}{CEnBKn}{c{{CBb{c}}}{CAfCAf}}{c{{BNb{c}}}{}}{c{{N`{c}}}{}}{{BCbBCbBCb}CKf}{{}CKh}{BCbBM`}{{Dd{Gn{Oj}}{BNb{{N`{BN`}}}}c}CChBOd}{{AGhGh{Gn{{Cn{Cl}}}}{Ch{Ij}}}BH`}{{DdAGhd}BBb}{{EnJl}Mj}{e{{N`{c}}}{}{{ABd{{f{{DAd{c}}}}}{{Ad{c}}}}}}{{ge}{{N`{ce}}}{}BMh{{ABd{{f{{DAd{ce}}}}}{{Ad{c}}}}}}{AGhBH`}{{{f{AK`}}GhGh}{{l{c}}}Dn}{{{f{BLb}}GhGh}Ab}{{{f{Bl}}}CGh}{{ce}{{N`{ce}}}{}BMh}{{HfDd}{{A`{Abn}}}}{DdCGh}{{AGhGh}BH`}{{{N`{{Bd{DBf}}}}}CDh}{{{N`{{Bd{DBf}}}}}CDl}{BbCGh}{{{f{{N`{c}}}}{f{DK`}}}CMf{CMhA@h}}{{}{{N`{{C@l{c}}}}}{}}{c{{N`{{C@l{e}}c}}}BMh{}}{Gh{{N`{{Bd{{C@l{c}}}}}}}{}}{{Ghc}{{N`{{Bd{{C@l{e}}}}c}}}BMh{}}{DKbCDh}{DKbCDl}5432{{{f{DfDKd}}}Ch}{{{f{DfDFd}}}Ch}{{{f{BMl}}DKf}{{A`{{Ch{AB`}}n}}}}{{{f{DfCBf}}Gh}{{A`{{Ch{{Gn{AB`}}}}n}}}}{{{f{DfCA`}}Gh}{{A`{{Ch{{Gn{AB`}}}}n}}}}{{{f{DfCAn}}Gh}{{A`{{Ch{{Gn{AB`}}}}n}}}}{{{f{BCb}}{f{Df{BHn{{f{BCb}}}}}}}b}{{BCb{f{Df{BHn{BCb}}}}}b}{BCbBCb}0{BMfBMf}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0{HfBCb}`{{}ABb}{{}A@j}`{{{f{BLb}}}Gh}{BGdBGd}7`````{{{f{Df{CAl{c}}}}}{{A`{Ghn}}}BLl}{{{f{DfCB`}}}{{A`{Ghn}}}}````{{{f{AIl}}}{{A`{{Hh{Hf}}n}}}}{{BMjc}BMj{{Ih{{Bd{BCb}}}}}}````{{BGd{f{Df{BKh{BKf}}}}{f{Df{BKh{BKj}}}}}{{A`{BKdn}}}}`{{BCbc}BCb{{BAl{BCb}}}}{{{f{BLb}}}{{A`{Mjn}}}}{{{f{COl}}}{{l{Nl}}}}{{{f{COn}}}{{l{Nl}}}}{{{f{CDd}}}{{A`{{l{Nl}}n}}}}{{{f{CDd}}}{{A`{{l{Kl}}n}}}}{{CH`c}BCb{{BAl{BCb}}}}{{CHdc}BCb{{BAl{BCb}}}}`{{BCbe}BCb{{BAl{BCb}}Jh}{{Ih{{Bd{c}}}}}}{{BCbe{Ch{{Hj{eFd}}}}CLb}BCb{{BAl{BCb}}Jh}{{Ih{{Bd{c}}}}}}{{{f{Df{BEd{En}}}}{f{{BEd{En}}}}}{{A`{bn}}}}```{{{f{Bl}}}BHb}{{Dd{f{{Bd{{f{Bl}}}}}}{f{Bl}}}{{L`{KnKl}}}}{{Dd{f{{Bd{{f{Bl}}}}}}{f{Bl}}}{{L`{LnLb}}}}{{Dd{f{{Bd{{f{Bl}}}}}}{f{Bl}}Ld}{{L`{LfLb}}}}``{{{f{BHb}}{f{BHb}}}{{Ch{BAb}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}{{Ch{BAb}}}{DEnA@h}BMh}```{{}BCb}{c{{CNl{{N`{c}}}}}{}}{{ce}{{CNl{{N`{ce}}}}}{}BMh}````{{BCbc}BCb{{BAl{BCb}}}}`{{DH`{f{Bl}}}BCb}0{CLn{{A`{{Gn{Bb}}n}}}}{{{f{AB`}}{f{AB`}}d}{{A`{{Hj{{AAl{{Gn{Fb}}{Gn{A@j}}}}{AAl{{Gn{ABb}}{Gn{A@j}}}}}}n}}}}`{{{f{DJf}}}Mj}{BCbBCb}{BGd{{A`{{Hj{AB`AB`}}n}}}}`{{{f{BH`}}}BH`}{{{f{{N`{c}}}}{f{DfDKh}}}b{AM`A@h}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}dA@hBMh}{{{f{{N`{CNf}}}}{f{CNh}}DKj}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}DKl}{{CNl{{Cn{CNj}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}DKjDKn}{{CNl{{Cn{CNj}}}}}}{{{f{Bl}}BCbA@`}BCb}{{BGdBCbA@`}BGd}{{{f{AJn}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BCbBCbA@`}BCb}{{{f{DJh}}AjA@`}{{A`{Mjn}}}}{{{f{BLb}}AjA@`}{{A`{Mjn}}}}{{{f{COl}}}{{l{Nh}}}}{{{f{COn}}}{{l{Nh}}}}{{{f{CDd}}}{{A`{{l{Nh}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDl}}}DBd{}}````{{{f{DL`}}CG`{Ch{Kf}}}Ab}{{BCbCG`{Ch{Kf}}}BCb}{{{f{Df{N`{AFn}}}}{f{Df{Bd{Bb}}}}}{{A`{GhBDl}}}}{{{f{Df{N`{AFn}}}}DLb}{{A`{bBDl}}}}{{{f{Df}}{f{Df{Bd{Bb}}}}}{{A`{b}}}}{{{CAl{c}}CIh}{{CAl{c}}}BLl}{{CB`CIh}CB`}{{{f{Df{N`{AFn}}}}{f{Df{Gn{Bb}}}}}{{A`{GhBDl}}}}{{{f{Df{N`{AFn}}}}{f{DfEl}}}{{A`{GhBDl}}}}{{{f{Df}}}{{A`{cBDl}}}DLd}{{{f{Df{N`{AFn}}}}{f{Df{Bd{DLf}}}}}{{A`{GhBDl}}}}{{{f{CMj}}}d}{{{f{BLb}}}Ab}{{{f{CDh}}}d}{{{f{CDl}}}d}````{{{f{BLb}}}{{Ch{Ij}}}}{{{f{{N`{c}}}}{f{CMf}}{f{DLh}}}b{CMhA@h}}{{{f{{N`{c}}}}{f{CMf}}{f{CMf}}}b{CMhA@h}}{{ce}BCb{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{Ih{{Bd{BCb}}}}}}{{{f{{N`{c}}}}{f{DAh}}}DLj{CMhA@h}}{{{f{AKb}}}Ab}0{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCbBCb}}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBMf}}BMf}b}{{{f{{Bd{Bb}}}}}{{A`{{f{{Bd{Bb}}}}n}}}}{{{f{DfBLb}}Dd}b}{{BGdeid}BGd{{Ih{Bl}}}{{Id{}{{Cj{c}}}}}{{Ih{Bl}}}{{Id{}{{Cj{g}}}}}}{{{f{{N`{CNf}}}}{f{CNh}}{f{CNh}}}{{CNl{{Cn{CNj}}}}}}{{BL`e}BCb{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}}1{{cBCb}BCb{{BAl{BCb}}}}{{{f{Ab}}{f{{l{Ff}}}}}{{A`{{l{Ah}}n}}}}{{BCbc}BCb{{BAl{BCb}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@n}}{f{Bl}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{BCbcc}BCb{{BAl{BCb}}}}1{{{f{BNn}}{Ch{En}}}{{A`{Ojn}}}}{{{f{C@n}}{f{Bl}}{f{Bl}}Gh}{{A`{{l{Bj}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{BCbcc{Ch{c}}{Ch{En}}}BCb{{BAl{BCb}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{f{{l{Bj}}}}CMd}{{A`{{L`{LfLb}}n}}}}{{BCb{f{{Bd{Hf}}}}}BCb}{{{f{ANl}}}DBf}`{{{f{AKd}}}AKd}{{{f{BLb}}}Ab}{BNjBCb}{BGdBGd}{BNlBCb}{BCbBCb}`{{BMjc}BMj{{Ih{{Bd{BCb}}}}}}{{{f{DFh}}{Gn{Fj}}{f{BGh}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}{{BGdBCbcBGh}BMd{{Ih{{Bd{BCb}}}}}}{{BCbBGh}BCb}{{{f{AKf}}{f{E`}}A@b}{{A`{Abn}}}}{{BCb{N`{E`}}{BNb{{N`{BN`}}}}A@b}BCb}{{{f{BLb}}{f{E`}}A@b}{{A`{Abn}}}}{{BCbGhc}BCb{{Af{{f{Df{l{Ej}}}}}{{Ad{{Ch{Aj}}}}}}J`JbEb}}{{{f{DLl}}A@b}{{A`{Abn}}}}{{BCbA@b}BCb}{{{f{DLl}}{f{Ab}}CE`}{{A`{Abn}}}}{{BCbBCbCE`}BCb}32102032103{{BCbA@`AjA@b}BCb}2{{BCbBCbA@`AjCE`}BCb}543254325432{{{f{DLn}}{f{{l{Bj}}}}{Ch{{f{AMn}}}}}{{A`{DLnn}}}}{{{f{CDb}}Fb}{{A`{Abn}}}}{{BCbFb}BCb}{{{f{CEj}}Hf{Ch{{f{AMn}}}}}{{A`{Hfn}}}}0{{{f{CDb}}O`}{{A`{Abn}}}}{{BCbO`}BCb}2```{{{f{CMj}}}{{Ch{{f{DJb}}}}}}{{{f{CDh}}}{{Ch{{f{DJb}}}}}}{{{f{CDl}}}{{Ch{{f{DJb}}}}}}``````{{{f{DGn}}{l{Ah}}}{{l{Ah}}}}{{}{{BNb{{N`{BN`}}}}}}{{BCbBCbdd{Ch{Kf}}}BCb}0{{{f{BMl}}DKf}{{A`{AB`n}}}}{{cCDj}{{A`{BGdn}}}{{Ih{ANl}}}}{{{N`{{Bd{DBf}}}}CDj}{{A`{BGdn}}}}{{DKbCDj}{{A`{BGdn}}}}{{cCDn}{{A`{BGdn}}}{{Ih{ANl}}}}{{{N`{{Bd{DBf}}}}CDn}{{A`{BGdn}}}}{{DKbCDn}{{A`{BGdn}}}}{{DM`{f{{Bd{Fb}}}}e}{{A`{Abn}}}Eb{{Id{}{{Cj{{Ch{c}}}}}}}}{{{f{AKh}}c{Ch{e}}}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}}{{{f{AKh}}ci}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{DBl{c}}}}}{{A`{{N`{{BEd{BBb}}}}n}}}BLl}{{{f{Df{BO`{c}}}}}{{A`{{BEd{En}}n}}}BOb}{{{f{BMl}}{Ch{Gh}}}{{A`{{N`{{BEd{En}}}}n}}}}{{{f{CAn}}}{{f{{N`{{BEd{BBb}}}}}}}}{{{f{Df{CAl{c}}}}}{{A`{{N`{{BEd{BBb}}}}n}}}BLl}{{{f{DfCB`}}}{{A`{{N`{{BEd{BBb}}}}n}}}}{{{f{CJj}}}{{f{DMb}}}}```````{{}BMf}`{{{f{DfBGd}}{f{Df{BKh{BKf}}}}{f{Df{BKh{BKj}}}}}{{A`{{N`{{BEd{En}}}}n}}}}`{{{f{DFn}}}{{l{Nh}}}}{{{f{COn}}}{{l{Nh}}}}{{{f{CDd}}}{{A`{{l{Nh}}n}}}}`{{{f{D@`}}}{{l{Lb}}}}`{{{f{Df{N`{AFn}}}}DMd}{{A`{KfBDl}}}}{{BGdc}BGd{{Ih{{Bd{BCb}}}}}}0{{BGdBGdcc}BGd{{BAl{BCb}}}}``{{{f{CE`}}c}A`A@f}{{{f{BFd}}c}A`A@f}{{{f{BGh}}c}A`A@f}{{{f{BHb}}c}A`A@f}{{{f{CEd}}c}A`A@f}{{{f{CEf}}c}A`A@f}{{{f{CEh}}c}A`A@f}{{{f{BKn}}c}A`A@f}{{{f{CEl}}c}A`A@f}{{{f{CEn}}c}A`A@f}{{{f{CF`}}c}A`A@f}{{{f{CFb}}c}A`A@f}{{{f{CFd}}c}A`A@f}{{{f{CFf}}c}A`A@f}{{{f{CFh}}c}A`A@f}{{{f{CFj}}c}A`A@f}{{{f{CFl}}c}A`A@f}{{{f{CFn}}c}A`A@f}{{{f{CG`}}c}A`A@f}{{{f{CGb}}c}A`A@f}{{{f{CGd}}c}A`A@f}{{{f{CGf}}c}A`A@f}{{{f{CGh}}c}A`A@f}{{{f{CGj}}c}A`A@f}{{{f{CGl}}c}A`A@f}{{{f{C@f}}c}A`A@f}{{{f{CHf}}c}A`A@f}{{{f{CHh}}c}A`A@f}{{{f{BCb}}c}A`A@f}{{{f{CHj}}c}A`A@f}{{{f{CHn}}c}A`A@f}{{{f{CI`}}c}A`A@f}{{{f{CIb}}c}A`A@f}{{{f{CId}}c}A`A@f}{{{f{CIf}}c}A`A@f}{{{f{CIh}}c}A`A@f}{{{f{{CIj{c}}}}e}A`{DMfJh}A@f}{{{f{CIl}}c}A`A@f}{{{f{CIn}}c}A`A@f}{{{f{CBj}}c}A`A@f}{{{f{CJ`}}c}A`A@f}{{{f{CJb}}c}A`A@f}{{{f{{BNb{Ab}}}}c}A`A@f}{{{f{{BNb{{N`{CLn}}}}}}c}A`A@f}{{{f{{BNb{{N`{CCb}}}}}}c}A`A@f}{{{f{{BNb{{N`{BOd}}}}}}c}A`A@f}{{{f{{BNb{{N`{BN`}}}}}}c}A`A@f}{{{f{CJd}}c}A`A@f}{{{f{CJf}}c}A`A@f}{{{f{CJh}}c}A`A@f}{{{f{CJl}}c}A`A@f}{{{f{CJn}}c}A`A@f}{{{f{CK`}}c}A`A@f}{{{f{{N`{c}}}}e}A`{DMfA@h}A@f}{{{f{CKb}}c}A`A@f}{{{f{CKd}}c}A`A@f}{{{f{BNf}}c}A`A@f}{{{f{CKj}}c}A`A@f}{{{f{CKl}}c}A`A@f}{{{f{CKn}}c}A`A@f}{{{f{CL`}}c}A`A@f}{{{f{CLb}}c}A`A@f}{{{f{CLd}}c}A`A@f}{{{f{CLf}}c}A`A@f}{{{f{BM`}}c}A`A@f}{{{f{A@b}}c}A`A@f}{{{f{BGn}}c}A`A@f}{{{f{CLh}}c}A`A@f}{{{f{CLj}}c}A`A@f}{{{f{BBb}}c}A`A@f}{{{f{Mj}}c}A`A@f}{{{f{CLl}}c}A`A@f}{{{f{CLn}}c}A`A@f}{{{f{A@`}}c}A`A@f}{{{f{BJd}}c}A`A@f}{{{f{CM`}}c}A`A@f}{{{f{CMb}}c}A`A@f}{{{f{CMd}}c}A`A@f}``{{{f{AKh}}{f{{l{An}}}}{Ch{c}}}{{A`{AKhn}}}{}}{{{f{DfBMf}}BMfd}b}{{{f{BGd}}{BKh{BKf}}{BKh{BKj}}}b}{{{CAl{c}}d}{{CAl{c}}}BLl}{{{f{Df{CAl{c}}}}{N`{CJj}}}bBLl}{{{CBb{c}}d}{{CBb{c}}}CAf}{{{DBl{c}}d}{{DBl{c}}}BLl}{{{BO`{c}}d}{{BO`{c}}}BOb}{{{DCb{c}}d}{{DCb{c}}}BLl}5{{CB`d}CB`}{{DBhd}DBh}{{BCbMb}BCb}{{{f{DfBH`}}{Ch{Ij}}}b}{{{f{AKj}}Hf}{{l{c}}}Dn}{{{f{BLb}}Hf}Ab}{{BNjBCb}BCb}{{BGdc}BGd{{BAl{BCb}}}}{{BNlBCb}BCb}{{BCbBCb}BCb}{{{f{AKl}}Hfc}{{l{e}}}{}Dn}{{BGdce}BGd{{BAl{BCb}}}{{BAl{BCb}}}}{{BCbce}BCb{{BAl{BCb}}}{{BAl{BCb}}}}{{{f{BKn}}}d}{BCbBCb}{{{f{DfACh}}}b}{{{f{DfBLb}}}b}{{BCb{Ch{Kf}}}BCb}{{BGdcCGl}{{A`{bn}}}{{Ih{ANl}}}}{{BGdcCHn}{{A`{bn}}}{{Ih{ANl}}}}{{BGdEl{Ch{CMl}}CHn}{{A`{bn}}}}{{BGdcCIb}{{A`{bn}}}{{Ih{ANl}}}}{{BGdcCIl}{{A`{bn}}}{{Ih{ANl}}}}{{BGdEl{Ch{CMl}}CIl}{{A`{bn}}}}{{{f{CNd}}}{{l{Ff}}}}````{{{f{BLb}}HfGh}Ab}{{BGdHfFb}BGd}{{BNlBCbBCb}BCb}?{{{f{DfBH`}}GhGh}b}0`{{{f{AKn}}GhGh}AKn}{{fGhGh}c{}}1022{{BH`GhGh}BH`}0`{{{f{AIb}}d}{{l{c}}}Dn}{{BNjFd}BCb}{{BGdcFl}BGd{{BGl{Dd}}}}{{BNlFd}BCb}{{BCbFd}BCb}{{BCbeFl}BCb{{BAl{BCb}}Jh}{{Ih{{Bd{c}}}}}}{{BGdcFl}BGd{{Ih{{Bd{BCb}}}}}}{{{f{AIb}}Fd}{{l{c}}}Dn}{{{f{BLb}}Fd}{{A`{Abn}}}}{{{f{{N`{c}}}}}{{Ch{{f{AM`}}}}}{AM`A@h}}{{{f{CMj}}}{{f{DKb}}}}{{{f{CDh}}}{{f{DKb}}}}{{{f{CDl}}}{{f{DKb}}}}{{{f{{N`{c}}}}{DMh{b}}}{{A`{bDMj}}}{DMlA@h}}{{{f{{N`{c}}}}{DMn{b}}}{{A`{bDMj}}}{DN`A@h}}{{{f{C@n}}{f{{l{Bj}}}}}{{l{Ah}}}}{{{f{BLb}}Hf}{{Hj{AbAb}}}}{{{f{BH`}}Gh}{{Hj{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{C@n}}{f{{l{Bj}}}}Gh}{{A`{{l{j}}n}}}}0{{{f{{l{Bj}}}}{f{{l{Bj}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{E`{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}4{{{f{{l{Bj}}}}{f{{l{Bj}}}}Ghed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{E`{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{BCbBCb}`{{{f{CNd}}{f{{Bd{Bb}}}}}{{l{An}}}}{{{f{CNd}}{f{{l{B`}}}}}{{l{An}}}}`{{{f{{N`{c}}}}}{{A`{bDMj}}}{DN`A@h}}{{{f{{N`{c}}}}}{{A`{bDMj}}}{DMlA@h}}{{BNjBb}BCb}{{BGdBb}BGd}{{BNlBb}BCb}{{{f{AL`}}Bb}{{Ch{Aj}}}}{{BCbBb}BCb}{{{f{BLb}}Bb}{{Ch{Aj}}}}{{{f{DNb}}Bb}Mj}{{{f{BLb}}Bb}{{A`{Mjn}}}}{{FbFb}A@j}{BCbDNd}{{{f{C@n}}}{{l{Bj}}}}{{{f{C@n}}{f{Fj}}}{{A`{{l{Bj}}n}}}}{{{f{{l{Bj}}}}{f{Bl}}d}{{l{Bj}}}}{{{f{C@n}}}{{l{Ff}}}}03{{{f{C@n}}{f{Fj}}{f{Fj}}}{{A`{{l{Bj}}n}}}}3`{{{f{CDd}}{f{Bl}}}{{A`{Abn}}}}`{{BCbEn}BCb}`{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Bj}}}}606060{{{f{C@n}}{f{{l{Bj}}}}}{{l{Bj}}}}10{{{f{{N`{ce}}}}}GhA@hBMh}{BCbBL`}{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCbBCb}}{{BM`BM`}}{{BMfBMf}BMf}{{{f{DfBMf}}BMf}b}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}{{BMjc}BMj{{BAl{Dd}}}}{{DH`{f{Bl}}}BCb}{{{f{BKn}}}{{f{Dd}}}}`1{{{f{Bl}}}BCb}{BNjBCb}{BGdBGd}{BNlBCb}{{{f{AHh}}}{{Ch{c}}}{}}{BCbBCb}{{{f{DJf}}}Mj}{{{f{BLb}}}{{A`{Mjn}}}}{{}{{BNb{{N`{BN`}}}}}}{CBjCBj}?{{{f{Df}}g}{{A`{eBDl}}}{}{}{{ABd{{f{Dfc}}}{{Ad{e}}}}}}{{BGdFb}BGd}{{BMd{Ch{Gh}}}BGd}{{BNlBCb}BCb}{{BCb{Ch{Gh}}}BCb}{{{f{ALb}}{f{c}}}{{A`{ALbn}}}A@h}{{{f{BLb}}{f{{l{Ff}}}}}{{A`{Abn}}}}{{{f{DNf}}{f{{Bd{A@j}}}}Mb}DNf}{{{f{DNf}}{f{{Bd{A@j}}}}}DNf}{{{f{BLb}}{f{{Bd{Fb}}}}}{{A`{Abn}}}}{{{f{BLb}}{f{{Bd{Fb}}}}}Ab}{{{f{ALd}}{f{c}}}ALdA@h}{{{f{BLb}}{f{{l{Ff}}}}}Ab}{{{f{DfBH`}}}{{Ch{Ij}}}}{{BCbBCbBCb}BCb}{{CGnc}CH`{{BAl{BCb}}}}{{CHbc}CHd{{BAl{BCb}}}}`{{BCbBCbBHbCEd}BCb}```{{{f{CDd}}Ld}{{A`{{l{Lb}}n}}}}{BGd{{A`{DNhn}}}}{CLn{{A`{DNhn}}}}1{{{f{CLh}}}{{Ch{Jl}}}}{{BNlGh}BCb}{{{f{DDj}}B@h}{{BEd{BBb}}}}{{{f{BH`}}}{{Cn{Cl}}}}{{{f{ALf}}}{{Gn{{f{{Bd{Bb}}}}}}}}{{{f{BGd}}d}{{A`{Eln}}}}{{{f{DNj}}{Ch{{f{Bl}}}}d}{{A`{AB`n}}}}{{{f{BLf}}{Ch{{f{Bl}}}}d}{{A`{AB`n}}}}{{{f{BCb}}{f{{BEd{En}}}}DF`}{{A`{Ojn}}}}{{{f{C@n}}{f{{l{Ff}}}}d}{{A`{{l{Lb}}n}}}}{BNjBCb}{{{f{C@n}}}{{l{Bj}}}}{DH`BCb}{{{f{ABb}}}{{Ch{Fb}}}}{fc{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BCbBCb}{{{f{BNn}}}{{A`{Ojn}}}}{{{f{CDd}}{f{Bl}}}{{A`{Abn}}}}{fEl}000000000000{{{f{DfDDj}}{f{{BEd{En}}}}}{{A`{dn}}}}`887{{{f{CHn}}c}{{CAh{c}}}CAf}{{{f{CIl}}c}{{CBb{c}}}CAf}{{{f{DfBMf}}BMf}b}``{{BGdFbcFl}BGd{{Ih{{Bd{BCb}}}}}}{{{f{BH`}}{f{BH`}}}Ij}{{{f{BH`}}f}Ij}10{{{f{Ab}}}{{A`{Abn}}}}0{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}g{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{f{DNl}}{Ch{{f{AMn}}}}{f{{l{Bj}}}}}{{A`{DNln}}}}{{{f{BHb}}Hf{Ch{{f{AMn}}}}ceg}{{A`{Hfn}}}{{E`{Hf}{{Ad{Hf}}}}}{{E`{Hf}{{Ad{AMl}}}}}{{E`{AMl}{{Ad{Hf}}}}}}{{{f{BHb}}Hf{Ch{{f{AMn}}}}}{{A`{Hfn}}}}{{{f{CEj}}Hf{Ch{{f{AMn}}}}}{{A`{Hfn}}}}10`10{g{{A`{ANfe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BH`c}}}{}{{Id{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{e{{A`{BH`c}}}{}{{Id{}{{Cj{{A`{bc}}}}}}}}2{{AGhg}{{A`{ANhe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGhe}{{A`{BH`c}}}{}{{Id{}{{Cj{{A`{bc}}}}}}}}{{AGhe}{{A`{BH`c}}}{}{{Id{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{{{f{{N`{c}}}}CMf}d{CMhA@h}}{BAd{{A`{eg}}}{}{{ANf{c}}ALl}{}}0{{BAdAGh}{{A`{eg}}}{}{{ANh{c}}ALl}{}}0{{AEbDd}{{A`{{l{c}}e}}}Dn{}}{{AEd{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AEdDdEn}{{A`{{l{c}}e}}}Dn{}}0{c{{A`{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{N`{{Bd{c}}e}}}{{A`{{N`{{AAd{c}}e}}}}}{}BMh}111111111111111111111111111111{DNn{{A`{CJjBDf}}}}{{{f{DDj}}{f{Bl}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CGb{Ch{DBf}}}{{A`{{BLh{AFn}}n}}}}{{{f{BNn}}c}{{A`{Ojn}}}{{ABd{{f{En}}}{{Ad{{A`{Enn}}}}}}}}{{{f{BNn}}c}{{A`{Ojn}}}{{ABd{{f{{Bd{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}}}{{BCbc}{{A`{BCbn}}}{{Af{BCb}{{Ad{{A`{BCbn}}}}}}}}{{{f{BNn}}c}{{A`{Ojn}}}{{ABd{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{{f{BNn}}}{{A`{Ojn}}}}{{DJjGh}{{A`{Ghn}}}}{Bb{{A`{CJbn}}}}{Fb{{A`{CJdn}}}}{O`{{A`{CJfn}}}}{c{{A`{{N`{c}}DO`}}}{}}{{AGhGh{Gn{{Cn{Cl}}}}{Ch{Ij}}}{{A`{BH`n}}}}{{ce}{{A`{{N`{ce}}DO`}}}{}BMh}{{}{{A`{{N`{{C@l{c}}}}DO`}}}{}}{c{{A`{{N`{{C@l{e}}c}}DO`}}}BMh{}}10{{{f{Bl}}}{{A`{BHbn}}}}`0{c{{A`{{CNl{{N`{c}}}}DO`}}}{}}{{ce}{{A`{{CNl{{N`{ce}}}}DO`}}}{}BMh}{{{f{BOd}}{f{Df{Gn{Bb}}}}}{{A`{bn}}}}{{{f{CCb}}{f{Df{Gn{Bb}}}}}{{A`{bn}}}}{{{f{BN`}}{f{Df{Gn{Bb}}}}}{{A`{bn}}}}{{{f{DfAb}}Gh{f{{CCn{GhMbA@n}}}}}b}{f{{A`{H`BCh}}}}000000000000{{{N`{ce}}}{{A`{c{N`{ce}}}}}{}BMh}{fAAn}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bl}}}}`{{BMfBMf}BMf}{{{f{AId}}}{{A`{AIdn}}}}{BNjBCb}{{BGd{Ch{{Gn{El}}}}BEl}BGd}{BNlBCb}{BCbBCb}{{{f{BLb}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}2{{BGd{Ch{e}}BEl}BGd{{BAl{BM`}}Jh}{{Ih{{Bd{c}}}}}}6{{BGd{Ch{{Gn{Dd}}}}BEl}BGd}541{{BGde}BGd{{BAl{BM`}}Jh}{{Ih{{Bd{c}}}}}}{{{N`{{AGd{c}}}}}{{A`{cb}}}J`}{{{N`{ce}}}cJhBMh}{{{f{DfMj}}Jl}b}{{{f{DfCGb}}{f{DOb}}}b}9{{{f{DOd}}c{f{Bl}}BHb}{{A`{AB`n}}}{{BGl{Dd}}}}0{{{CAl{c}}d}{{CAl{c}}}BLl}{{CB`d}CB`}```{{BMjCF`}BMj}`{{{f{BH`}}}{{Ch{{f{Ij}}}}}}0{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}cJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{Mj}}}{{f{Jl}}}}{{{f{DAj}}ddDdd}{{A`{AB`n}}}}{{BCbdd{f{Bl}}d}BCb}``3{{{f{BH`}}}{{f{{Bd{{Cn{Cl}}}}}}}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}gJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{BH`}}}DGf}{{BNjBb}BCb}{{BGdBb}BGd}{{BNlBb}BCb}{{{f{AL`}}Bb}{{Ch{Aj}}}}{{BCbBb}BCb}{{{f{BLb}}Bb}{{Ch{Aj}}}}{{{f{DNb}}Bb}Mj}{{{f{BLb}}Bb}{{A`{Mjn}}}}``{{{f{DOf}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{DOf}}A@n{f{Df{Bd{Kf}}}}}{{A`{bn}}}}`{{{f{{N`{{AGd{c}}}}}}g}{{A`{eb}}}J`{}{{ABd{{f{c}}}{{Ad{e}}}}}}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}GhA@hBMh}{{{f{COl}}}{{l{Nh}}}}{{{f{COn}}}{{l{Nh}}}}{{{f{CDd}}}{{A`{{l{Nh}}n}}}}10{{{f{CEh}}}{{Ch{Fb}}}}{{{f{BHb}}}Hf}`{{{f{BHb}}}d}`{cCGn{{BAl{BCb}}}}{{CH`c}CHb{{BAl{BCb}}}}{{CHdc}CHb{{BAl{BCb}}}}```{{BMjBGd}BMj}{{CKfBCb}CKf}{{{CAl{c}}{f{{N`{{BEd{BBb}}}}}}{Ch{{f{{BEd{BBb}}}}}}d}{{A`{{CAl{c}}n}}}BLl}{{CB`{f{{N`{{BEd{BBb}}}}}}{Ch{{f{{BEd{BBb}}}}}}d}{{A`{CB`n}}}}{{CDl{Ch{{DG`{Gh}}}}}CDl}{{{CAb{c}}{DG`{Gh}}}{{CAb{c}}}CAf}{{{DCb{c}}{DG`{Gh}}}{{DCb{c}}}BLl}{{CDhd}CDh}{Ghc{}}0{{{CNn{c}}{Ch{{DG`{Gh}}}}}{{CNn{c}}}BLl}{{CGbGh}CGb}{{CDh{Ch{CMl}}}CDh}{{CDl{Ch{CMl}}}CDl}{{BGdd}BGd}{{BKnCEl}BKn}1{{BGdBCb}BGd}{{BGdc}BGd{{Ih{{Bd{BCb}}}}}}{{{DBl{c}}{Ch{{Gn{El}}}}}{{DBl{c}}}BLl}{{{BO`{c}}{Ch{{Gn{El}}}}}{{BO`{c}}}BOb}{{{CAl{c}}{Ch{{Gn{El}}}}}{{CAl{c}}}BLl}{{CGb{Ch{{N`{{Bd{Dd}}}}}}}CGb}`4{{CDh{Ch{Dd}}}CDh}{{CGd{Ch{c}}}CGd{{BAl{CGh}}}}{{{DBn{c}}B@h}{{DBn{c}}}{}}{{{CAh{c}}B@h}{{CAh{c}}}CAf}{{{DBn{c}}{Ch{CI`}}}{{DBn{c}}}{}}{{D@b{Ch{CI`}}}D@b}{{{CAh{c}}{Ch{CI`}}}{{CAh{c}}}CAf}{{{CBb{c}}CJ`}{{CBb{c}}}CAf}{{BGdc}BGd{{Ih{{Bd{BGd}}}}}}{{{CBb{c}}{Ch{Gh}}}{{CBb{c}}}CAf}{{{CAb{c}}{Ch{El}}}{{CAb{c}}}CAf}0{{CKfBCb}CKf}{{CKhBCb}CKh}{{CDhd}CDh}{{CGdd}CGd}{{{f{BNn}}En}{{A`{Ojn}}}}{{CDh{Ch{{N`{{BEd{En}}}}}}}CDh}{{CGb{Ch{{N`{{Gn{En}}}}}}}CGb}{{CDhCGf}CDh}{{CGdCGf}CGd}{{CDhBb}CDh}{{CGdBb}CGd}{{D@bDBf}D@b}{{BL`{Gn{BCb}}}{{A`{BCbn}}}}{{{CAb{c}}{Ch{Gh}}}{{CAb{c}}}CAf}{{{CAb{c}}{Ch{d}}}{{CAb{c}}}CAf}{{CKhBCbBCbBCb}CKh}=={{CGbd}CGb}{{{DBl{c}}{Ch{{Gn{Ab}}}}}{{DBl{c}}}BLl}{{{CAl{c}}{Ch{{Gn{Ab}}}}}{{CAl{c}}}BLl}{{CB`{Ch{{Gn{Ab}}}}}CB`}{{CKfBCbBCbBCb}CKf}5{{CKfBCb}CKf}{{CKhBCb}CKh}{{CDhd}CDh}{{CDld}CDl}{{{DCb{c}}d}{{DCb{c}}}BLl}{{{CNn{c}}d}{{CNn{c}}}BLl}:{{{DBl{c}}{Ch{{Hj{Dd{N`{Bl}}}}}}}{{DBl{c}}}BLl}{{{CAl{c}}{Ch{{Hj{Dd{N`{Bl}}}}}}}{{CAl{c}}}BLl}{{CB`{Ch{{Hj{Dd{N`{Bl}}}}}}}CB`}{{CDh{Ch{Dd}}}CDh}{{CDl{Ch{Dd}}}CDl}{{CDh{Ch{Gh}}}CDh}{{CDl{Ch{{DG`{Gh}}}}}CDl}{{CGb{Ch{Gh}}}CGb}{{{DC`{c}}DOh}{{DC`{c}}}CAf}{{{DCb{c}}DOh}{{DCb{c}}}BLl}{{{CAb{c}}El}{{CAb{c}}}CAf}>{{CGbd}CGb}{{BBb{DOj{DdDd}}}BBb}{{CKfBCb}CKf}{{CKhBCb}CKh}010{{CDhd}CDh}{{CGdd}CGd}3{{CMjc}CMj{{BAl{{Ch{Gh}}}}}}<{{CDhc}CDh{{BAl{{Ch{Gh}}}}}}{{CDlc}CDl{{BAl{{Ch{Gh}}}}}}{{CDl{Ch{Gh}}}CDl}{{{DBl{c}}{Ch{Gh}}}{{DBl{c}}}BLl}{{{BO`{c}}{Ch{Gh}}}{{BO`{c}}}BOb}{{{CNn{c}}{Ch{Gh}}}{{CNn{c}}}BLl}{{CGb{Ch{Gh}}}CGb}10:>{{CDh{Ch{CGj}}}CDh}{{CGd{Ch{CGj}}}CGd}{{BGdBMf}BGd}{{{CAh{c}}d}{{CAh{c}}}CAf}{{CGbCGd}CGb}{{{CNn{c}}{Ch{e}}}{{CNn{c}}}BLl{{BAl{DBf}}}}{{CGb{Ch{c}}}CGb{{BAl{DBf}}}}{{CMj{N`{{Bd{DBf}}}}}CMj}{{{CNn{c}}{Ch{{N`{BLj}}}}}{{CNn{c}}}BLl}{{{CAl{c}}{Ch{{N`{BLj}}}}}{{CAl{c}}}BLl}{{CB`{Ch{{N`{BLj}}}}}CB`}{{CHlc}CHl{{BAl{{Ch{{N`{BLj}}}}}}}}{{BGdd}BGd}{{{DBl{c}}{Ch{{Gn{Gh}}}}}{{DBl{c}}}BLl}{{{BO`{c}}{Ch{{Gn{Gh}}}}}{{BO`{c}}}BOb}{{{DCb{c}}{Ch{{Gn{Dd}}}}}{{DCb{c}}}BLl}{{{CNn{c}}{Ch{{N`{{Bd{Dd}}}}}}}{{CNn{c}}}BLl}{{{CAl{c}}{Ch{{Gn{Gh}}}}}{{CAl{c}}}BLl}{{CB`{Ch{{Gn{Gh}}}}}CB`}{{CGb{Ch{{N`{{Gn{Gh}}}}}}}CGb}{{CHl{Ch{{N`{{Bd{Dd}}}}}}}CHl}8{{CDh{Ch{Bb}}}CDh}{{{CAb{c}}Bb}{{CAb{c}}}CAf}{{CGd{Ch{Bb}}}CGd}{{{CAb{c}}CHh}{{CAb{c}}}CAf}{{CDhd}CDh}{{CGbd}CGb}{{CMjd}CMj}2{{CDld}CDl}{{{CNn{c}}d}{{CNn{c}}}BLl}3{{BGdd}BGd}{{{CBb{c}}{Ch{Gh}}}{{CBb{c}}}CAf}{{CMjc}CMj{{BAl{{Ch{DJb}}}}}}{{BGdc{Ch{Fb}}}BGd{{BAl{Dd}}}}{{CDhc}CDh{{BAl{{Ch{DJb}}}}}}{{CDh{Ch{DJb}}}CDh}{{CDlc}CDl{{BAl{{Ch{DJb}}}}}}{{CDl{Ch{DJb}}}CDl}{{{DBl{c}}{Ch{DJb}}}{{DBl{c}}}BLl}{{{BO`{c}}{Ch{DJb}}}{{BO`{c}}}BOb}{{{CNn{c}}{Ch{{f{DfDJb}}}}}{{CNn{c}}}BLl}{{{CAl{c}}{Ch{DJb}}}{{CAl{c}}}BLl}{{CB`{Ch{DJb}}}CB`}{{CGb{Ch{DJb}}}CGb}{{CHlc}CHl{{BAl{{Ch{DJb}}}}}}{{CHlc}CHl{{BAl{{Ch{Gh}}}}}}{{{f{BNn}}}{{A`{Ojn}}}}{{CDh{Ch{{N`{{BEd{En}}}}}}}CDh}{{CDl{Ch{{N`{{BEd{En}}}}}}}CDl}{{{DCb{c}}{N`{{BEd{En}}}}}{{DCb{c}}}BLl}{{{CNn{c}}{N`{{BEd{En}}}}}{{CNn{c}}}BLl}{{CGb{Ch{{N`{{BEd{En}}}}}}}CGb}{{CDhc}{{A`{CDhn}}}{{E`{{BEd{En}}}{{Ad{{A`{{BEd{En}}n}}}}}}}}4{{{DCb{c}}{f{{BEd{En}}}}}{{DCb{c}}}BLl}{{{CNn{c}}{f{{BEd{En}}}}}{{CNn{c}}}BLl}3{{CKfBCb}CKf}{{CKhBCb}CKh}{{CDhBb}CDh}{{{CAb{c}}Bb}{{CAb{c}}}CAf}{{CGdBb}CGd}{{BGdd}BGd}{{CDhGh}CDh}{{CGbGh}CGb}10{{{CAl{c}}{Ch{{Hj{GhGh}}}}}{{CAl{c}}}BLl}{{CB`{Ch{{Hj{GhGh}}}}}CB`}4{{CMjDKb}CMj}{{CDhDKb}CDh}{{CDlDKb}CDl}{{{CBb{c}}CIf}{{CBb{c}}}CAf}{{BKn{Ch{Dd}}}BKn}{{{CAb{c}}{Ch{El}}}{{CAb{c}}}CAf}{{CKfLd}CKf}{{CKf{Ch{Dd}}}CKf}{{CDhd}CDh}{{CGdd}CGd}10>{{BH`{Ch{Ij}}}BH`}{{{f{BH`}}{Ch{Ij}}}{{Cn{Cl}}}}{{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}{Ch{Ij}}}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}2{{CKhBCb}CKh}{{CKfBCb}CKf}{BGdBGd}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}10{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}210213210210{{{f{Df{N`{AFn}}}}{f{{Bd{Bb}}}}}{{A`{GhBDl}}}}{{{f{Df}}{f{{Bd{Bb}}}}}{{A`{b}}}}{{{f{CHn}}AB`c}{{A`{bn}}}CAf}{{{f{CIl}}AB`c}{{A`{bn}}}CAf}{{{f{DfAB`}}{f{ANl}}e{f{g}}Gh}{{A`{bn}}}{{BAl{Dd}}}{{Id{}{{Cj{c}}}}}{DOlJ`Jb}}{{{f{{N`{c}}}}{f{Dfe}}}{{A`{bI`}}}{DOnDOnA@h}{E@`A@h}}{{{f{{N`{c}}}}{f{Dfe}}}{{A`{bI`}}}{DOnDOnA@h}{E@bA@h}}{{{f{{N`{c}}}}}{{Ed{Bl}}}{DOnDOnA@h}}{{{f{Df}}c}{{A`{GhBDl}}}DLd}{{{f{Df{N`{AFn}}}}{f{{Bd{E@d}}}}}{{A`{GhBDl}}}}{{{f{{N`{c}}}}{f{{Bd{Bb}}}}}BAb{DOnDOnA@h}}{{{f{{N`{c}}}}}E@f{DOnDOnA@h}}{{BCbc}BCb{{BAl{BCb}}}}{{{f{BLb}}}{{A`{Mjn}}}}{{{f{COl}}}{{l{Kl}}}}{{{f{COn}}}{{l{Kl}}}}{{{f{CDd}}}{{A`{{l{Kl}}n}}}}``{{{f{ALh}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{DfAB`}}{f{{Bd{Oj}}}}dd}{{A`{bn}}}}{{{f{CNb}}}CNb}{{f{f{Dfc}}}b{}}{fb}{{{f{E@h}}{f{{Bd{Bb}}}}}{{Hj{GhGh}}}}{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0{Ghb}0{{{f{E@h}}{f{{Bd{Bb}}}}{f{DfGh}}}{{Hj{GhGh}}}}{{{f{{Bd{Bb}}}}{Ch{Bb}}BbGhGhGh{Ch{{f{CGh}}}}d}{{A`{Ghn}}}}{{{f{CNb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0{{}Gh}0{{}c{}}0{{{Ch{Bb}}Bb}E@h}{{{f{Df{N`{{BEd{En}}}}}}{f{Df{Gn{Oj}}}}}{{A`{dn}}}}{{{f{{Bd{Bb}}}}Bb{f{{BEd{En}}}}d{f{{Bd{Gh}}}}Gh{Ch{Bb}}Bb{Ch{{f{CGh}}}}GhCGf{Ch{{f{CNb}}}}ddGhGh{Ch{Gh}}d}{{A`{AB`n}}}}{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAn}0{{{f{{Bd{Bb}}}}}d}88````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ij}}}Aj}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{{BEd{BBb}}}}{f{{BEd{BBb}}}}}{{A`{bn}}}}{cc{}}{{}Gh}{{}E@j}{{}c{}}{{{Ch{{f{BLj}}}}{f{COd}}{f{{BEd{BBb}}}}}{{A`{dn}}}}{{{f{E@j}}Aj{f{AGh}}}d}{{{Gn{{Hj{{f{D@n}}E@l}}}}BBb{Ch{E@n}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6``{{{f{BHl}}c}Ab{{E`{{Hj{Fb{f{{BHn{Fb}}}}}}}{{Ad{Ch}}}}J`Jb}}{{{f{BHl}}c}Ab{{E`{{Hj{Fb{f{{BHn{Fb}}}}}}}{{Ad{}}}}J`Jb}}{{{f{{Bd{{AAd{Fb}}}}}}c}Ab{{E`{{AAd{Fb}}}{{Ad{Ch}}}}J`Jb}}{{{f{{Bd{{AAd{Fb}}}}}}c}Ab{{E`{{AAd{Fb}}}{{Ad{}}}}J`Jb}}{{{f{{Bd{c}}}}e{Ch{BJd}}}{{AMd{c}}}{BJfBJh}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{Bd{c}}}}{f{Ij}}e{Ch{BJd}}}{{AMd{c}}}{BJfBJh}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{l{c}}}}FbFb}{{l{c}}}Dn}{{{f{{Gn{{AAd{Fb}}}}}}{f{{Bd{{Cn{Cl}}}}}}}d}{{{f{BJj}}{f{C`}}}Ab}{{BJlBJl}BJl}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{E`{ff}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALj{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bj}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALl}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALn{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnAM`{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALl}AM`{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{AMb{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnAMbDn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALl}{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}0``{{{f{EA`}}}{{l{Ff}}}}0{{{f{EA`}}{f{{l{Lb}}}}d}{{A`{Abn}}}}{{{f{EA`}}{f{{l{Bj}}}}d}{{A`{Abn}}}}{{{f{EA`}}}Ab}{{{f{EA`}}}{{A`{Abn}}}}1{{{f{EA`}}}{{A`{{l{Ff}}n}}}}{{{f{EA`}}}{{l{Cf}}}}{{{f{EA`}}{f{Ab}}}{{A`{Abn}}}}{{{f{EA`}}Fd}{{A`{{l{Cf}}n}}}}{{{f{EA`}}Bb}{{A`{Abn}}}}5{{{f{EA`}}}{{A`{{l{Ah}}n}}}}01{{{f{EAb}}}{{f{{l{Cf}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CBhBCb}BCb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}3{cc{}}{{}Gh}{{}c{}}{CBhBCb}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}4`````````````````````{{{f{DfEAd}}{f{{Bd{Bb}}}}ddd}{{A`{bn}}}}{{{f{DfEAd}}d}b}>>>>====;;;;::::9999{{{f{EAd}}}En}99998888{{{f{{Bd{Gh}}}}Gh{f{{BEd{En}}}}{Ch{Bb}}CGfd}{{A`{{Gn{EAd}}n}}}}8888{EAd{{A`{Abn}}}}777766665555{{{f{{Bd{Bb}}}}}d}::::````````````{{fh}b}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{EAf}}}EAf}{{f{f{Dfc}}}b{}}{fb}{{}EAh}{Gh{{f{c}}}{}}000{Gh{{f{Dfc}}}{}}000{Ghb}000{{{f{EAf}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0{EAjEAh}{EAlEAh}{E@lEAh}33{{{f{EAn}}{Oh{Gh}}}{{A`{E@ln}}}}{{{f{EAl}}{Oh{Gh}}}{{A`{E@ln}}}}{{{f{EAj}}{Oh{Gh}}}{{A`{E@ln}}}}{{{f{EAh}}{Oh{Gh}}}{{A`{E@ln}}}}{{{f{EAn}}{f{Df{Bd{{Oh{Gh}}}}}}}{{A`{{CCn{GhE@lA@n}}n}}}}{{{f{EAl}}{f{Df{Bd{{Oh{Gh}}}}}}}{{A`{{CCn{GhE@lA@n}}n}}}}{{{f{EAj}}{f{Df{Bd{{Oh{Gh}}}}}}}{{A`{{CCn{GhE@lA@n}}n}}}}{{{f{EAh}}{f{Df{Bd{{Oh{Gh}}}}}}}{{A`{{CCn{GhE@lA@n}}n}}}}{{{f{EAn}}}{{A`{Ghn}}}}{{{f{EAl}}}{{A`{Ghn}}}}{{{f{EAj}}}{{A`{Ghn}}}}{{{f{EAh}}}{{A`{Ghn}}}}{{}Gh}000{{}c{}}000{fc{}}{{{f{EAf}}{f{Bl}}{Ch{{f{CMl}}}}}{{A`{EAhn}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{fAAn}000{{{f{EAh}}}{{f{Bl}}}}6666````````{{{f{BOj}}{Ch{{f{Bl}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bl}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bl}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOj}}{Ch{{f{Bl}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOj}}{Ch{{f{Bl}}}}d}{{A`{{L`{LnLb}}n}}}}`{{{f{COl}}}{{l{Nh}}}}{{{f{COn}}}{{l{Nh}}}}{{{f{D@`}}}{{l{Lb}}}}`{{{f{DFn}}}{{l{Nh}}}}21{{{f{COl}}}{{l{An}}}}{{{f{COn}}}{{l{An}}}}{{{f{COl}}}{{l{Kl}}}}{{{f{COn}}}{{l{Kl}}}}55`46576{{{f{DFn}}}{{l{Kl}}}}16{{{f{COl}}}{{l{Nl}}}}{{{f{COn}}}{{l{Nl}}}}{{Dd{f{{Bd{{f{Bl}}}}}}{f{Bl}}}{{L`{KnKl}}}}{{Dd{f{{Bd{{f{Bl}}}}}}{f{Bl}}}{{L`{LnLb}}}}{{Dd{f{{Bd{{f{Bl}}}}}}{f{Bl}}Ld}{{L`{LfLb}}}}=<{{{f{DLl}}A@b}{{A`{Abn}}}}{{{f{DLl}}{f{Ab}}CE`}{{A`{Abn}}}}101010101010<>=`?>>`98`````````{{fh}b}{{{f{BOj}}{Ch{{f{Bl}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bl}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOj}}{Ch{{f{Bl}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOj}}{Ch{{f{Bl}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{EB`}}}{{f{{l{Bj}}}}}}{{{f{BOj}}{Ch{{f{Bl}}}}d}{{A`{{L`{LnLb}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EBb}}}EBb}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{EBb}}{f{EBb}}}d}{{f{f{c}}}d{}}00{{{f{EBb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{EBb}}{f{Dfc}}}bAE`}`{{}Gh}{{}c{}}{{{f{EBb}}{f{Bl}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{EBd{c}}}}}{{EBd{c}}}{JhAl}}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{cc{}}{{{f{Bl}}}{{Ch{EBb}}}}{{}Gh}{{}c{}}`{{{f{Df{EBd{c}}}}{f{Bl}}}ChAl}{{{f{DfEBf}}{f{{Bd{Bb}}}}{Ch{Ld}}}{{Ch{c}}}{}}{{{f{Df{EBd{Kl}}}}{f{{Bd{Bb}}}}{Ch{Ld}}}{{Ch{O`}}}}{{{f{Df{EBd{Lb}}}}{f{{Bd{Bb}}}}{Ch{Ld}}}{{Ch{Hf}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Ld}}}{{A`{{EBj{}{{EBh{e}}}}n}}}{}{}}{{EBb{Ch{Ld}}}{{A`{{EBd{Kl}}n}}}}{{EBb{Ch{Ld}}}{{A`{{EBd{Lb}}n}}}}{{}{{A`{c}}}{}}{fAAn};````````````{{fh}b}0{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000`{{{f{CMl}}{f{Bl}}}{{A`{{`{CNf}}n}}}}{{{f{Bl}}{Ch{{f{CMl}}}}d}{{A`{{Hj{EBl{N`{CNf}}}}n}}}}{{{f{CMl}}}CMl}{{{f{EBn}}}EBn}{{f{f{Dfc}}}b{}}0{fb}0`{{}EBl}{{}CMl}{Gh{{f{c}}}{}}0000{Gh{{f{Dfc}}}{}}0000{c{{A`{CMl}}}ADn}{{{f{EBn}}{f{CNh}}{f{DfEC`}}}{{A`{bn}}}}{Ghb}{{{f{DfECb}}}b}1111{{{f{EBl}}{f{EBl}}}d}{{{f{CMl}}{f{CMl}}}d}{{{f{ECd}}{f{ECd}}}d}{{f{f{c}}}d{}}00{{{f{Df}}c}{{A`{{f{Dfe}}BDl}}}DBd{}}``{{{f{DfECb}}}{{A`{bBDl}}}}{{{f{Df}}}{{A`{b}}}}{{{f{EBl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CMl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{EBn}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0000{{{f{Bl}}}{{A`{ECd}}}}{{{f{Bl}}g}{{A`{CMln}}}{{Ih{Bl}}}{{BAl{El}}}{{Id{}{{Cj{{Hj{ce}}}}}}}}{{{f{ECf}}d}{{A`{EBln}}}}{{{f{EBn}}{f{CNh}}{Oh{Gh}}}{{A`{EChn}}}}{{{f{EBn}}{f{CNh}}{f{Df{Bd{{Oh{Gh}}}}}}}{{A`{{CCn{ceA@n}}n}}}{{ECj{Gh}{{EBh{{`{AGl}}}}}}DFjECl}{{AOh{ECh}}}}{{{f{Bl}}{Ch{{f{CMl}}}}}{{A`{{Gn{El}}n}}}}{{{f{CMl}}{f{Dfc}}}bAE`}{{{f{EBn}}{f{CNh}}}{{A`{ECnn}}}}{{}Gh}0000{{}c{}}0000`{{{f{Bl}}{Ch{{f{CMl}}}}}{{A`{ECbn}}}}{{{f{Bl}}d}{{A`{EBln}}}}{{{N`{CNf}}}EBn}{{{N`{CNf}}CNh}{{A`{ECbn}}}}{{{f{Bl}}}{{A`{CNhn}}}}``{{{f{Df}}c}{{A`{{f{Dfe}}BDl}}}DBd{}}`{{{f{CMl}}c}A`A@f}{{{f{Df}}g}{{A`{eBDl}}}{}{}{{ABd{{f{Dfc}}}{{Ad{e}}}}}}{fc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{fAAn}0000<<<<<{{CMl{Ch{ED`}}}CMl}{{CMlGh}CMl}{{{f{DfECb}}{f{{Bd{Bb}}}}}{{A`{GhBDl}}}}{{{f{Df}}{f{{Bd{Bb}}}}}{{A`{b}}}}{{{f{Df}}c}{{A`{GhBDl}}}DLd}``````{{fh}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{ED`}}}ED`}{{{f{EDb}}}EDb}{{f{f{Dfc}}}b{}}0{fb}0{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00{c{{A`{ED`}}}ADn}{Ghb}00{{{f{ED`}}{f{ED`}}}d}{{{f{EDb}}{f{EDb}}}d}{{f{f{c}}}d{}}00000{{{f{ED`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{EDb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}00{cED`{{E`{}{{Ad{{CNl{{Cn{CNj}}}}}}}}J`Jb}}{{{f{ED`}}{f{Dfc}}}bAE`}{{{f{EDb}}{f{Dfc}}}bAE`}{{}Gh}00{{}c{}}00{{{f{ED`}}c}A`A@f}{fc{}}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00555``````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bd{Bb}}}}}{{Ch{EDd}}}}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{cc{}}=<{{{f{{Bd{Bb}}}}{f{Df{Gn{Bb}}}}}{{A`{{f{{Bd{Bb}}}}n}}}}:98=`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eANf{}{{Id{}{{Cj{c}}}}}}0{{AGhe}ANh{}{{Id{}{{Cj{c}}}}}}0{{{f{ANn}}}{{f{En}}}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{{f{{Bd{c}}}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{ANb}}{f{ANb}}c}{{A`{ANbn}}}AOn}{{{f{B@`}}{f{En}}}{{A`{Abn}}}}{{{f{B@`}}{f{En}}Gb}{{A`{Abn}}}}`{BAde{}{{ANf{c}}ALl}}0{{BAdAGh}e{}{{ANh{c}}ALl}}0{{{AOj{Bl}}}En}{{{f{B@`}}}{{f{En}}}}``{{AOn{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{{{Gn{c}}AGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{Gn{c}}AGh}{{ALl{}{{AO`{e}}{AOb{c}}{AOd{g}}}}}{AOf{AOh{e}}}Jh{{Hd{}{{Cj{e}}}}JjJ`Jb}}{{GhcAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{GhAGh}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{B@`}}Gh}{{A`{Jln}}}}{{{f{B@`}}Gh}Jl}{{}En}{{{f{BBl}}Gh}Jl}4{{BBnEn}{{A`{Mjn}}}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{AH`{cgAGn}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}{{Ch{c}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{ANb}}{f{ANb}}}{{A`{{Hj{ANbANb}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{Enn}}}}`{{}c{}}0{g{{A`{ANfe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGhg}{{A`{ANhe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{BAd{{A`{eg}}}{}{{ANf{c}}ALl}{}}0{{BAdAGh}{{A`{eg}}}{}{{ANh{c}}ALl}{}}0{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}Gh}cJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}0{{{f{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}}}gJh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{Ghc{}}0{{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}{Ch{Ij}}}{{ALl{}{{AO`{c}}{AOb{e}}{AOd{g}}}}}Jh{AOf{AOh{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}```````````{{{f{ANb}}{f{ANb}}c}{{A`{ANbn}}}AOn}{{AOn{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}=<`````````{{}b}0{{}d}`{{{f{{L`{LfLb}}}}{f{{l{Bj}}}}CMd{Gj{Hf}{{Ad{AMl}}}}{Gj{AMl}{{Ad{Hf}}}}{f{AMn}}{f{AMn}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{Gj{Hf}{{Ad{AMl}}}}{Gj{AMl}{{Ad{Hf}}}}{f{AMn}}{f{AMn}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{f{{l{Bj}}}}CMd}{{A`{{L`{LfLb}}n}}}}```{{c{Ch{Ij}}}DDl{}}{{{DDn{Hf}}{DDn{Bb}}{Ch{Ij}}}DE`}{{{DDn{Hf}}{DDn{Bb}}{Ch{Ij}}}DEb}`{DAfBCb}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{DAfLd}BCb}3{{DAfBCbLd}BCb}{{DAfDd}BCb}555{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}8{cc{}}9{{}Gh}{{}c{}};;;;;;;;;;{{DAf{Ch{Dd}}BCbCMd}BCb}{{DAfBCb}BCb}={{DAf{f{Bl}}}BCb}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6{DAfBCb}0?0`{{{f{BJn}}{f{AB`}}{f{C`}}}{{A`{Abn}}}}{{{f{BJn}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}EDf}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{EDf{Ch{{f{AGh}}}}}{{A`{AF`n}}}}{cc{}}{{}Gh}{{}c{}}{{{f{EDf}}}d}{{GhGh}EDf}{{{f{DfEDf}}{Cn{Cl}}}b}{{{f{DfEDf}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}7`{{{f{{l{c}}}}}GhAl}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EDh}}}EDh}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{EDh}}}ADn}{Ghb}{{{f{EDh}}{f{EDh}}}d}{{{f{EDh}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}{{{f{EDh}}{f{Dfc}}}bAE`}{{}Gh}{{}c{}}{{{f{EDh}}c}A`A@f}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{H`BCh}}}}{fAAn}7````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EDj}}}EDj}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{EDj}}}ADn}{Ghb}{{{f{EDj}}{f{EDj}}}d}{{{f{EDj}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}{{{f{EDj}}{f{Dfc}}}bAE`}{{}Gh}{{}c{}}{{{f{EDj}}c}A`A@f}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{H`BCh}}}}{fAAn}7{{MbMb}Mb}{{{f{{l{Ff}}}}Fb}{{A`{bn}}}}{{{f{{AMd{Fb}}}}Fb}{{A`{bn}}}}```{{{f{Ab}}CFj}Ab}{{{f{Fj}}{f{Fj}}d}{{A`{Fjn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChM`{{E`{}{{Ad{}}}}Eb}}{{{f{Ab}}{f{C`}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{EDl}}}{{f{AGj}}}}{{{f{DfEDl}}}{{Cn{Cl}}}}{{{f{DfEDl}}}{{f{DfAGj}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EDl}}}EDl}{{f{f{Dfc}}}b{}}{fb}{{}EDl}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{EDl}}}{{f{AGh}}}}{{{f{DfEDl}}Gh}b}{{{f{EDl}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{}Gh}{{}c{}}{{{f{EDl}}}Gh}{GhEDl}{{{f{DfEDl}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{{f{EDl}}}{{Ch{{f{EDn}}}}}}8{{{f{{Bd{Fj}}}}{f{{Bd{d}}}}{f{{Bd{d}}}}}{{A`{AMfn}}}}{{{f{{Bd{Fj}}}}{f{{Bd{d}}}}{f{{Bd{d}}}}}{{A`{{Kb{Hf}}n}}}}{{Dd{f{{Bd{Fj}}}}{f{{Bd{d}}}}{f{{Bd{d}}}}}{{A`{{l{Fh}}n}}}}{{Dd{f{{Bd{Ab}}}}}{{A`{{l{Fh}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bd{Ab}}}}}{{A`{AMfn}}}}{{{f{{Bd{Ab}}}}}{{A`{{l{Fh}}n}}}}00`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DOb}}}DOb}{{f{f{Dfc}}}b{}}{fb}{{}DOb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{{BEn{EnA@n}}}}}En}{{{f{DOb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{DOb}}}Gh}{{{f{DOb}}}{{N`{{BEd{En}}}}}}{{{f{Bl}}dd}En}{{{f{DFf}}Bb{Ch{Gh}}d{Ch{{f{{BEd{En}}}}}}GhGh{Ch{{f{CGh}}}}{Ch{Bb}}Bb{Ch{{f{CGj}}}}dd{f{Df{Ch{Gh}}}}d}{{A`{{Hj{{BEd{En}}GhGh}}n}}}}{{}Gh}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DFf}}{f{CGb}}}{{A`{DObn}}}}{{}{{A`{c}}}{}}{fAAn}5{{DOb{N`{{BEd{En}}}}}DOb}````{{{f{{l{c}}}}eAMhd}{{Gn{Fb}}}Dn{{D`{}{{Cj{Ch}}}}}}{{{f{{Bd{f}}}}cFbe}{{Gn{Fb}}}{{D`{}{{Cj{Ch}}}}}{{E`{fGhf}{{Ad{d}}}}}}``{{{f{EE`}}}{{f{Ab}}}}{{{f{CDd}}}{{A`{{l{Kl}}n}}}}{{{f{CDd}}}{{A`{{l{Nh}}n}}}}0{{{f{CDd}}}{{A`{{l{An}}n}}}}22112{{{f{CDd}}}{{A`{{l{Nl}}n}}}}322{{{f{CDd}}{f{Bl}}}{{A`{Abn}}}}{{{f{CDd}}Ld}{{A`{{l{Lb}}n}}}}1445`{{Gh{f{Df{Gn{d}}}}}b}```{{{f{AKn}}GhGh}AKn}0{{Gh{f{{Bd{Fj}}}}{f{DfFl}}}{{A`{{AMj{{l{Ff}}}}n}}}}`````````````11```{{{f{C@j}}}{{f{{l{Bj}}}}}}{{{f{C@n}}}{{A`{{l{Bj}}n}}}}{{{f{C@n}}}{{l{Bj}}}}{{{f{C@n}}{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{C@n}}{f{Bl}}d}{{A`{{l{An}}n}}}}{{{f{C@n}}{f{{l{Bj}}}}dd}{{A`{{l{An}}n}}}}{{{f{C@n}}{f{Bl}}}{{A`{{l{An}}n}}}}{{{f{C@n}}{f{Bl}}d}{{A`{{l{Ff}}n}}}}{{{f{C@n}}{f{{l{Bj}}}}d}{{A`{{l{Ff}}n}}}}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{Bl}}}El}{{{f{C@n}}{f{{l{Bj}}}}Gh}{{A`{{l{Bj}}n}}}}{{{f{C@n}}{f{Bl}}}{{A`{{l{Ah}}n}}}}{{{f{C@n}}{f{{l{Bj}}}}}{{A`{{l{Ah}}n}}}}{{{f{C@n}}{f{Bl}}{f{En}}}{{A`{Abn}}}}7{{{f{C@n}}{f{{l{Bj}}}}dd}{{A`{{l{Ff}}n}}}}{{{f{C@n}}{f{Bl}}}{{A`{{l{Ff}}n}}}}?>{{{f{{Bd{{f{{l{Bj}}}}}}}}{f{Bl}}d}{{A`{{l{Bj}}n}}}}{{{f{C@n}}{f{Bl}}{f{Bl}}}{{A`{{l{Bj}}n}}}}0{{{f{C@n}}{f{Bl}}{f{Bl}}Gh}{{A`{{l{Bj}}n}}}}1{{{f{C@n}}{f{{l{Bj}}}}}{{l{Ah}}}}{{{f{C@n}}{f{{l{Bj}}}}Gh}{{A`{{l{j}}n}}}}0{{{f{{l{Bj}}}}{f{{l{Bj}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{E`{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{{{f{{l{Bj}}}}{f{{l{Bj}}}}Ghed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{E`{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{{{f{C@n}}}{{l{Bj}}}}{{{f{C@n}}{f{Fj}}}{{A`{{l{Bj}}n}}}}{{{f{{l{Bj}}}}{f{Bl}}d}{{l{Bj}}}}{{{f{C@n}}}{{l{Ff}}}}03{{{f{C@n}}{f{Fj}}{f{Fj}}}{{A`{{l{Bj}}n}}}}3{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Bj}}}}404040{{{f{C@n}}{f{{l{Bj}}}}}{{l{Bj}}}}10{{{f{C@n}}{f{{l{Ff}}}}d}{{A`{{l{Lb}}n}}}}777````````{{eGhGh}{{EEb{Hf}}}{{Ih{Bl}}}{{D`{}{{Cj{c}}}}}}{{eGhGh}{{Kb{Hf}}}{{Ih{{Bd{Bb}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BLb}}}Aj}{{Dd{Gn{{Cn{Cl}}}}{f{AGh}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}{f{AGh}}{Ch{{f{{DOj{DdDd}}}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{BfMh}}{{Abc}{}{BfMh}}{{AbAb}}`{{{f{BLb}}}{{A`{Mjn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{BLb}}}{{A`{Fbn}}}}{{{f{Ab}}}{{Ch{Gh}}}}0{{{f{BLb}}Fd}{{l{Ff}}}}{{{f{BLb}}}{{A`{{l{Ff}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{Ab}}Gh}{{f{{Cn{Cl}}}}}}{{{f{BLb}}}{{f{AGj}}}}{{{f{DfBLb}}}{{f{DfAGj}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBLb}}}{{f{Df{l{c}}}}}Dn}{{{f{BLb}}}{{f{{l{c}}}}}Dn}{{{f{Ab}}}{{f{BLb}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBLb}}}{{A`{Ghn}}}}{{{f{DfAb}}}{{A`{Ghn}}}}{{{f{Ab}}}{{A`{{f{{l{B`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fh}}}}n}}}}{{{f{Ab}}Ab}}{{Ab{f{Ab}}}}{{AbAb}}{{{f{Ab}}{f{Ab}}}}30120321{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BLb}}}{{Ch{{Cn{G`}}}}}}{{{f{BLb}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}0{{{f{Ab}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{ANb}}n}}}}{{{f{BLb}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bh}{{{f{BLb}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gh}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gh}}}}}}}}{{{f{BLb}}}{{f{{Gn{{Cn{Cl}}}}}}}}{{{f{DfBLb}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Mb}}}Mb}1{{{f{BLb}}}{{N`{BLb}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ab}{Gh{{f{c}}}{}}000{{{f{Ab}}}f}{Gh{{f{Dfc}}}{}}000{c{{A`{Mb}}}ADn}{c{{A`{Ab}}}ADn}{{{f{Ab}}c}{}{BfMh}}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{BfMh}}{{AbAb}}{Ghb}000{{{f{BLb}}}Ab}{{{f{BLb}}}{{f{En}}}}{{{f{Ab}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Mb}}{f{Mb}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}9{{{f{Ab}}{f{Bl}}}{{A`{{l{An}}n}}}}{{{f{Ab}}c}{}BAn}2;0{{{f{Ab}}{f{Bl}}}}44{{f{f{c}}}d{}}00{{{f{Ab}}}Gh}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JlGh}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{BLb}}}{{Ed{Oj}}}}{{{f{Ab}}AIh}{{A`{Abn}}}}{{{f{BLb}}{f{{l{An}}}}}{{A`{Abn}}}}{{{f{BLb}}}Mj}{{{f{Mb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Ab}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{Ab}}}El}{cc{}}00{{{L`{LfLb}}}Ab}{{{L`{LnLb}}}Ab}{{{L`{LlLb}}}Ab}{{{l{c}}}AbDn}{{{L`{KnKl}}}Ab}5{EEdAb}{{Dd{f{{Bd{Jl}}}}d}{{A`{Abn}}}}{{Dd{f{{Bd{Jl}}}}{f{En}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}{f{En}}}Ab}{cAb{{Id{}{{Cj{{f{Aj}}}}}}}}{cAb{{Id{}{{Cj{{f{Nj}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Fb}}}}}}}}{cAb{{Id{}{{Cj{{f{Kd}}}}}}}}{cAb{{Id{}{{Cj{Kd}}}}}}{cAb{{Id{}{{Cj{Aj}}}}}}{cAb{{Id{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{Id{}{{Cj{Fb}}}}}}{cAb{{Id{}{{Cj{{f{Hf}}}}}}}}{cAb{{Id{}{{Cj{{Ch{d}}}}}}}}{cAb{{Id{}{{Cj{d}}}}}}{cAb{{Id{}{{Cj{{f{Of}}}}}}}}{cAb{{Id{}{{Cj{{f{d}}}}}}}}{cAb{{Id{}{{Cj{Of}}}}}}{cAb{{Id{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{cAb{{Id{}{{Cj{Hf}}}}}}{cAb{{Id{}{{Cj{{f{Bl}}}}}}}}{cAb{{Id{}{{Cj{{Ch{El}}}}}}}}{cAb{{Id{}{{Cj{El}}}}}}{cAb{{Id{}{{Cj{{Ch{Of}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Hf}}}}}}}}{cAb{{Id{}{{Cj{{f{Bb}}}}}}}}{cAb{{Id{}{{Cj{Bb}}}}}}{cAb{{Id{}{{Cj{{Ch{Bb}}}}}}}}{cAb{{Id{}{{Cj{{f{O`}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Id{}{{Cj{{f{Fb}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Kf}}}}}}}}{cAb{{Id{}{{Cj{{Ch{O`}}}}}}}}{cAb{{Id{}{{Cj{Kf}}}}}}{cAb{{Id{}{{Cj{{f{Nn}}}}}}}}{cAb{{Id{}{{Cj{{f{Kf}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Nj}}}}}}}}{cAb{{Id{}{{Cj{Nj}}}}}}{cAb{{Id{}{{Cj{Nn}}}}}}{cAb{{Id{}{{Cj{{Ch{Nn}}}}}}}}{cAb{{Id{}{{Cj{O`}}}}}}{{Dd{Gn{Aj}}}Ab}{{Dd{Gn{Nj}}}Ab}{{Dd{Gn{Nn}}}Ab}{{Dd{Gn{O`}}}Ab}{{Dd{Gn{Hf}}}Ab}{{Dd{Gn{Ob}}}Ab}{{Dd{Gn{Bb}}}Ab}{{Dd{Gn{Of}}}Ab}{{Dd{Gn{Fb}}}Ab}{{Dd{Gn{Kf}}}Ab}{{Dd{Gn{Kd}}}Ab}{{DdGh{f{En}}}Ab}{{{f{Ab}}GhGh}Ab}{{{f{BLb}}Gh}{{A`{Jln}}}}{{{f{Ab}}}Jn}{{{f{Ab}}}Ab}{{{f{BLb}}}{{Ch{{Nb{G`}}}}}}{{{f{BLb}}Gh}{{Ch{{f{K`}}}}}}{{{f{BLb}}GhGh}{{Ch{{f{K`}}}}}}{{{f{BLb}}Gh}Jl}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}{f{Bl}}}}{{{f{Ab}}c}{}BAn}102{{{f{BLb}}}d}{{{f{Mb}}{f{Dfc}}}bAE`}{{{f{Ab}}{Ch{Gh}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ff}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gh}000{{}c{}}000{Ab{{Gn{{Cn{Cl}}}}}}{{}Fj}{AbAB`}3{BGfAb}{AbAb}?{{{f{Ab}}}{{A`{{l{An}}n}}}}000{{{f{BLb}}}{{l{An}}}}0{{}d}0{{{f{Ab}}}Mb}{{{f{Ab}}}EEf}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BLb}}}Mj}{{{f{BLb}}}Gh}{{{f{Ab}}}Gh}{{{f{BLb}}Gh}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ab}}}{{Hj{{Gn{{Hh{Hf}}}}{Gn{{Ch{Ij}}}}}}}}{{{f{Ab}}}Ab}{AbBCb}{{{f{Ab}}c}{}BAn}{{{f{Ab}}{f{Bl}}}}{{{f{Ab}}{f{Ab}}}}120{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mh}{{{f{BLb}}}{{A`{Mjn}}}}{{{f{BLb}}}{{Ch{Aj}}}}{{{f{Ab}}}Mj}1232{{AbAb}}{{Abc}{}{BfMh}}{{{f{Ab}}c}{}{BfMh}}7{{{f{BLb}}}Gh}{{{f{Ab}}}Gh}{{{f{BLb}}}{{A`{Ghn}}}}{{{f{BLb}}}{{f{Dd}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Ab}}}}}}}}{{Ddc}AbBGf}{{Ddc}Ab{{Ih{{Bd{Nn}}}}}}{{Ddc}Ab{{Ih{{Bd{Ab}}}}}}{{Ddc}Ab{{Ih{{Bd{Nj}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{AMl}}}}}}}}{{Dd{Oh{Fb}}}Ab}{{Dd{Oh{Kf}}}Ab}{{Dd{Oh{O`}}}Ab}{{Dd{Oh{Hf}}}Ab}{{Ddc}Ab{{Ih{{Bd{AMl}}}}}}{{Ddc}Ab{{Ih{{Bd{Kf}}}}}}{{Ddc}Ab{{Ih{{Bd{Fb}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Aj}}}}}}}}{{Ddc}Ab{{Ih{{Bd{Of}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Kd}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Ob}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{BBj}}}}}}}}{{Ddc}Ab{{Ih{{Bd{Bb}}}}}}{{Ddc}Ab{{Ih{{Bd{Hf}}}}}}{{Ddc}Ab{{Ih{{Bd{Ob}}}}}}{{Ddc}Ab{{Ih{{Bd{BBh}}}}}}{{Ddc}Ab{{Ih{{Bd{Kd}}}}}}{{Ddc}Ab{{Ih{{Bd{Aj}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Hf}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{{Ed{Bl}}}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{O`}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{El}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{f{Bl}}}}}}}}{{Ddc}Ab{{Ih{{Bd{BBj}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{{Ed{{Bd{Bb}}}}}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{{Gn{Bb}}}}}}}}}}{{Ddc}Ab{{Ih{{Bd{d}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ed{{Bd{Bb}}}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{{f{{Bd{Bb}}}}}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Nn}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Nj}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{d}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{BBh}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Kf}}}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{Ih{{Bd{O`}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{{f{Bl}}}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Bb}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Of}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ed{Bl}}}}}}}}{{Ddc}Ab{{Ih{{Bd{Jl}}}}}}{{Ddc}Ab{{Ih{{Bd{AN`}}}}}}{{Ddc}Ab{{Ih{{Bd{{f{{Bd{Bb}}}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{AN`}}}}}}}}{{Ddc}Ab{{Ih{{Bd{El}}}}}}{{Ddc}Ab{{Ih{{Bd{{Gn{Bb}}}}}}}}{{Ddc}Ab{{Ih{{Bd{{Ch{Fb}}}}}}}}{{Dd{f{En}}}Ab}{{{f{BLb}}GhGh}Ab}{{DdGh}Ab}{{{f{DfEEf}}}Ch}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BAn}{{{f{Ab}}{f{Bl}}}{{A`{{l{An}}n}}}}31{{{f{Ab}}{f{Bl}}}}3{{{f{Ab}}}{{A`{{f{ADj}}n}}}}{{{f{BLb}}}Gh}`{{{f{BLb}}}{{A`{Mjn}}}}{{{f{Ab}}}{{Cn{Jf}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{BLb}}AjA@`}{{A`{Mjn}}}}{{{f{BLb}}}Ab}{{{f{BLb}}}{{Ch{Ij}}}}{{Abc}{}{BfMh}}{{{f{Ab}}c}{}{BfMh}}={{{f{DfBLb}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bd{B@n}}}}}{{A`{Abn}}}}06{MbMb}{{{f{BLb}}{f{E`}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Ghdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gh}Ab}{{{f{Mb}}c}A`A@f}{{{f{Ab}}c}A`A@f}{{{f{DfAb}}Mb}b}{{{f{BLb}}Hf}Ab}{{{f{DfBLb}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kf}}}Ab}{{{f{EEf}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{BLb}}HfGh}Ab}{{{f{Ab}}HfGh}Ab}{{{f{Ab}}Fd}{{A`{Abn}}}}{{{f{BLb}}Fd}{{A`{Abn}}}}{{{f{BLb}}Hf}{{Hj{AbAb}}}}{{{f{Ab}}Hf}{{Hj{AbAb}}}}{{{f{BLb}}Bb}{{Ch{Aj}}}}{{{f{BLb}}Bb}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{{f{{l{Bj}}}}n}}}}{{{f{Ab}}Gh}{{A`{{Ed{Bl}}n}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Ab}}c}{}{BfMh}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{Abc}{}{BfMh}}{{{f{Ab}}}{{A`{cn}}}Mh}{{{f{BLb}}}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{Ab}}{Ch{Gh}}}Ab}{{{f{BLb}}{f{{l{Ff}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bd{A@j}}}}Mb}Ab}{{{f{Ab}}{f{{Bd{A@j}}}}}Ab}{{{f{BLb}}{f{{Bd{Fb}}}}}{{A`{Abn}}}}{{{f{BLb}}{f{{Bd{Fb}}}}}Ab}{{{f{BLb}}{f{{l{Ff}}}}}Ab}{{{f{Ab}}}{{A`{{f{{L`{LnLb}}}}n}}}}{{{f{Ab}}GhB@h}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{Bl}}}}d}{{A`{AB`n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{Ed{Ab}}}}{fEl}{{AbAb}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{Cf}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{B`}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Fh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Ab}}}{{Ch{{f{ANb}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Eh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ej}}}}}}}}{c{{A`{e}}}{}{}}000{{{Hj{{f{BBb}}{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hj{Dd{Gn{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hj{Dd{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hj{{f{BBb}}{Gn{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{Nl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Nh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ff}}}}}}}}{{}{{A`{c}}}{}}000{{{f{Ab}}}{{Ch{{f{{l{Ah}}}}}}}}{{AbAb}{{A`{Abn}}}}{{Ddc}{{A`{Ab}}}{}}{{{f{Ab}}}{{Ch{{f{ADj}}}}}}{{{f{DfAb}}{Kh{c}}}dDn}{{{f{Ab}}}{{Ch{{f{{l{Bj}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{j}}}}}}}}5{{{f{Ab}}}{{Ch{{f{{L`{LnLb}}}}}}}}{f{{A`{H`BCh}}}}{{{f{Ab}}}{{Ch{{f{{l{Od}}}}}}}};{{{f{Ab}}}{{Ch{{f{{l{Nf}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Nd}}}}}}}}{fAAn}000{{{f{Ab}}}{{A`{{f{{l{Od}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nf}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{BLb}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BLb}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{BLb}}Bb}{{Ch{Aj}}}}{{{f{BLb}}Bb}{{A`{Mjn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{BfMh}}{{{f{BLb}}}{{A`{Mjn}}}}{{{f{Ab}}{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ef}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ef}}}Ef}{{f{f{Dfc}}}b{}}{fb}{{{f{Ef}}}Ab}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{cc{}}{{}Gh}{{}c{}}{{{EEh{Ab}}}Ef}{{{f{DfEf}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6{{{f{DfEf}}{f{Df{Cn{Cl}}}}e}c{}{{E`{{f{Ef}}}{{Ad{c}}}}}}```````````{{fh}b}{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BLn{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BMb}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{EEj}}}EEj}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}987{Ghb}{{{f{EEj}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{EEj}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{}Gh}{{}c{}}?>=?>=?>={fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}4``{{{f{CDf}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Gd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CDf}}c}{{A`{Abn}}}Bh}{{{f{{l{Gd}}}}c}{{A`{Abn}}}Bh}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DAb}}}DAb}{{f{f{Dfc}}}b{}}{fb}{{}DAb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{c{{A`{DAb}}}ADn}{Ghb}{{{f{DAb}}{f{DAb}}}d}{{f{f{c}}}d{}}00{{{f{DAb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{DAb}}{f{Dfc}}}bAE`}{{}Gh}{{}c{}}{{{f{DAb}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5","D":"AEJ`CGf","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",12732],[5,"StructType",2036,12733],[5,"ChunkedArray",17,12734],[6,"PolarsError",3659,12735],[6,"Result",12736],[5,"Series",12143,12737],[17,"Output"],[10,"FnMut",12738],[5,"ListType",2036,12733],[1,"f64"],[10,"PolarsNumericType",2036,12733],[5,"BooleanType",2036,12733],[5,"BinaryType",2036,12733],[1,"u8"],[1,"slice"],[10,"Num",12739],[10,"ToPrimitive",12740],[5,"StringType",2036,12733],[1,"str"],[10,"NumOpsDispatchInner",12650,12741],[6,"GroupsProxy",4365,12742],[5,"ObjectType",2036,12733],[10,"PolarsObject",1570,12743],[5,"FixedSizeListType",2036,12733],[6,"Option",12744],[17,"Item"],[10,"Array",12745],[5,"Box",12746],[10,"Iterator",12747],[5,"AmortizedListIter",12748],[5,"PlSmallStr",2036,12749],[0,"mut"],[17,"IsNested"],[5,"FalseT",2036,12733],[17,"IsObject"],[10,"PolarsDataType",2036,12733],[10,"Fn",12738],[10,"Copy",12750],[6,"Cow",12751],[5,"AmortSeries",12626,12752],[5,"Float32Type",2036,12733],[5,"Float64Type",2036,12733],[5,"String",12753],[6,"DataType",2036,12754],[5,"View",12755],[1,"u32"],[5,"SortOptions",1700,12756],[5,"UInt32Type",2036,12733],[5,"BinaryOffsetType",2036,12733],[6,"Column",4051,12757],[5,"SortMultipleOptions",1700,12756],[10,"PolarsIntegerType",2036,12733],[10,"MetadataTrait",1284,12758],[6,"CastOptions",1176,12759],[10,"NumOpsDispatchCheckedInner",12697,12760],[5,"Iter",12761],[1,"usize"],[1,"fn"],[5,"Map",12762],[5,"Vec",12763],[5,"CompactString",12764],[5,"MetadataProperties",1284,12765],[10,"DoubleEndedIterator",12766],[1,"i64"],[5,"OffsetsBuffer",12767],[1,"tuple"],[17,"HasViews"],[5,"Formatter",12768],[5,"Error",12768],[17,"Array"],[10,"IntoIterator",12769],[10,"Borrow",12770],[10,"AsRef",12771],[5,"Bitmap",12772],[10,"PolarsAsRef",12773],[10,"IntoParallelIterator",12774],[10,"Send",12750],[10,"Sync",12750],[10,"NoOption",12775],[10,"ExactSizeIterator",12776],[10,"Clone",12777],[10,"TrustedLen",12778],[6,"AnyValue",2036,12779],[5,"MetadataFlags",1284,12765],[10,"PolarsObjectSafe",1570,12743],[5,"BinaryArray",12780],[1,"f32"],[1,"u64"],[5,"Metadata",1284,12765],[5,"RwLockWriteGuard",12781],[5,"Int32Type",2036,12733],[5,"DateType",2036,12733],[5,"Logical",2036,12782],[5,"Int64Type",2036,12733],[6,"TimeUnit",2036,12783],[5,"DatetimeType",2036,12733],[5,"Int128Type",2036,12733],[5,"DecimalType",2036,12733],[5,"DurationType",2036,12733],[5,"TimeType",2036,12733],[10,"PolarsFloatType",2036,12733],[6,"IsSorted",12143,12784],[10,"PolarsIterator",1227,12785],[6,"ChunkedArrayLayout",17,12734],[10,"NumCast",12740],[5,"Scalar",4734,12786],[6,"MetadataReadGuard",1284,12787],[5,"IMMetadata",1284,12788],[5,"Arc",4734,12789],[5,"RwLockReadGuard",12781],[5,"UInt8Type",2036,12733],[5,"UInt64Type",2036,12733],[5,"Int8Type",2036,12733],[1,"i8"],[5,"Int16Type",2036,12733],[1,"i16"],[1,"i32"],[1,"i128"],[5,"UInt16Type",2036,12733],[1,"u16"],[5,"Range",12790],[5,"Field",2036,12791],[10,"ParallelIterator",12774],[10,"IndexedParallelIterator",12774],[6,"QuantileMethod",4734,12792],[5,"RollingOptionsFixedWindow",4734,12793],[10,"PolarsOpsNumericType",12794],[10,"Serializer",12795],[10,"Sized",12750],[5,"ChunkId",4734,12796],[17,"IsStruct"],[5,"RandomState",12797],[5,"BytesHash",12798],[5,"OwnedRepr",12799],[1,"array"],[5,"Dim",12800],[5,"ArrayBase",12801],[5,"ViewRepr",12801],[6,"Either",12802],[5,"TypeId",12803],[5,"DataFrame",3760,12804],[5,"NullableIdxSize",4734,12796],[10,"FnOnce",12738],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",870,12805],[5,"AnonymousListBuilder",898,12806],[5,"AnonymousOwnedListBuilder",898,12806],[5,"ListBooleanChunkedBuilder",898,12807],[5,"ListPrimitiveChunkedBuilder",898,12808],[10,"ListBuilderTrait",898,12809],[10,"ChunkedBuilder",898,12810],[5,"ListStringChunkedBuilder",898,12811],[5,"ListBinaryChunkedBuilder",898,12811],[5,"ListNullChunkedBuilder",898,12812],[5,"BinViewChunkedBuilder",898,12813],[10,"ViewType",12814],[5,"BooleanChunkedBuilder",898,12815],[5,"NullChunkedBuilder",898,12816],[5,"PrimitiveChunkedBuilder",898,12817],[5,"NullChunked",12818],[10,"NewChunkedArray",898,12810],[10,"Deserializer",12819],[10,"Hasher",12820],[10,"ChunkedCollectInferIterExt",1207,12821],[10,"ChunkedCollectIterExt",1207,12821],[10,"Canonical",1221,12822],[10,"ChunkedCollectParIterExt",1223,12823],[10,"FromParIterWithDtype",1223,12823],[5,"BooleanArray",12824],[5,"BoolIterNoNull",1227,12785],[5,"FixedSizeListArray",12825],[5,"FixedSizeListIterNoNull",1227,12785],[5,"SomeIterator",1227,12785],[5,"MetadataEnv",1284,12826],[10,"MetadataCollectable",1284,12827],[5,"Iter",12828],[5,"IterNames",12828],[5,"File",12829],[5,"Mutex",12830],[6,"MetadataMerge",1284,12765],[5,"RwLock",12781],[5,"ObjectArray",1570,12743],[6,"ArrowDataType",2036,12831],[10,"Any",12803],[10,"Debug",12768],[5,"BitmapIter",12832],[6,"ZipValidity",12833],[5,"ObjectChunkedBuilder",1647,12834],[10,"AnonymousObjectBuilder",1671,12835],[5,"ObjectRegistry",1671,12835],[10,"ChunkAgg",1700,12836],[17,"FuncRet"],[10,"ChunkApply",1700,12836],[10,"ChunkApplyKernel",1700,12836],[10,"ChunkApproxNUnique",1700,12836],[10,"ChunkSort",1700,12836],[10,"ChunkUnique",1700,12836],[10,"ChunkCast",1700,12836],[6,"FillNullStrategy",1700,12836],[10,"ChunkCompareEq",12143,12836],[10,"ChunkExplode",1700,12836],[10,"ChunkFillNullValue",1700,12836],[10,"ChunkFilter",1700,12836],[10,"ChunkFull",1700,12836],[10,"ChunkFullNull",1700,12836],[10,"ChunkAnyValue",1700,12836],[10,"ChunkCompareIneq",1700,12836],[10,"IsFirstDistinct",1700,12836],[10,"IsLastDistinct",1700,12836],[10,"ChunkQuantile",1700,12836],[10,"ChunkExpandAtIndex",1700,12836],[10,"Reinterpret",1700,12836],[10,"ChunkReverse",1700,12836],[10,"ChunkRollApply",1700,12836],[10,"ChunkSet",1700,12836],[10,"ChunkShift",1700,12836],[10,"ChunkShiftFill",1700,12836],[10,"SlicedArray",1700,12837],[10,"ChunkVar",1700,12836],[10,"ChunkTake",1700,12836],[10,"ChunkTakeUnchecked",1700,12836],[10,"ChunkBytes",1700,12836],[10,"ChunkZip",1700,12836],[10,"BinaryFnMut",1920,12838],[10,"StaticArray",2036,12839],[10,"TernaryFnMut",1920,12838],[10,"Error",12840],[10,"UnaryFnMut",1920,12838],[5,"PrimitiveArray",12841],[5,"RowsEncoded",12842],[6,"SearchSortedSide",1970,12843],[5,"NoNull",4734,12844],[5,"NaiveDateTime",12845],[6,"Tz",12846],[5,"NaiveTime",12847],[5,"CategoricalChunked",2036,12848],[5,"CategoricalChunkedBuilder",2036,12849],[10,"ArrayFromIter",2036,12850],[10,"ArrayFromIterDtype",2036,12850],[5,"OsStr",12851],[5,"Path",12852],[10,"AsRefDataType",2036,12754],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",12853],[10,"From",12771],[5,"BinaryViewArrayGeneric",12814],[6,"RevMapping",2036,12854],[10,"CategoricalMergeOperation",2036,12855],[10,"LogicalType",2036,12782],[6,"CategoricalOrdering",2036,12854],[5,"OwnedObject",2036,12779],[6,"UnknownKind",2036,12754],[5,"CompatLevel",2036,12754],[5,"CategoricalType",2036,12733],[5,"Dimension",2036,12856],[6,"ReshapeDimension",2036,12856],[6,"ArrowTimeUnit",2036],[6,"Ordering",12857],[10,"ArrayCollectIterExt",2036,12850],[5,"GlobalRevMapMerger",2036,12855],[1,"char"],[10,"FromIterator",12769],[10,"Into",12771],[10,"NumericNative",2036,12733],[6,"SerializableDataType",12858],[5,"ArrowField",4734],[6,"IntegerType",12859],[6,"PrimitiveType",12860],[5,"TimeDelta",12861],[5,"NaiveDate",12862],[10,"GetAnyValue",2036,12779],[10,"IntoScalar",2036,12863],[5,"CatIter",2036,12848],[6,"Expr",4734,12864],[1,"u128"],[6,"PhysicalType",12859],[6,"ToCompactStringError",12764],[5,"Arguments",12768],[5,"StringCacheHolder",3620,12865],[5,"EnumChunkedBuilder",3639,12866],[5,"ErrString",3659,12735],[6,"PolarsWarning",3659,12867],[5,"Error",12868],[6,"ParquetError",12869],[6,"Error",12870],[5,"Utf8Error",12871],[5,"Error",12872],[6,"Error",12873],[5,"TryReserveError",12874],[10,"Display",12768],[5,"Schema",12875],[5,"RecordBatchT",12876],[10,"IntoColumn",4051,12757],[6,"NullStrategy",3760,12804],[6,"UniqueKeepStrategy",3760,12804],[5,"HashSet",12877],[5,"Row",4622,12878],[5,"GroupBy",4365,12879],[5,"DynamicGroupOptions",4734,12880],[5,"RangeFull",12790],[5,"RangeToInclusive",12790],[5,"RangeInclusive",12790],[5,"RangeTo",12790],[5,"RangeFrom",12790],[5,"RecordBatchIter",3760,12804],[5,"PhysRecordBatchIter",3760,12804],[5,"LazyFrame",4734,12881],[10,"IntoSeries",12143,12882],[5,"RollingGroupOptions",4734,12880],[10,"RangeBounds",12790],[10,"IntoVec",4734,12844],[6,"IndexOrder",4734,12883],[5,"StructArray",4734,12884],[5,"Duration",4734,12885],[5,"ScalarColumn",4051,12886],[5,"PartitionedColumn",12887],[6,"BitRepr",12143,12784],[5,"UnpivotArgsIR",4334,12888],[5,"GroupsIdx",4365,12742],[5,"UnitVec",12889],[6,"GroupByMethod",4365,12879],[5,"SlicedGroups",4365,12742],[5,"GroupsProxyParIter",4365,12742],[10,"UnindexedConsumer",12890],[6,"GroupsIndicator",4365,12742],[6,"IRAggExpr",12891],[10,"IntoGroupsProxy",4365,12892],[5,"Copied",12893],[5,"Zip",12894],[5,"GroupsProxyIter",4365,12742],[6,"RollingFnParams",4734,12895],[10,"IsFloat",12896],[10,"NativeType",12897],[10,"AggList",4606,12898],[10,"TakeExtremum",4606,12899],[10,"PhysicalAggExpr",4619,12900],[6,"AnyValueBuffer",4622,12901],[6,"AnyValueBufferTrusted",4622,12901],[5,"Node",12902],[6,"IR",12903],[5,"Arena",12902],[6,"AExpr",12891],[10,"JoinDispatch",4734,12904],[5,"JoinArgs",4734,12905],[5,"StructNameSpace",4734,12906],[10,"SeriesTrait",12143,12784],[10,"DfTake",4734,12907],[10,"DataFrameOps",4734,12908],[5,"CsvReader",4734,12909],[10,"PhysicalIoExpr",12910],[10,"MmapBytesReader",12911],[10,"LhsNumOps",12650,12741],[6,"Selector",4734,12912],[10,"NumOpsDispatch",12650,12741],[5,"LazyGroupBy",4734,12881],[5,"OptFlags",4734,12913],[10,"Allocator",12914],[5,"JoinBuilder",4734,12881],[10,"AnonymousScan",4734,12915],[5,"ScanArgsAnonymous",4734,12916],[10,"FunctionOutputField",4734,12917],[5,"SpecialEq",4734,12917],[6,"VisitRecursion",12918],[6,"FunctionExpr",4734,12919],[10,"ArgAgg",4734,12920],[5,"ArrayNameSpace",4734,12921],[5,"ListNameSpace",4734,12922],[5,"FieldsMapper",4734,12923],[5,"IpcStreamReader",4734,12924],[10,"Read",12925],[10,"ColumnsUdf",4734,12917],[5,"DynamicDataProviderAnyMarkerWrap",12926],[10,"AsBinary",4734,12927],[10,"StringMethods",10897,12928],[5,"DowncastingAnyProvider",12926],[5,"BorrowedFd",12929],[10,"AsFd",12929],[10,"AsList",4734,12930],[10,"AsRawFd",12931],[6,"AggExpr",4734,12864],[10,"SeriesSealed",4734,12932],[10,"AsString",4734,12933],[20,"MaybeUninit",12934],[10,"StringNameSpaceImpl",4734,12935],[5,"OwnedBatchedCsvReader",4734,12936],[5,"CsvWriter",4734,12937],[5,"BatchedWriter",12937],[10,"Write",12925],[5,"IpcWriter",4734,12938],[5,"BatchedWriter",12938],[5,"ParquetReader",4734,12939],[5,"BatchedParquetReader",4734,12940],[5,"ParquetAsyncReader",4734,12939],[5,"ParquetWriter",4734,12941],[5,"BatchedWriter",12942],[5,"BatchedCsvReader",4734,12936],[5,"BinaryNameSpace",10720,12943],[6,"Operator",4734,12864],[5,"DataKey",12944],[10,"DataMarker",12945],[10,"BoundDataProvider",12946],[10,"RenameAliasFn",4734,12917],[10,"Service",12947],[5,"Request",12948],[5,"UserDefinedFunction",4734,12949],[10,"ColumnBinaryUdf",4734,12917],[5,"InProcessQuery",4734,12950],[5,"HashMap",12951],[5,"CategoricalNameSpace",4734,12952],[10,"RoundSeries",4734,12953],[10,"TemporalMethods",12031,12954],[10,"NumOpsDispatchChecked",12697,12760],[5,"LazyCsvReader",4734,12955],[5,"ScanArgsIpc",4734,12956],[5,"LazyJsonLineReader",4734,12957],[5,"ScanArgsParquet",4734,12958],[5,"RollingOptionsDynamicWindow",4734,12959],[5,"Bounds",4734,12960],[6,"ClosedWindow",4734,12961],[6,"Label",4734,12961],[6,"StartBy",4734,12961],[5,"Window",4734,12962],[6,"JoinCoalesce",4734,12905],[6,"JoinType",4734,12905],[6,"JoinValidation",4734,12905],[5,"AsOfOptions",4734,12963],[6,"AsofStrategy",4734,12963],[6,"InequalityOperator",4734,12964],[5,"IEJoinOptions",4734,12964],[6,"InterpolationMethod",4734,12965],[6,"ClosedInterval",4734,12966],[6,"RankMethod",4734,12967],[5,"RankOptions",4734,12967],[5,"CsvReadOptions",4734,12968],[5,"CsvParseOptions",4734,12968],[6,"CsvEncoding",4734,12968],[6,"CommentPrefix",4734,12968],[6,"NullValues",4734,12968],[5,"CsvWriterOptions",4734,12969],[5,"When",4734,12970],[5,"Then",4734,12970],[5,"ChainedWhen",4734,12970],[5,"ChainedThen",4734,12970],[5,"SerializeOptions",4734,12969],[6,"QuoteStyle",4734,12969],[5,"IpcScanOptions",4734,12971],[5,"IpcReadOptions",4734,12972],[5,"IpcWriterOptions",4734,12938],[6,"IpcCompression",4734,12938],[5,"JsonWriterOptions",4734,12973],[5,"ParquetOptions",4734,12974],[5,"StatisticsOptions",4734,12975],[6,"ParallelStrategy",4734,12974],[6,"LazySerde",4734,12864],[5,"ParquetWriteOptions",4734,12976],[6,"Excluded",4734,12864],[6,"ParquetCompression",4734,12976],[5,"GzipLevel",4734,12976],[5,"BrotliLevel",4734,12976],[5,"ZstdLevel",4734,12976],[6,"BooleanFunction",4734,12977],[5,"FileMetadata",4734,12978],[6,"CategoricalFunction",4734,12979],[6,"TemporalFunction",4734,12980],[6,"PowFunction",4734,12981],[6,"StringFunction",4734,12982],[6,"StructFunction",4734,12983],[5,"DatetimeArgs",4734,12984],[5,"DurationArgs",4734,12984],[5,"RollingCovOptions",4734,12985],[5,"StrptimeOptions",4734,12985],[5,"JoinOptions",4734,12985],[6,"WindowType",4734,12985],[6,"WindowMapping",4734,12985],[6,"NestedType",4734,12985],[5,"UnpivotArgsDSL",4734,12985],[6,"LiteralValue",4734,12986],[5,"AnonymousScanOptions",4734,12987],[5,"UnionArgs",4734,12987],[6,"DslPlan",4734,12988],[5,"RollingVarParams",4734,12895],[5,"RollingQuantileParams",4734,12895],[6,"NonExistent",4734,12989],[5,"Id",12990],[10,"Subscriber",12991],[10,"LazyFileListReader",4734,12992],[5,"CloudOptions",11034,12993],[10,"Ord",12857],[6,"ColumnOrder",12994],[6,"NullValuesCompiled",10587,12968],[10,"BinaryNameSpaceImpl",4734,12995],[10,"ObjectStore",12873],[5,"Path",12996],[10,"Future",12997],[5,"Pin",12998],[5,"JsonLineReader",4734,12999],[5,"IpcReaderAsync",4734,12972],[5,"FileMetadata",13000],[5,"RowGroupMetadata",13001],[10,"CrossJoin",4734,13002],[10,"ExprEvalExtension",4734,13003],[5,"Current",12990],[10,"DateMethods",10897,13004],[10,"DatetimeMethods",10897,13005],[10,"DurationMethods",10897,13006],[5,"IpcStreamWriterOption",4734,12924],[10,"BinaryUdfOutputField",4734,12917],[5,"CStr",13007],[10,"Default",13008],[10,"Stream",13009],[5,"ParquetStatistics",4734],[5,"ColumnChunkMetadata",13010],[10,"Deserialize",12819],[6,"NullBehavior",12703,13011],[5,"Weak",12789],[5,"DateLikeNameSpace",11577,13012],[5,"Metadata",13013],[10,"SeriesMethods",4734,13014],[10,"PartialEq",12857],[10,"Scalar",13015],[10,"ListNameSpaceExtension",4734,13016],[5,"Event",13017],[10,"Command",13018],[5,"PathBuf",12852],[10,"SerReader",4734,13019],[10,"SerWriter",4734,13019],[5,"IpcReader",4734,12971],[5,"IpcStreamWriter",4734,12924],[5,"JsonWriter",4734,12973],[5,"JsonReader",4734,12973],[10,"UdfSchema",4734,13020],[5,"MutableStatistics",13021],[6,"ListFunction",13022],[6,"RangeFunction",13023],[6,"BinaryFunction",13024],[6,"ArrayFunction",13025],[1,"never"],[5,"CString",13026],[10,"ToOwned",12751],[5,"OsString",12851],[5,"GrowableStruct",13027],[10,"SchemaExt",4734,13028],[10,"FromData",11571,13029],[5,"Buffer",13030],[10,"FromDataUtf8",11571,13029],[10,"FromDataBinary",11571,13029],[5,"ListArray",13031],[6,"Ambiguous",4734,12989],[10,"NamedFromOwned",4734,13032],[10,"DataFrameJoinOps",4734,13033],[5,"FunctionOptions",12987],[10,"PartialOrd",12857],[6,"Context",12988],[5,"GetOptions",12873],[5,"BoundsIter",4734,12962],[6,"ReaderBytes",12911],[10,"PolarsTemporalGroupby",4734,12880],[10,"Hash",12820],[10,"SeriesJoin",4734,13034],[10,"TimeMethods",10897,13035],[5,"NonZero",13036],[10,"IntoListNameSpace",4734,13016],[5,"BatchedParquetIter",12940],[5,"StructValueIter",13037],[17,"DataType"],[10,"SchemaNamesAndDtypes",4734,13028],[10,"AsofJoinBy",4734,13038],[10,"ListNameSpaceImpl",4734,13039],[5,"ExprNameNameSpace",4734,13040],[5,"KeyValue",13041],[10,"IntoLazy",4734,12881],[10,"Literal",4734,12986],[5,"Null",4734,12986],[5,"DataRequest",13042],[5,"DataResponse",13043],[5,"DataError",13044],[10,"KeyedDataMarker",12945],[10,"DataProvider",12946],[5,"AnyResponse",12926],[10,"AnyProvider",12926],[5,"BufferMarker",13045],[10,"BufferProvider",13045],[10,"DynamicDataProvider",12946],[10,"CloneToUninit",12777],[5,"SuperTypeOptions",13046],[5,"RowIndex",13047],[5,"LevelFilter",13013],[10,"ChunkAggSeries",4734,13048],[10,"QuantileAggSeries",4734,13049],[10,"IndexToUsize",4734,13050],[10,"NamedFrom",4734,13032],[6,"RowGroupFetcher",12940],[5,"Attributes",12990],[6,"ScanSources",13051],[5,"SplitNChars",4734,13052],[5,"AnonymousScanArgs",4734,12915],[5,"Request",12840],[5,"PutPayload",13053],[5,"PutMultipartOpts",12873],[5,"PutOptions",12873],[10,"SeriesRank",4734,12967],[5,"BorrowedCursor",13054],[10,"VarInt",13055],[5,"IoSliceMut",12925],[5,"Record",12990],[5,"Interest",12991],[10,"SeriesOpsTime",10897,13056],[10,"PolarsRound",4734,13057],[10,"ChunkedSet",4734,12794],[5,"SchemaDescriptor",13058],[6,"SeekFrom",12925],[10,"Serialize",12795],[5,"LocalFutureObj",13059],[5,"SpawnError",13060],[10,"LocalSpawn",13060],[5,"FutureObj",13059],[10,"Spawn",13060],[10,"VarAggSeries",4734,13061],[5,"StringNameSpace",13062],[10,"TakeChunked",4734,12907],[5,"IRPlan",12903],[10,"ToDummies",4734,13063],[10,"PolarsTruncate",4734,13064],[5,"FileMetaData",13041],[5,"AllocError",12914],[5,"SchemaInferenceResult",11998,13065],[10,"PolarsUpsample",4734,13066],[10,"VecHash",4734,13067],[6,"JsonFormat",4734,12973],[5,"BTreeMap",13068],[10,"WriteDataFrameToFile",13019],[10,"Writeable",13069],[10,"Write",12768],[10,"PartsWrite",13069],[5,"IoSlice",12925],[5,"LengthHint",13069],[5,"CountLines",10587,13070],[6,"PrefilterMaskSetting",10630,12940],[5,"MemSlice",13071],[6,"Filter",13072],[10,"ArrayNameSpace",10701,13073],[10,"AsArray",10701,13074],[6,"Buffer",10737,13075],[6,"DynByteSourceBuilder",10815,13076],[6,"DynByteSource",10815,13076],[5,"ObjectStoreByteSource",10815,13076],[5,"MemSliceByteSource",10815,13076],[10,"ByteSource",10815,13076],[10,"AsString",10963,12928],[6,"Pattern",10963,13077],[5,"DatetimeInfer",11003,13078],[10,"StrpTimeParser",11003,13078],[17,"Error"],[10,"TryFromWithUnit",11003,13078],[5,"CloudLocation",11034,13079],[5,"PolarsObjectStore",11034,13080],[5,"File",13081],[5,"CloudWriter",11034,13082],[6,"CloudType",11034,12993],[5,"Url",13083],[5,"Bytes",13084],[10,"TryFrom",12771],[10,"Eq",12857],[5,"ObjectMeta",12873],[6,"PlCredentialProvider",11164,13085],[5,"CredentialProviderFunction",11164,13085],[6,"SupportedCompression",11241,13086],[5,"AnonymousBuilder",11632,13087],[6,"RollingFunction",11878,13088],[6,"RollingFunctionBy",11911,13089],[5,"MutableNullArray",11958,13090],[5,"MutableBitmap",13091],[10,"AsSeries",12031,12954],[5,"Utf8Array",13092],[5,"_SerdeSeries",12757],[5,"SeriesIter",12143,13093],[5,"Rc",13094],[6,"NumericListOp",12650,13095],[8,"FillNullLimit",1700],[10,"InitHashMaps",2036],[10,"InitHashMaps2",2036],[5,"TrueT",2036],[8,"PolarsResult",3659],[15,"IO",10567],[15,"Context",10567],[15,"Count",10561],[15,"Slice",10562],[8,"OpaqueColumnUdf",4734],[8,"QuantileInterpolOptions",4734],[8,"ChunkJoinOptIds",4734],[10,"ListFromIter",4734],[15,"Quantile",10443],[15,"Min",10443],[15,"Max",10443],[15,"IsBetween",11831],[15,"Any",11831],[15,"All",11831],[15,"GroupBy",10453],[15,"Union",10453],[15,"Sort",10453],[15,"Scan",10453],[15,"ExtContext",10453],[15,"DataFrameScan",10453],[15,"IR",10453],[15,"Select",10453],[15,"HStack",10453],[15,"MapFunction",10453],[15,"Cache",10453],[15,"Filter",10453],[15,"Distinct",10453],[15,"Slice",10453],[15,"Sink",10453],[15,"Join",10453],[15,"HConcat",10453],[15,"SortBy",10504],[15,"Filter",10504],[15,"Cast",10504],[15,"Sort",10504],[15,"Gather",10504],[15,"RenameAlias",10504],[15,"Ternary",10504],[15,"Function",10504],[15,"Window",10504],[15,"AnonymousFunction",10504],[15,"Slice",10504],[15,"BinaryExpr",10504],[15,"Round",11834],[15,"RoundSF",11834],[15,"Clip",11834],[15,"BackwardFill",11834],[15,"ForwardFill",11834],[15,"Random",11834],[15,"GatherEvery",11834],[15,"ValueCounts",11834],[15,"Rank",11834],[15,"ReplaceStrict",11834],[15,"CumCount",11834],[15,"CumSum",11834],[15,"CumProd",11834],[15,"CumMin",11834],[15,"CumMax",11834],[15,"Range",10564],[15,"ConcatHorizontal",11856],[15,"ConcatVertical",11856],[15,"ExtractGroups",11856],[15,"SplitExact",11856],[15,"Contains",11856],[15,"Find",11856],[15,"Replace",11856],[15,"DatetimeFunction",11870],[5,"Utf8Field",10737],[5,"CategoricalField",10737],[5,"DatetimeField",10737],[15,"Datetime",10812],[6,"ObjectStoreCredential",11164],[10,"Utf8FromIter",12139],[10,"BinaryFromIter",12139]],"r":[[1,13096],[2,13096],[3,13096],[4,13096],[6,12865],[7,13096],[8,13096],[9,13096],[13,13096],[14,13096],[16,12865],[17,12734],[18,12734],[19,12734],[24,13097],[117,12734],[141,12734],[142,12734],[170,12734],[172,12734],[227,12734],[281,12734],[427,12734],[474,12734],[582,12734],[585,12734],[739,12734],[870,12805],[898,12806],[899,12806],[900,12813],[901,12813],[902,12815],[903,12810],[904,12811],[905,12807],[906,12809],[907,12812],[908,12808],[909,12811],[910,12810],[911,12816],[912,12817],[913,12813],[1050,12810],[1066,12809],[1094,12810],[1159,12806],[1160,12806],[1161,12811],[1162,12807],[1163,12809],[1164,12812],[1165,12808],[1166,12811],[1174,12809],[1176,12759],[1207,12821],[1208,12821],[1221,12822],[1223,12823],[1224,12823],[1227,12785],[1228,12785],[1229,12785],[1230,12785],[1266,12785],[1282,13098],[1283,13098],[1289,12788],[1294,12765],[1295,12827],[1296,12826],[1297,12765],[1298,12765],[1299,12765],[1300,12787],[1301,12758],[1570,12743],[1571,12743],[1572,12743],[1573,12743],[1585,12743],[1616,12743],[1617,13099],[1647,12834],[1671,12835],[1672,12835],[1673,12835],[1674,12835],[1687,12835],[1688,12835],[1689,12835],[1692,12835],[1694,12835],[1701,12836],[1702,12836],[1703,12836],[1704,12836],[1705,12836],[1706,12836],[1707,12836],[1708,12836],[1709,12836],[1710,12836],[1711,12836],[1712,12836],[1713,12836],[1714,12836],[1715,12836],[1716,12836],[1717,12836],[1718,12836],[1719,12836],[1720,12836],[1721,12836],[1722,12836],[1723,12836],[1724,12836],[1725,12836],[1726,12836],[1727,12836],[1728,12836],[1729,12836],[1732,12836],[1733,12836],[1743,12836],[1744,12837],[1746,12756],[1747,12756],[1762,12836],[1810,12836],[1813,12836],[1822,12836],[1825,12836],[1869,12836],[1872,12836],[1881,12836],[1918,12836],[1920,12838],[1924,12838],[1925,12838],[1926,12838],[1927,12838],[1928,12838],[1929,12838],[1930,12838],[1931,12838],[1932,12838],[1933,12838],[1934,12838],[1935,12838],[1936,12838],[1937,12838],[1938,12838],[1939,12838],[1940,12838],[1941,12838],[1942,12838],[1943,12838],[1944,12838],[1945,12838],[1946,12838],[1947,12838],[1948,12838],[1949,12838],[1950,12838],[1951,12838],[1952,12838],[1953,12838],[1954,12838],[1955,12838],[1956,13100],[1957,13100],[1958,13101],[1959,13101],[1960,13101],[1961,13102],[1962,13102],[1963,13102],[1964,13102],[1965,13102],[1966,13102],[1967,13102],[1968,13102],[1969,13102],[1973,12843],[1975,12843],[1995,12843],[2002,12837],[2003,13103],[2004,13103],[2005,13103],[2006,13103],[2009,13104],[2010,12837],[2011,12756],[2012,12756],[2025,13105],[2026,13106],[2027,13106],[2028,13106],[2029,13105],[2030,13105],[2031,13107],[2032,13105],[2033,13106],[2034,13106],[2035,13106],[2037,12779],[2041,12733],[2042,12850],[2043,12850],[2044,12850],[2045,12831],[2047,12754],[2051,12733],[2053,12733],[2054,12733],[2056,12733],[2061,12733],[2062,12733],[2063,12848],[2066,12848],[2067,12849],[2068,12855],[2069,12854],[2071,12733],[2072,12754],[2073,12754],[2074,12754],[2075,12754],[2080,13108],[2081,12733],[2084,13109],[2086,12733],[2091,13110],[2092,12733],[2094,12856],[2098,13111],[2099,12733],[2106,12733],[2107,12791],[2108,12791],[2111,12733],[2117,12733],[2118,12733],[2122,12733],[2123,12733],[2124,12779],[2126,12855],[2130,13112],[2131,13050],[2132,13112],[2133,13112],[2135,13113],[2136,13112],[2138,12733],[2139,12733],[2143,12733],[2144,12733],[2148,12733],[2149,12733],[2153,12733],[2154,12733],[2158,12733],[2159,12733],[2161,12863],[2172,12733],[2173,12733],[2175,12782],[2176,12782],[2188,12733],[2191,12733],[2193,12733],[2194,12779],[2198,13113],[2199,13113],[2200,13112],[2201,13113],[2202,13113],[2203,13113],[2204,12749],[2205,12733],[2206,12733],[2207,12733],[2208,12733],[2210,12856],[2211,12854],[2214,12839],[2218,12733],[2220,12733],[2225,12733],[2230,13114],[2231,12733],[2232,12783],[2233,12754],[2236,12733],[2240,12733],[2241,12733],[2245,12733],[2246,12733],[2250,12733],[2251,12733],[2255,12733],[2256,12733],[2260,12754],[2443,12855],[2457,12782],[2590,12754],[2780,12782],[3185,12855],[3186,12855],[3192,12754],[3597,12848],[3598,12848],[3599,12849],[3600,12855],[3601,12854],[3603,12855],[3607,12854],[3608,12855],[3610,12855],[3611,12855],[3612,12848],[3613,12848],[3614,12854],[3619,12854],[3620,12865],[3626,12865],[3629,12865],[3637,12865],[3639,12866],[3665,12735],[3672,12735],[3673,12735],[3674,12867],[3691,12735],[3704,12735],[3721,12867],[3728,12735],[3730,12735],[3731,12735],[3732,12735],[3733,12735],[3734,12867],[3735,12735],[3757,13115],[3758,13115],[3759,13115],[3761,12804],[3766,12804],[3767,12804],[3769,12804],[3770,12804],[3814,12804],[3854,12804],[3887,12804],[3960,12804],[4051,12757],[4052,12757],[4055,12886],[4334,12888],[4365,12742],[4368,12879],[4369,12879],[4371,12742],[4372,12742],[4373,12742],[4374,12742],[4375,12742],[4376,12742],[4379,12742],[4381,12892],[4393,12742],[4402,12879],[4473,12879],[4483,12879],[4606,12898],[4607,12899],[4608,12899],[4609,12899],[4610,12899],[4611,12899],[4612,12899],[4613,12899],[4614,12899],[4615,12899],[4619,12900],[4624,12901],[4625,12901],[4645,12878],[4679,12878],[4700,12878],[4714,12878],[4715,12878],[4716,12878],[4732,13116],[4733,13117],[4737,12864],[4744,12913],[4746,12989],[4749,12915],[4750,12915],[4751,12987],[4758,12779],[4760,12789],[4761,12920],[4764,12805],[4769,12733],[4770,12850],[4772,12850],[4773,12850],[4774,12921],[4775,12745],[4776,12831],[4778,13118],[4780,12927],[4781,12930],[4783,12963],[4784,12754],[4785,12933],[4787,12963],[4788,13038],[4789,12963],[4792,13119],[4798,12936],[4799,12940],[4804,12733],[4805,12813],[4808,12995],[4810,12733],[4811,12733],[4813,12733],[4814,12917],[4821,12733],[4822,12815],[4823,12977],[4824,12733],[4825,12742],[4828,12960],[4829,12962],[4831,12976],[4842,12848],[4846,12848],[4847,12849],[4848,12979],[4849,12855],[4850,12952],[4851,12854],[4853,12733],[4857,12970],[4858,12970],[4859,12836],[4860,13048],[4861,12836],[4862,12836],[4863,12836],[4864,12836],[4865,12836],[4866,12836],[4867,12836],[4868,12836],[4869,12836],[4870,12836],[4871,12836],[4872,12836],[4873,12836],[4874,12836],[4875,12796],[4876,12905],[4877,12836],[4878,12836],[4879,12836],[4880,12836],[4881,12836],[4882,12836],[4883,12836],[4884,12836],[4885,12836],[4886,12836],[4887,12836],[4888,12836],[4889,12734],[4890,12810],[4891,12821],[4892,12821],[4893,12794],[4895,12966],[4896,12961],[4899,12757],[4901,12917],[4905,12917],[4907,12968],[4908,12754],[4920,13002],[4921,12968],[4922,12968],[4923,12968],[4924,12909],[4925,12937],[4926,12969],[4933,12754],[4934,12754],[4935,12804],[4936,13033],[4937,12908],[4941,12754],[4949,13108],[4950,13004],[4952,12733],[4956,12984],[4957,13109],[4959,13005],[4961,12733],[4968,13110],[4969,12733],[4973,12907],[4976,12856],[4981,12988],[4985,12885],[4991,12984],[4992,13111],[4993,13006],[4994,12733],[4995,12880],[5009,12864],[5013,12864],[5014,13003],[5015,13040],[5024,13119],[5025,13119],[5026,12733],[5027,12791],[5031,12791],[5032,12923],[5033,13040],[5034,12978],[5035,13120],[5037,12836],[5038,12836],[5048,12733],[5056,12733],[5057,12733],[5062,12733],[5063,12733],[5071,13029],[5072,13029],[5073,13029],[5077,12919],[5078,12917],[5082,12779],[5084,12917],[5086,12855],[5087,12879],[5089,12879],[5091,12742],[5092,12742],[5093,12742],[5094,12742],[5095,12742],[5096,12742],[5103,12976],[5114,13112],[5116,12964],[5117,13119],[5123,13050],[5124,13112],[5125,12742],[5126,12796],[5127,13112],[5130,12950],[5132,12883],[5133,13050],[5134,12964],[5136,13113],[5137,13112],[5139,12905],[5142,12733],[5143,12733],[5148,12733],[5149,12733],[5154,12733],[5155,12733],[5160,12733],[5161,12733],[5166,12733],[5167,12733],[5170,12965],[5173,12757],[5174,12892],[5175,12881],[5176,13016],[5177,12863],[5178,12882],[5179,12844],[5181,12938],[5182,12972],[5183,12971],[5184,12972],[5185,12971],[5186,12924],[5187,12924],[5188,12924],[5189,12938],[5190,12938],[5193,12836],[5197,12836],[5212,12905],[5213,12881],[5214,12905],[5215,12904],[5216,12985],[5218,12905],[5219,12905],[5222,12973],[5223,12999],[5225,12973],[5226,12973],[5227,12973],[5231,12961],[5233,13121],[5235,13121],[5236,13121],[5242,12955],[5243,12992],[5244,12881],[5245,12881],[5246,12957],[5247,12864],[5254,12905],[5259,12741],[5266,12811],[5267,12807],[5268,12809],[5269,12733],[5271,13122],[5272,12922],[5273,13016],[5274,13039],[5275,12808],[5276,12811],[5277,12733],[5278,12986],[5280,12986],[5282,12782],[5285,12782],[5338,12986],[5343,13032],[5344,13032],[5357,12985],[5359,12810],[5361,12844],[5362,12989],[5373,12986],[5381,12968],[5382,12796],[5383,12796],[5384,12741],[5385,12760],[5386,12733],[5389,12733],[5391,12733],[5396,12864],[5397,12864],[5398,12913],[5407,12936],[5408,12779],[5410,13123],[5413,12974],[5414,12939],[5415,12976],[5416,12974],[5417,12939],[5419,12976],[5420,12941],[5424,13113],[5425,13113],[5426,13112],[5427,13113],[5428,13113],[5429,13113],[5430,12749],[5432,12733],[5433,12735],[5434,12733],[5435,12733],[5436,12785],[5437,12733],[5438,12743],[5439,12735],[5440,13057],[5441,12880],[5442,13064],[5444,13066],[5446,12981],[5449,12817],[5453,13049],[5454,12792],[5455,12792],[5457,12969],[5466,12967],[5467,12967],[5468,12836],[5470,12917],[5479,12856],[5480,12854],[5490,12985],[5493,12895],[5494,12880],[5495,12959],[5496,12793],[5497,12895],[5498,13124],[5499,12895],[5504,12953],[5505,13125],[5513,12786],[5517,12916],[5518,12956],[5519,12958],[5520,13028],[5521,13028],[5524,13028],[5525,13028],[5526,12843],[5530,12912],[5533,13019],[5534,13019],[5535,12969],[5536,12737],[5539,13034],[5540,13014],[5541,13056],[5542,12967],[5543,12932],[5544,12784],[5557,12837],[5558,12742],[5564,12756],[5565,12756],[5566,12917],[5571,13052],[5573,12961],[5575,12839],[5576,12975],[5584,12865],[5586,12733],[5587,12813],[5589,12982],[5590,12928],[5591,12935],[5593,12733],[5600,12985],[5604,12884],[5605,13097],[5608,12983],[5609,12906],[5611,12733],[5621,12907],[5623,12980],[5624,12954],[5626,12970],[5634,13114],[5635,13035],[5637,12733],[5638,12783],[5639,12754],[5643,13063],[5657,12733],[5664,12733],[5665,12733],[5670,12733],[5671,12733],[5676,12733],[5677,12733],[5682,12733],[5683,12733],[5684,13126],[5685,13020],[5689,12987],[5692,12804],[5695,12754],[5696,12985],[5697,12888],[5700,12949],[5710,13061],[5711,13067],[5715,12970],[5717,12962],[5720,12985],[5721,12985],[5731,12976],[5829,13127],[5832,13128],[5835,13129],[5836,13127],[5849,13130],[5860,12879],[5862,13131],[5865,13132],[5879,13132],[5890,13133],[5896,13134],[5897,13119],[5903,13135],[5916,13136],[5921,13136],[5924,12836],[5934,13137],[5962,13138],[5966,13139],[5970,13140],[5979,13134],[5981,12970],[6255,13128],[6257,13126],[6266,12855],[6271,13139],[6282,13134],[6296,13141],[6299,13142],[6301,13142],[6303,13142],[6601,13143],[6609,13132],[6613,13144],[6614,13131],[6616,13145],[6629,13131],[6634,13119],[6640,13126],[6644,13145],[6646,13146],[6649,13145],[6650,13145],[6651,13146],[6652,13146],[6661,13122],[6662,13147],[6670,13148],[6671,13070],[6673,13070],[6674,13148],[6675,12754],[6677,12940],[6682,13149],[6684,13132],[6685,13149],[6687,13149],[6689,13149],[6691,13132],[6692,13149],[6698,13096],[6700,13135],[6701,13137],[6702,12984],[6704,13135],[6705,13135],[6706,13106],[6707,13106],[6708,13106],[6777,13122],[6778,12904],[7053,13021],[7133,13096],[7135,13150],[7288,13151],[7289,13134],[7298,13131],[7299,13131],[7301,12984],[7310,12885],[7311,12885],[7312,13028],[7580,13152],[7581,13152],[7591,13123],[7592,13123],[7593,13123],[7600,12879],[7621,12836],[7659,13134],[7664,13122],[7668,12836],[7673,13153],[7781,12879],[7785,13132],[7789,13146],[8029,12836],[8039,13134],[8041,12836],[8067,13123],[8080,13119],[8092,12961],[8093,12961],[8178,13154],[8189,13155],[8190,13156],[8191,13156],[8193,13157],[8205,13131],[8208,13050],[8209,13065],[8350,13135],[8351,13135],[8352,13158],[8353,12965],[8355,13158],[8356,13159],[8515,12966],[8517,13123],[8526,13160],[8532,13161],[8535,13162],[8544,13139],[8547,13139],[8554,13147],[8555,13147],[8591,13134],[8600,13148],[8601,13148],[8609,13134],[8623,12986],[8676,12855],[8677,12855],[8682,13133],[8693,13134],[8696,13134],[8705,13163],[8706,13119],[8708,13139],[8720,13139],[8726,13139],[8736,12754],[8747,13139],[8768,13137],[8806,13137],[8817,13164],[8818,13165],[8866,13166],[8891,13139],[8896,13134],[8897,13122],[8934,13119],[8952,12735],[8953,12735],[8954,12735],[8955,12735],[8960,13167],[8961,13033],[8974,13139],[9010,13132],[9018,12973],[9024,13168],[9025,13169],[9027,13170],[9034,13170],[9035,13170],[9037,13156],[9039,13123],[9094,12836],[9133,13128],[9137,12836],[9229,13141],[9284,12836],[9306,13052],[9308,13052],[9329,13154],[9339,13137],[9340,13171],[9342,13171],[9344,13171],[9346,13171],[9348,13171],[9363,13139],[9388,12970],[9392,13135],[9542,13148],[9543,13148],[9861,12940],[10006,13134],[10014,13172],[10034,13122],[10203,12970],[10427,13173],[10441,12836],[10590,13070],[10591,12968],[10597,13174],[10609,13174],[10618,12909],[10619,13174],[10627,13075],[10633,12940],[10636,12940],[10640,13163],[10645,13175],[10647,13176],[10652,12898],[10653,12899],[10654,12899],[10655,12899],[10656,12899],[10657,12899],[10658,12899],[10659,12899],[10660,12899],[10661,12899],[10665,12838],[10669,12838],[10670,12838],[10671,12838],[10672,12838],[10673,12838],[10674,12838],[10675,12838],[10676,12838],[10677,12838],[10678,12838],[10679,12838],[10680,12838],[10681,12838],[10682,12838],[10683,12838],[10684,12838],[10685,12838],[10686,12838],[10687,12838],[10688,12838],[10689,12838],[10690,12838],[10691,12838],[10692,12838],[10693,12838],[10694,12838],[10695,12838],[10696,12838],[10697,12838],[10698,12838],[10699,12838],[10700,12838],[10701,13073],[10702,13074],[10720,12943],[10738,13075],[10740,13075],[10743,13075],[10757,13075],[10789,13075],[10807,13075],[10815,13076],[10817,13076],[10818,13076],[10820,13076],[10823,13076],[10896,12952],[10897,13004],[10898,13005],[10899,13006],[10900,12959],[10901,13056],[10902,12928],[10903,13035],[10956,13177],[10963,12928],[10969,13077],[10970,12928],[10994,12928],[11003,13078],[11005,13078],[11006,13078],[11017,13078],[11036,13079],[11037,12993],[11038,12993],[11039,13082],[11044,13080],[11045,13080],[11060,13178],[11067,13179],[11112,13079],[11130,13178],[11131,13179],[11164,13085],[11166,13085],[11168,13085],[11169,13085],[11233,12993],[11234,12993],[11242,13086],[11254,13086],[11260,12779],[11264,12733],[11265,12850],[11266,12850],[11267,12850],[11268,12831],[11270,12754],[11274,12733],[11276,12733],[11277,12733],[11279,12733],[11284,12733],[11285,12733],[11286,12848],[11289,12848],[11290,12849],[11291,12855],[11292,12854],[11294,12733],[11295,12754],[11296,12754],[11297,12754],[11298,12754],[11303,13108],[11304,12733],[11307,13109],[11309,12733],[11314,13110],[11315,12733],[11317,12856],[11321,13111],[11322,12733],[11327,12733],[11328,12791],[11329,12791],[11332,12733],[11338,12733],[11339,12733],[11343,12733],[11344,12733],[11345,12779],[11347,12855],[11351,13112],[11352,13050],[11353,13112],[11354,13112],[11356,13113],[11357,13112],[11359,12733],[11360,12733],[11364,12733],[11365,12733],[11369,12733],[11370,12733],[11374,12733],[11375,12733],[11379,12733],[11380,12733],[11382,12863],[11393,12733],[11394,12733],[11396,12782],[11397,12782],[11409,12733],[11412,12733],[11414,12733],[11415,12779],[11419,13113],[11420,13113],[11421,13112],[11422,13113],[11423,13113],[11424,13113],[11425,12749],[11426,12733],[11427,12733],[11428,12733],[11429,12733],[11431,12856],[11432,12854],[11435,12839],[11439,12733],[11441,12733],[11446,12733],[11451,13114],[11452,12733],[11453,12783],[11454,12754],[11457,12733],[11461,12733],[11462,12733],[11466,12733],[11467,12733],[11471,12733],[11472,12733],[11476,12733],[11477,12733],[11481,12754],[11494,12855],[11497,12782],[11502,12754],[11505,12782],[11520,12855],[11521,12855],[11522,12754],[11540,12848],[11541,12848],[11542,12849],[11543,12855],[11544,12854],[11546,12855],[11550,12854],[11551,12855],[11553,12855],[11554,12855],[11555,12848],[11556,12848],[11557,12854],[11562,12854],[11563,12865],[11564,12865],[11565,12865],[11566,12865],[11567,12866],[11568,13156],[11569,13156],[11570,13156],[11571,13029],[11572,13029],[11573,13029],[11577,13012],[11629,12900],[11632,13087],[11652,13100],[11653,13100],[11669,12977],[11672,12979],[11712,12919],[11755,12981],[11788,12982],[11796,12983],[11801,12980],[11827,12919],[11828,12919],[11829,12919],[11830,12919],[11872,12979],[11876,12981],[11882,13088],[11915,13089],[11944,13101],[11945,13101],[11946,13101],[11947,12965],[11950,12965],[11951,13159],[11952,13180],[11953,13181],[11954,13181],[11955,13181],[11956,13181],[11957,13181],[11958,13090],[11989,13102],[11990,13102],[11991,13102],[11992,13102],[11993,13102],[11994,13102],[11995,13102],[11996,13102],[11997,13102],[11998,13065],[12009,13065],[12014,13065],[12015,13065],[12028,12843],[12029,12843],[12030,12843],[12031,12954],[12032,12954],[12053,12837],[12054,13103],[12055,13103],[12056,13103],[12057,13103],[12060,13104],[12061,12837],[12062,12756],[12063,12756],[12076,12933],[12077,13052],[12078,12935],[12088,13152],[12089,13152],[12099,13154],[12107,13052],[12109,13052],[12113,13154],[12119,13171],[12121,13171],[12123,13171],[12125,13171],[12127,13171],[12133,12949],[12139,13182],[12140,13182],[12144,12784],[12145,12836],[12147,12882],[12148,12784],[12152,12737],[12153,13093],[12154,13093],[12155,12784],[12166,12737],[12174,12737],[12374,12737],[12499,12737],[12626,12752],[12627,12752],[12653,12741],[12655,12741],[12656,12741],[12657,13095],[12662,12741],[12668,12741],[12697,12760],[12698,12760],[12705,13011]],"b":[[29,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[30,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[31,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[32,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[33,"impl-Add-for-%26ChunkedArray%3CT%3E"],[34,"impl-Add-for-ChunkedArray%3CT%3E"],[35,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[36,"impl-Add-for-ChunkedArray%3CStringType%3E"],[37,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[38,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[39,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[40,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[42,"impl-AggList-for-ChunkedArray%3CListType%3E"],[43,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[44,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[46,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[47,"impl-AggList-for-ChunkedArray%3CT%3E"],[48,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[49,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[52,"impl-ChunkedArray%3CListType%3E"],[53,"impl-ChunkedArray%3CFixedSizeListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[59,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[60,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[61,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[62,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[63,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[64,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[66,"impl-ChunkedArray%3CListType%3E"],[67,"impl-ChunkedArray%3CFixedSizeListType%3E"],[69,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[73,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[79,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[80,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[81,"impl-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkedArray%3CStringType%3E"],[83,"impl-ChunkedArray%3CT%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkedArray%3CFixedSizeListType%3E"],[87,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[88,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[89,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[90,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[91,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[92,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[93,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[94,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[95,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[96,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[97,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[98,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[101,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[102,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[103,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[104,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[105,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[106,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[107,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[108,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[109,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[110,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[111,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[116,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[119,"impl-ChunkedArray%3CStringType%3E"],[120,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[131,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[132,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[135,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[152,"impl-ChunkedArray%3CStructType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[162,"impl-ChunkedArray%3CT%3E"],[163,"impl-Container-for-ChunkedArray%3CT%3E"],[183,"impl-Div-for-%26ChunkedArray%3CT%3E"],[184,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[185,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[186,"impl-Div-for-ChunkedArray%3CT%3E"],[193,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[194,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[195,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[196,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[197,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[198,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[199,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[200,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[201,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[202,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[203,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[204,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[205,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[206,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[207,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[208,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[209,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[210,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[211,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[212,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[213,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[214,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[218,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[220,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[221,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[222,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[223,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[224,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[228,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[229,"impl-Debug-for-ChunkedArray%3CListType%3E"],[230,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[231,"impl-Debug-for-ChunkedArray%3CT%3E"],[232,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[233,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[234,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[236,"impl-ChunkedArray%3CListType%3E"],[237,"impl-ChunkedArray%3CFixedSizeListType%3E"],[246,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[247,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[248,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[249,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[250,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[251,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[252,"impl-FromIterator%3COption%3CColumn%3E%3E-for-ChunkedArray%3CListType%3E"],[253,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[254,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[255,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[256,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[257,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[258,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[259,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[260,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[261,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[262,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[263,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[264,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[265,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[266,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[267,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[268,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[269,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[270,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[271,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[272,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[273,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[274,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[275,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[277,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[278,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[279,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[282,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[283,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[284,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[285,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[286,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[287,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[288,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[289,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[292,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[293,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[294,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[295,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[296,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[297,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[298,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[299,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[301,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[302,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[303,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[306,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[307,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[308,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[309,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[310,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[311,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[312,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[313,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[320,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[321,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[322,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[324,"impl-ChunkedArray%3CFixedSizeListType%3E"],[325,"impl-ChunkedArray%3CListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[342,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[343,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[344,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[345,"impl-ChunkedArray%3CFixedSizeListType%3E"],[346,"impl-ChunkedArray%3CListType%3E"],[350,"impl-ChunkedArray%3CFixedSizeListType%3E"],[351,"impl-ChunkedArray%3CListType%3E"],[360,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[361,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[362,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[363,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[368,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[369,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[370,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[371,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[373,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[374,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[375,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[376,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[377,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[378,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[379,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[380,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[381,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[382,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[383,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[384,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[385,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[386,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[392,"impl-ChunkedArray%3CListType%3E"],[393,"impl-ChunkedArray%3CFixedSizeListType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[408,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[409,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[410,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[412,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[413,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-Container-for-ChunkedArray%3CT%3E"],[439,"impl-ChunkedArray%3CT%3E"],[444,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[445,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[446,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[447,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[448,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[449,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[450,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[451,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[452,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[453,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[454,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[455,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[456,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[457,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[458,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[459,"impl-ChunkedArray%3CBooleanType%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[462,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[464,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[465,"impl-ChunkedArray%3CBooleanType%3E"],[466,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[467,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[468,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[470,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[471,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[472,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[480,"impl-ChunkedArray%3CBooleanType%3E"],[481,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[485,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[486,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[487,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[488,"impl-ChunkedArray%3CT%3E"],[489,"impl-ChunkedArray%3CBooleanType%3E"],[490,"impl-Mul-for-ChunkedArray%3CT%3E"],[491,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[492,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[493,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[496,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[497,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[498,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[500,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[501,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[502,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[503,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[506,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[507,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[508,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[509,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[511,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[513,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[514,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[515,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[517,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[519,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[520,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[523,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[524,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[525,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[528,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[529,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[530,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[531,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[532,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[533,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[534,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[535,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[536,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[537,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[538,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[539,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[540,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[541,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[543,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[544,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[545,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[546,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[547,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[548,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[549,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[550,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[551,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[557,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[558,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[559,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[560,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[561,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[562,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[563,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[564,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[565,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[566,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[567,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[568,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[569,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[570,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[571,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[572,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[573,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[574,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[575,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[576,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[577,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[578,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[583,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[584,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[586,"impl-ChunkedArray%3CStringType%3E"],[587,"impl-ChunkedArray%3CListType%3E"],[588,"impl-ChunkedArray%3CStringType%3E"],[589,"impl-ChunkedArray%3CListType%3E"],[592,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[593,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[594,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[595,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[596,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[597,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[628,"impl-Rem-for-ChunkedArray%3CT%3E"],[629,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[630,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[631,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[637,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[638,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[639,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[640,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[641,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[646,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[647,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[648,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[649,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[650,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[651,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[652,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[653,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[654,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[655,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[656,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[657,"impl-Serialize-for-ChunkedArray%3CStringType%3E"],[658,"impl-Serialize-for-ChunkedArray%3CBinaryType%3E"],[659,"impl-Serialize-for-ChunkedArray%3CStructType%3E"],[660,"impl-Serialize-for-ChunkedArray%3CT%3E"],[661,"impl-Serialize-for-ChunkedArray%3CFixedSizeListType%3E"],[662,"impl-Serialize-for-ChunkedArray%3CBooleanType%3E"],[663,"impl-Serialize-for-ChunkedArray%3CListType%3E"],[664,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[665,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[666,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[667,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[673,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[674,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[675,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[676,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[677,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[678,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[679,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[680,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[681,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[682,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[683,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[684,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[685,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[686,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[687,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[688,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[689,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[691,"impl-Container-for-ChunkedArray%3CT%3E"],[692,"impl-ChunkedArray%3CT%3E"],[693,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[694,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[695,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[696,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[697,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[698,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[699,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[700,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[701,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[702,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[703,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[704,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[705,"impl-ChunkedArray%3CT%3E"],[706,"impl-Container-for-ChunkedArray%3CT%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[709,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[710,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[712,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[713,"impl-Sub-for-ChunkedArray%3CT%3E"],[714,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[715,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[717,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[718,"impl-ChunkedArray%3CBooleanType%3E"],[719,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[723,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[724,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[727,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[728,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[729,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[730,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[731,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[732,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[733,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[734,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[735,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[736,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[737,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[738,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[743,"impl-ChunkedArray%3CListType%3E"],[744,"impl-ChunkedArray%3CFixedSizeListType%3E"],[745,"impl-ChunkedArray%3CListType%3E"],[746,"impl-ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[752,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[753,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[754,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[755,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[756,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[758,"impl-ChunkedArray%3CFixedSizeListType%3E"],[759,"impl-ChunkedArray%3CListType%3E"],[773,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[774,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[775,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[776,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[777,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[783,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[784,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[785,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[795,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[799,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[801,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[802,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[804,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[805,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[806,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[807,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[808,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[810,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[811,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[813,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[814,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[815,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[816,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[817,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[861,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[862,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[863,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[864,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[868,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[869,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[1045,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1046,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1322,"impl-MetadataProperties"],[1323,"impl-Flags-for-MetadataProperties"],[1324,"impl-Flags-for-MetadataFlags"],[1325,"impl-MetadataFlags"],[1389,"impl-Metadata%3CT%3E"],[1390,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1415,"impl-Debug-for-MetadataProperties"],[1416,"impl-UpperHex-for-MetadataProperties"],[1417,"impl-Octal-for-MetadataProperties"],[1418,"impl-Binary-for-MetadataProperties"],[1419,"impl-LowerHex-for-MetadataProperties"],[1420,"impl-Debug-for-MetadataFlags"],[1421,"impl-LowerHex-for-MetadataFlags"],[1422,"impl-Binary-for-MetadataFlags"],[1423,"impl-Octal-for-MetadataFlags"],[1424,"impl-UpperHex-for-MetadataFlags"],[1434,"impl-MetadataProperties"],[1435,"impl-Flags-for-MetadataProperties"],[1436,"impl-MetadataFlags"],[1437,"impl-Flags-for-MetadataFlags"],[1448,"impl-Metadata%3CT%3E"],[1449,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1492,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1493,"impl-Metadata%3CT%3E"],[1497,"impl-Metadata%3CT%3E"],[1498,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1576,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1577,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1612,"impl-ObjectArray%3CT%3E"],[1613,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1628,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1629,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1639,"impl-ObjectArray%3CT%3E"],[1640,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1641,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1642,"impl-ObjectArray%3CT%3E"],[1644,"impl-ObjectArray%3CT%3E"],[1645,"impl-Array-for-ObjectArray%3CT%3E"],[1648,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1649,"impl-ObjectChunkedBuilder%3CT%3E"],[1651,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1652,"impl-ObjectChunkedBuilder%3CT%3E"],[2338,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2339,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2340,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2341,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2448,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2449,"impl-Logical%3CDurationType,+Int64Type%3E"],[2451,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2452,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2453,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2454,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2455,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2769,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2770,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2771,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2772,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2773,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2785,"impl-PartialEq-for-DataType"],[2786,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2795,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2796,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2797,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2798,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2799,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2800,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2839,"impl-Display-for-PlSmallStr"],[2840,"impl-Debug-for-PlSmallStr"],[2844,"impl-Debug-for-AnyValue%3C\'a%3E"],[2845,"impl-Display-for-AnyValue%3C\'_%3E"],[2847,"impl-Debug-for-DataType"],[2848,"impl-Display-for-DataType"],[2851,"impl-Debug-for-TimeUnit"],[2852,"impl-Display-for-TimeUnit"],[2854,"impl-Debug-for-ReshapeDimension"],[2855,"impl-Display-for-ReshapeDimension"],[2858,"impl-From%3C%26str%3E-for-PlSmallStr"],[2860,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2861,"impl-From%3C%26String%3E-for-PlSmallStr"],[2862,"impl-From%3CString%3E-for-PlSmallStr"],[2865,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2867,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2879,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2881,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2882,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2883,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2884,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2886,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2887,"impl-From%3CSerializableDataType%3E-for-DataType"],[2889,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2890,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2893,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2894,"impl-From%3C%26ArrowField%3E-for-Field"],[2921,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2922,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2930,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2931,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2932,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2933,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2934,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2935,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2936,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2937,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2957,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2958,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2959,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2960,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2961,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2964,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2965,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2966,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2967,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2968,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[3006,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3007,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3008,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3009,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3010,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3011,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3124,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3125,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3126,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3127,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3128,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3179,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3180,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3181,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3182,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3183,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3184,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3223,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3224,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3225,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3226,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3227,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3228,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3229,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3230,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3239,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3240,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3241,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3242,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3243,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3244,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3247,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3248,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3270,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3271,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3291,"impl-Logical%3CDurationType,+Int64Type%3E"],[3292,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3299,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3300,"impl-Logical%3CDateType,+Int32Type%3E"],[3301,"impl-Logical%3CTimeType,+Int64Type%3E"],[3317,"impl-Logical%3CDurationType,+Int64Type%3E"],[3318,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3371,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3372,"impl-Logical%3CDateType,+Int32Type%3E"],[3373,"impl-Logical%3CTimeType,+Int64Type%3E"],[3379,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3380,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3706,"impl-Debug-for-ErrString"],[3707,"impl-Display-for-ErrString"],[3708,"impl-Debug-for-PolarsError"],[3709,"impl-Display-for-PolarsError"],[3713,"impl-From%3CError%3E-for-PolarsError"],[3714,"impl-From%3CParquetError%3E-for-PolarsError"],[3715,"impl-From%3CError%3E-for-PolarsError"],[3716,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3717,"impl-From%3CError%3E-for-PolarsError"],[3719,"impl-From%3CError%3E-for-PolarsError"],[3720,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3864,"impl-Display-for-DataFrame"],[3865,"impl-Debug-for-DataFrame"],[3871,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3872,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3898,"impl-Index%3C%26str%3E-for-DataFrame"],[3899,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3900,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3901,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3902,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3903,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3904,"impl-Index%3Cusize%3E-for-DataFrame"],[3905,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3924,"impl-DataFrame"],[3925,"impl-Container-for-DataFrame"],[3984,"impl-Container-for-DataFrame"],[3985,"impl-DataFrame"],[3989,"impl-Container-for-DataFrame"],[3990,"impl-DataFrame"],[4009,"impl-TryExtend%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E%3E-for-DataFrame"],[4010,"impl-TryExtend%3CResult%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E,+PolarsError%3E%3E-for-DataFrame"],[4016,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[4017,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[4059,"impl-Add-for-%26Column"],[4060,"impl-Add%3CT%3E-for-%26Column"],[4061,"impl-Add%3CT%3E-for-Column"],[4062,"impl-Add-for-Column"],[4094,"impl-Column"],[4095,"impl-BitAnd-for-%26Column"],[4096,"impl-BitAnd-for-Column"],[4097,"impl-Column"],[4098,"impl-BitOr-for-Column"],[4099,"impl-BitOr-for-%26Column"],[4100,"impl-BitXor-for-%26Column"],[4101,"impl-Column"],[4102,"impl-BitXor-for-Column"],[4131,"impl-Div-for-Column"],[4132,"impl-Div-for-%26Column"],[4133,"impl-Div%3CT%3E-for-Column"],[4134,"impl-Div%3CT%3E-for-%26Column"],[4160,"impl-From%3CPartitionedColumn%3E-for-Column"],[4161,"impl-From%3CScalarColumn%3E-for-Column"],[4162,"impl-From%3CSeries%3E-for-Column"],[4213,"impl-Mul-for-Column"],[4214,"impl-Mul%3CT%3E-for-%26Column"],[4215,"impl-Mul-for-%26Column"],[4216,"impl-Mul%3CT%3E-for-Column"],[4236,"impl-Rem-for-%26Column"],[4237,"impl-Rem-for-Column"],[4238,"impl-Rem%3CT%3E-for-Column"],[4239,"impl-Rem%3CT%3E-for-%26Column"],[4263,"impl-Sub%3CT%3E-for-%26Column"],[4264,"impl-Sub-for-Column"],[4265,"impl-Sub%3CT%3E-for-Column"],[4266,"impl-Sub-for-%26Column"],[4481,"impl-Debug-for-GroupByMethod"],[4482,"impl-Display-for-GroupByMethod"],[4489,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4490,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4523,"impl-IntoIterator-for-GroupsIdx"],[4524,"impl-IntoIterator-for-%26GroupsIdx"],[4526,"impl-IntoParallelIterator-for-GroupsIdx"],[4527,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5927,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5928,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5932,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5933,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5964,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5965,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5987,"impl-OptFlags"],[5988,"impl-Flags-for-OptFlags"],[6754,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6755,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6756,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6757,"impl-Default-for-Arc%3CCStr%3E"],[6758,"impl-Default-for-Arc%3Cstr%3E"],[6759,"impl-Default-for-Arc%3CT%3E"],[6760,"impl-Default-for-Arc%3C%5BT%5D%3E"],[7096,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7097,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[7098,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[7099,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[7100,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[7345,"impl-PartialEq-for-Expr"],[7346,"impl-Expr"],[7361,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[7362,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[7369,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[7370,"impl-PartialEq-for-Arc%3CT,+A%3E"],[7371,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[7384,"impl-PartialEq-for-StructArray"],[7385,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[7683,"impl-Debug-for-Duration"],[7684,"impl-Display-for-Duration"],[7694,"impl-Display-for-JoinType"],[7695,"impl-Debug-for-JoinType"],[7696,"impl-Display-for-JoinValidation"],[7697,"impl-Debug-for-JoinValidation"],[7714,"impl-Display-for-Expr"],[7715,"impl-Debug-for-Expr"],[7727,"impl-Debug-for-Operator"],[7728,"impl-Display-for-Operator"],[7734,"impl-Debug-for-BooleanFunction"],[7735,"impl-Display-for-BooleanFunction"],[7737,"impl-Display-for-CategoricalFunction"],[7738,"impl-Debug-for-CategoricalFunction"],[7739,"impl-Display-for-TemporalFunction"],[7740,"impl-Debug-for-TemporalFunction"],[7741,"impl-Display-for-PowFunction"],[7742,"impl-Debug-for-PowFunction"],[7743,"impl-Pointer-for-Arc%3CT,+A%3E"],[7744,"impl-Debug-for-Arc%3CT,+A%3E"],[7745,"impl-Display-for-Arc%3CT,+A%3E"],[7746,"impl-Display-for-StringFunction"],[7747,"impl-Debug-for-StringFunction"],[7748,"impl-Display-for-StructFunction"],[7749,"impl-Debug-for-StructFunction"],[7750,"impl-Debug-for-FunctionExpr"],[7751,"impl-Display-for-FunctionExpr"],[7763,"impl-Binary-for-OptFlags"],[7764,"impl-UpperHex-for-OptFlags"],[7765,"impl-Octal-for-OptFlags"],[7766,"impl-LowerHex-for-OptFlags"],[7767,"impl-Debug-for-OptFlags"],[7798,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7800,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7870,"impl-From%3Ci16%3E-for-Expr"],[7872,"impl-From%3Cf32%3E-for-Expr"],[7873,"impl-From%3Cu32%3E-for-Expr"],[7874,"impl-From%3Cu64%3E-for-Expr"],[7875,"impl-From%3Cf64%3E-for-Expr"],[7876,"impl-From%3Ci8%3E-for-Expr"],[7877,"impl-From%3Ci64%3E-for-Expr"],[7878,"impl-From%3Cu16%3E-for-Expr"],[7879,"impl-From%3Cbool%3E-for-Expr"],[7880,"impl-From%3Ci32%3E-for-Expr"],[7881,"impl-From%3C%26str%3E-for-Expr"],[7882,"impl-From%3CAggExpr%3E-for-Expr"],[7883,"impl-From%3Cu8%3E-for-Expr"],[7901,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7902,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7903,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7904,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7905,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7906,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7907,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7908,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7910,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7911,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7919,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7920,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7921,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7923,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7924,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7926,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7927,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7928,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7929,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7930,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7931,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7932,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7933,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7934,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7935,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7936,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7939,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7940,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7942,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7943,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7955,"impl-From%3CPlSmallStr%3E-for-Selector"],[7956,"impl-From%3CExpr%3E-for-Selector"],[7957,"impl-From%3CString%3E-for-Selector"],[7958,"impl-From%3C%26str%3E-for-Selector"],[7970,"impl-From%3Cu8%3E-for-Scalar"],[7971,"impl-From%3CPlSmallStr%3E-for-Scalar"],[7972,"impl-From%3Ci64%3E-for-Scalar"],[7973,"impl-From%3Ci32%3E-for-Scalar"],[7974,"impl-From%3Ci16%3E-for-Scalar"],[7976,"impl-From%3Cu64%3E-for-Scalar"],[7977,"impl-From%3Cf32%3E-for-Scalar"],[7978,"impl-From%3Cf64%3E-for-Scalar"],[7979,"impl-From%3Ci8%3E-for-Scalar"],[7980,"impl-From%3Cu16%3E-for-Scalar"],[7981,"impl-From%3Cu32%3E-for-Scalar"],[7982,"impl-From%3Cbool%3E-for-Scalar"],[7992,"impl-OptFlags"],[7993,"impl-Flags-for-OptFlags"],[7998,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7999,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8007,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8008,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8021,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8022,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[9192,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[9193,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[9194,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[9195,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[9196,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[9273,"impl-StructArray"],[9274,"impl-Array-for-StructArray"],[9280,"impl-Array-for-StructArray"],[9281,"impl-StructArray"],[9557,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[9558,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[9562,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9563,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[10037,"impl-Array-for-StructArray"],[10038,"impl-StructArray"],[10300,"impl-LazyCsvReader"],[10301,"impl-LazyFileListReader-for-LazyCsvReader"],[10302,"impl-LazyFileListReader-for-LazyJsonLineReader"],[10303,"impl-LazyJsonLineReader"],[10349,"impl-LazyFileListReader-for-LazyCsvReader"],[10350,"impl-LazyCsvReader"],[10351,"impl-LazyFileListReader-for-LazyJsonLineReader"],[10352,"impl-LazyJsonLineReader"],[10398,"impl-StructArray"],[10399,"impl-Array-for-StructArray"],[10852,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[10853,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[10854,"impl-From%3CMemSlice%3E-for-DynByteSource"],[11023,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[11024,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[11029,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[11030,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[11897,"impl-Display-for-RollingFunction"],[11898,"impl-Debug-for-RollingFunction"],[11930,"impl-Display-for-RollingFunctionBy"],[11931,"impl-Debug-for-RollingFunctionBy"],[12162,"impl-Add-for-%26Series"],[12163,"impl-Add%3CT%3E-for-%26Series"],[12164,"impl-Add%3CT%3E-for-Series"],[12165,"impl-Add-for-Series"],[12183,"impl-SeriesSealed-for-Series"],[12184,"impl-AsSeries-for-Series"],[12189,"impl-BitAnd%3CSeries%3E-for-%26Series"],[12190,"impl-BitAnd%3C%26Series%3E-for-Series"],[12191,"impl-BitAnd-for-Series"],[12192,"impl-BitAnd-for-%26Series"],[12193,"impl-BitOr%3CSeries%3E-for-%26Series"],[12194,"impl-BitOr-for-%26Series"],[12195,"impl-BitOr-for-Series"],[12196,"impl-BitOr%3C%26Series%3E-for-Series"],[12197,"impl-BitXor-for-%26Series"],[12198,"impl-BitXor%3CSeries%3E-for-%26Series"],[12199,"impl-BitXor%3C%26Series%3E-for-Series"],[12200,"impl-BitXor-for-Series"],[12248,"impl-Div%3CT%3E-for-%26Series"],[12249,"impl-Div-for-%26Series"],[12250,"impl-Div%3CT%3E-for-Series"],[12251,"impl-Div-for-Series"],[12262,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12263,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12264,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12266,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12267,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12268,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12285,"impl-Debug-for-Series"],[12286,"impl-Display-for-Series"],[12291,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[12292,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[12293,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[12294,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[12295,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[12297,"impl-From%3C_SerdeSeries%3E-for-Series"],[12303,"impl-FromIterator%3C%26f64%3E-for-Series"],[12304,"impl-FromIterator%3C%26i8%3E-for-Series"],[12305,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[12306,"impl-FromIterator%3C%26f32%3E-for-Series"],[12307,"impl-FromIterator%3Cf32%3E-for-Series"],[12308,"impl-FromIterator%3Cf64%3E-for-Series"],[12309,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[12310,"impl-FromIterator%3Cu32%3E-for-Series"],[12311,"impl-FromIterator%3C%26i64%3E-for-Series"],[12312,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[12313,"impl-FromIterator%3Cbool%3E-for-Series"],[12314,"impl-FromIterator%3C%26u16%3E-for-Series"],[12315,"impl-FromIterator%3C%26bool%3E-for-Series"],[12316,"impl-FromIterator%3Cu16%3E-for-Series"],[12317,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[12318,"impl-FromIterator%3Ci64%3E-for-Series"],[12319,"impl-FromIterator%3C%26str%3E-for-Series"],[12320,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[12321,"impl-FromIterator%3CString%3E-for-Series"],[12322,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[12323,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[12324,"impl-FromIterator%3C%26u8%3E-for-Series"],[12325,"impl-FromIterator%3Cu8%3E-for-Series"],[12326,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[12327,"impl-FromIterator%3C%26i32%3E-for-Series"],[12328,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[12329,"impl-FromIterator%3C%26u32%3E-for-Series"],[12330,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[12331,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[12332,"impl-FromIterator%3Cu64%3E-for-Series"],[12333,"impl-FromIterator%3C%26i16%3E-for-Series"],[12334,"impl-FromIterator%3C%26u64%3E-for-Series"],[12335,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[12336,"impl-FromIterator%3Ci8%3E-for-Series"],[12337,"impl-FromIterator%3Ci16%3E-for-Series"],[12338,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[12339,"impl-FromIterator%3Ci32%3E-for-Series"],[12340,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[12341,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[12342,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[12343,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[12344,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[12345,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[12346,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[12347,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[12348,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[12349,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[12350,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[12360,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12361,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12362,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12363,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12364,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12365,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12410,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12411,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12412,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12413,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12414,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12415,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12424,"impl-Mul-for-Series"],[12425,"impl-Mul%3CT%3E-for-Series"],[12426,"impl-Mul%3CT%3E-for-%26Series"],[12427,"impl-Mul-for-%26Series"],[12432,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[12433,"impl-NamedFrom%3CT,+T%3E-for-Series"],[12434,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[12435,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[12436,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[12437,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[12438,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[12439,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[12440,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[12441,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[12442,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[12443,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[12444,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[12445,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[12446,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[12447,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[12448,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[12449,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[12450,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[12451,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[12452,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[12453,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[12454,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[12455,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[12456,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[12457,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[12458,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[12459,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[12460,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[12461,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[12462,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[12463,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[12464,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[12465,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[12466,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[12467,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[12468,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[12469,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[12470,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[12471,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[12472,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[12473,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[12474,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[12475,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[12476,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[12477,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[12478,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[12479,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[12480,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[12481,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[12482,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[12483,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[12484,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[12490,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12491,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12492,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12494,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12495,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12496,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12506,"impl-Rem%3CT%3E-for-Series"],[12507,"impl-Rem%3CT%3E-for-%26Series"],[12508,"impl-Rem-for-%26Series"],[12539,"impl-Sub%3CT%3E-for-%26Series"],[12540,"impl-Sub-for-%26Series"],[12541,"impl-Sub-for-Series"],[12542,"impl-Sub%3CT%3E-for-Series"],[12578,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[12579,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[12580,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[12581,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAA0AEAAAADIRfRG4EbsRvBG9Eb4RvxHEEccRzBHNEfMRTxU=","e":"OzAAAAEAADElzgQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAGAGAAAwBlAAYAbwAGAHcAFQCOAAAAkAAAAJIAEACkAAAApwADAKwAAgCzAA0AwgAVANoACADkAAsA8gABAPYAHgAbARUAMwETAEkBFQBiAQEAZgEBAGkBCwB2AQ0AhgECAI4BEQChAQMAqAECAKwBAgCwAQcAvQEeAOEBBwDrAQgA9QE1AC4CFQBFAgQASwIEAFECBQBbAgIAXwIaAHsCBwCHAhgAogIQALQCAAC2AgsAwwIPANYCAQDaAgEA3gIAAOACAwDlAgEA7AIAAPACBgD4AgAA+gICAP4CDQANAwAADwMoADoDAgA+AyMAZQM1AJ0DCACqAxEAvwNcACkEEgBHBAcAUARJAJ0EDwCuBAEAsQQaAM0EAADQBA4A4gQCAOgEAgDtBBwACwUJABYFCgAsBQEAMwUNAEIFDwBWBRMAbAUAAG4FCQB6BQMAgAUBAIQFDQCcBQAAngUAAKUFBwCuBQcAwwUBAMcFAADKBQMA0gUFANkFBADjBQAA5gULAPkFBAAABg0AEAYGABoGBwAjBgEAJwYXAEAGBwBJBgAATAYAAE4GAgBUBhAAZgYAAGkGAwBuBgMAcwYBAHYGBwB/BgEAggYFAIoGAQCNBgAAjwYBAJIGAwCXBgQAnQYCAKEGAwCnBgAAqgYBALQGAAC5BgAAvAYBAMEGAQDEBgAAxwYBANAGAADWBgMA3wYAAOMGBgDtBhAAAAcIAAsHCAAWBwQAHQcAAB8HAAAhBwEAJwcFADAHAgA8BwEASAcAAEoHAQBNBwEAUQcDAFYHAABaBwAAXAcAAGEHDABwBwIAfwcAAIEHBwCKBwEAjQcAAJEHAACTBwMAmAcBAJsHBQCnByAAyQcBAM0HBQDUBwMA6gcDAO8HCAD5BwQAAAgCAAQIBQAMCAAADggOACEIAQAlCAAAJwgAACwIAQAvCAAAMQgAADMIBgA7CAAAPQgAAEAIAQBECAAARggBAEkIAABLCAIATwgNAF4IAABgCAEAYwgAAGUIAQBoCAAAaggBAG0IAABvCAEAcggDAHkIAAB9CAEAgQgAAIQIAACGCAAAiAgDAI0IAACQCAgAmggCAJ8IAwCkCAAApggCAKsIAACtCAIAsQgBALcIAwC8CAEAvwgAAMEIAQDECAAAxggBAMkIAADLCAEAzggAANAIAQDTCAAA1QgAANgIJwABCRgAGwkDACAJbACOCQEAkwmAABUKBgAdCgIAIQqvANIKBQDaCjkAFQsWAC0LAgAyCwAANAsAAEALAABCCwMARwsBAEoLAQBOCwEAUQsAAGoLAQBtCwAAcwsHAH4LAACBCwIAhQsFAIwLBgCUCwUAmwsAAJ0LHAC/Cw8A0QsvAAIMAAAxDAkAPAwAAD4MAABADAIARAwDAEkMAQBODAAAUAwHAFkMAQBdDAIAYgwDAGcMAABqDAsAeAwCAH4MAACBDA8AkgwAAJUMCwCiDBAAtAwCALgMAAC6DA4AygwAAM0MDQDgDAAA4gwBAOgMEQD8DAAA/gwDAAQNIwAqDQEALw1sAJ0NNQDUDQEA1w07ABQOAQAXDggAIQ4AACMOAQAmDgQALA4BADEOAAAzDgIANw4KAEMOAABFDgQATA4EAFIOBABYDhMAbQ4RAIEOBQCIDgUAkQ4FAJgOGAC0DgAAtw4LAMUOAwDKDgAAzA4AANEOCwDeDgkA6w4SAAcPAQALDwIADw8AABEPAAAXDwMAKQ8AADAPAAAyDwAANA8BADsPDABODwIAVg8AAFkPAQBfDwAAZw8BAGoPAAB4DwEAfA8AAIMPAACGDwEAjw8CAJMPAACWDwAAmA8BAKAPAACiDwQAqg8IALUPCgDBDwAAxA8BAMkPBADWDwEA2Q8GAO0PBwD4DwIA/A8SABEQHwAzEAsAQRACAEUQBQBOEAoAWxADAGAQCQBrEAIAcBAUAIcQDQCWEBkAshABALYQAgC6ECkA5RAJAPAQDwABEQIABRELABIRAQAVEQMAGhEDAB8RCQAqEQcAMxEBADYRHABUESgAfhEGAIoRAQCNEQAAkBEDAJYRAACaEQcAqhENALkRAQDAEQMAxREBAMkRAgDOEQAA0BEgAPQRDAADEgUAChIHABMSIwA5Eg4ASRIOAFkSAQBdEgMAZBIFAG4SDgB/EgYAiBIAAIsSCQCWEgIAmxIEAKESBQCoEgAArRIJALgSAQC8EgUAwxIAAMUSCgDREgAA1BIAANYSCQDhEgIA6RIJAPQSBQD+EgAAARMBAAsTAgASEwAAFRMBABsTCAAlEwAAJxMBACsTEQBAEwcASRMBAEwTBABSEwAAVhMEAF4TAgBiEwEAaRMFAHATAQBzEwgAfRMBAIETAwCGEwgAkBMAAJITAgCXEwAAmhMAAJwTAgChEwIApRMFAKwTBQCzEwIAuRMCAL8TAADBEwEAxRMAAMcTBADOEw8A3xMAAOITAQDlEwMA6xMEAPMTJQAbFAAAHRQBACEUAAAjFAEAJxQAACkUAQAtFAAALxQFADgUAgA9FAAAPxQAAEIUAABFFAAARxQCAEsUAgBPFAsAXRQHAGYUAABoFAAAbBQBAHAUAAByFAAAdBQBAHcUAQB6FAEAfxQBAIIUDQCTFAUAmhQHAKQUAgCoFAkAthQBALkUAAC7FAEAvhQEAMQUBADKFAIAzhQAANAUBADWFAAA2BQGAOAUBADmFAEA6RQCAO0UAQDwFAEA8xQAAPUUAAD3FAAA+hQCAP8UAwAEFQcADhUCABUVAQAYFQYAIBUDACYVAAApFQAALBUAAC4VBAA0FQIAOBUAADoVAgA+FQAAQBUHAEkVCABUFRMAaRUCAG0VFQCGFQEAiRUPAJsVAACdFQIAohUMALAVAwC3FQEAuhUAALwVAADAFQgAyhUDANIVBgDaFQkA5hUDAOsVCAD1FQAA9xUCAPwVAQD/FQAAAxYFAAoWEgAfFgAAIRYBACUWAAAnFgEAKxYAAC0WAQAxFgAAMxYEADoWBABAFgEAQxYBAEkWCgBVFgAAWBYGAGEWAgBlFmIAyRYAAMsWBgDXFgAA2RYAANwWBgDlFgAA7BYAAO4WAADyFgAA9RYAAPoWBQAEFwAACBcAAAoXAAANFwAADxcAABMXAAAXFwAAIxcCACcXCAAxFwAAMxcBADYXAwA+FwMAQxcEAEkXAQBRFwsAXxcAAGUXAQBpFwQBbxgDAHQYAQB3GAIAexgCAIEYAACFGAAAiRgAAIsYAACNGAAAkxgAAJUYAQCYGAAAohhCAOYYHAAEGcIAyBkBAM4ZAgDUGQIA2hkKAOkZBgDxGQAA9xkAAPkZAAADGgEABxoCAAsaAAAPGgAAERoAABMaAQAWGgAAGhoBACgaAQAuGgAAMxoCADkaAAA7GgUAQxoiAGoaGgGHGwAAjBsBAI8bUQDkGwAA5hsDAOwbAADvGwgA+RtaAFUcHQB4HAIAfhwAAIAcAQCFHAAAhxwAAIkcAwCOHCQAtBwWAMwcGQDpHLUAoB0BAKUdAACnHQAArh0AALAdAQCzHQAAtR0AALkdAAC9HQAAvx0AAMMdAADGHQAAyR0AANAdAADSHQAA1B0BANkdAADbHQUA4h0CAOYdAADoHQMA8R0AAPMdAAD1HQEA+h1tAGweAAB3HgAAeR4AAJoeAACiHgAAtR4AAL8eAADBHgsA0x4AANseAADeHgcA5x4BAPYeAAD8HgAABB8BAAcfAQAPHwAAFB8DAB0fAAAfHwAAIx8EACkfBgA3HwAAOh8AADwfAAA/HwEASB8BAE0fAgBTHwcAXB8CAGAfAQBkHwIAaB8AAGofAABsHwAAcR8AAHMfAAB4HwAAex8BAH4fAwCDHwAAhR8CAIwfBgCWHwEAmh8AAKUfAACnH0MA7h8EAPcfAAD5HwAA+x8EAAIgAAAEIAAABiABAAkgAAAMIAEAESAAABQghQCcIAAAoSABAKQgAQAqIQEALiEAADAhBwA7IQUAQiEDAEchAwBNIQAATyEBAFIhAABUIQEAWCEBAF8hAABmIQAAaCEBAG0hAgBxIQMAdyEBAHohAAB9IQAAfyEAAIYhAQCJIQIAkyEAAJYhAQCZIQIAnyECAKUhAQCtIQIAsiEIAL0hAQDBIQIAxSEDAMshDgDfIQAA5SEBAOwhAADvIQUA+CEAAAAiBAALIgAAECIAABoiAAAhIgEAJCICACgiAAArIgAAMCIAADIiAAA0IgAAOSIAAD0iAAA/IgIARiIGAFMiCABhIgAAYyIAAGciAABtIgAAbyIEAHgiAQB7IgEAfiIAAIAiAQCDIgEAhiIFAI0iAACPIgAAkSIAAJMiAACXIgAAmyIAAKMiAACmIgEAqSIAAK4iAQC0IgEAtyIEAMIiAgDKIgEAzyIAANIiAgDWIgQA5CIAAOYiBADsIgUA8yIAAPkiAwD+IgAAACMAAAIjAQAHIwAACSMAAAsjAwAZIwAAHCMBAB8jAgAjIwQAKiMIADQjBQA7IwAAPiMAAEAjAABCIwAASCMAAE4jAQBUIwAAWCMAAFojAABcIwEAfyMAAIQjAACHIwAAjSMDAJIjBACZIwEApCMAAKYjAACoIwQAriMEALYjAAC4IwEAuyMAAL0jAAC/I08AESQAABMkAAAVJAQAHSQAACYkAAAoJAAAKiQAADIkAwA7JAEAPiQAAEAkAQBFJAAARyQAAE0kAgBRJAQAVyQHAGAkAABiJAAAZCQBAGgkAABuJAAAciQAAHgkAAB8JAoAiSQCAI4kAACRJAIAnCQBAK0kAACvJAAAsiQCALYkAwC7JAIAvyQAAMIkAADGJGIAKyUOAD0lAQBCJQwAUCUAAFIlAQBVJZQA6yWBAHAmAABzJgMAfiYCAIMmEACVJoAAFycAACEnAAAmJwAAKCcAAConAAAxJwUAOCcBADwnAQBAJwAARCcAAEonAQBNJwAATyeBANcnAwDgJwAA4ycAAOUnAQDqJwEA7icBAPEnAAD5JwAA/ScBAAMoAAAJKAAAEygAABooAgAmKAQALigBAD4oAQBDKAAARSgAAEwoAABOKAEAUSgDAFkoAABbKAAAXSgAAGgoAABuKAAAcCgAAHQoAAB2KAAAeCgBAH4oAACDKAAAjygAAJMoAQCWKAAAmCgBAKAoAgCmKBUAvSgGAMkoAQDMKA0A2ygEAOEoMAAUKQAAFikAABgpAQAbKQEAHikGACYpNgBfKRQAdikBAHopAAB8KRQAkykBAJYpCAChKQUAqCkJALMpAQC2KQAAuikAALwpAwDBKQEAxCkFAM4pEgDiKQEA5SkCAOopAADuKRYABioXACIqBAArKhYAQyoBAEYqAABIKhoAZSoCAGsqAgBvKgoAfioSAJIqBgCpKgAAtyoCAM0qAADUKgkA4ioAAOQqDADyKgIA9ioSAAorAQANKw8AHysAACErBAAnKwsANCsAADYrIABZKwUAZCsAAGYrAQBqKwAAbCsEAHYrAAB5KwAAfCsAAIArAACCKxYAmisCAJ8rAAChKyMAySsEANErEADjKwcA7CsDAPErAgD1KwAA+CsGAAAsBAAHLAIACywFABMsAAAVLA4AKCwBACwsAAAuLAAAMywBADYsAAA4LAAAOiwEAEAsAABCLAAARSwBAEksAABLLAEATiwAAFAsAgBULA0AYywAAGUsAQBoLAAAaiwBAG0sAABvLAEAciwAAHQsAQB3LAMAfiwAAIIsAQCGLAAAiSwAAIssAACNLAMAkiwAAJUsCACfLAIApCwDAKksAACrLAIAsCwAALIsAgC2LAEAvCwDAMEsAQDELAAAxiwBAMksAADLLAEAziwAANAsAQDTLAAA1SwBANgsAADaLAAA3SwSAPEsBwD7LAAA/iwRABEtCAAbLQEAHi0IACgtAAAqLQEAMC0BADMtBAA8LQEARS0CAEstAABNLQAAVy0AAGYtAwBuLQoAei0AAHwtCACHLfQAfS4BAIAuHACeLgEAoS4RALUuEgDJLgAAyy4gAO0uAQDxLgAA8y4LAAAvAgAHLwAAFy8DAC0vBQA1LwAAOS8BAEAvAABCLwEASS8GAFIvAABYLwoAbC8FAHMvAAB1LwMAei8FAIMvBACKLwIAjy8AAJUvBACeLwsAqy8KALkvAgC9LwAAwS8CAMUvAwDNLxMA5C8BAOgvAQDsLwEA8C8CAP0vAwAEMAQACjAAAA0wAQAQMDAAQzAAAEUwAABKMAMAUDAAAFYwAQBZMAMAYTAFAG4wAgByMAAAdTAAAHowAgB+MAEAhDAAAIkwAwCOMAAAkTAtAMAwBQDIMAEAzDABAM8wAQDUMAAA1jAAANowAwDgMAEA4zAAAOYwBADuMAEA8TAAAPMwAAD1MAAA+TAAAPwwAwAFMQAADDEAAA8xAQASMQEAHzEHACsxBAAxMQEANzEAADkxAAA+MQMASDEAAEsxAwBQMQAAVDELAGExAABjMQAAZTEEAGsxHQCKMQAAjDEPAJ4xAQCiMRAAtDEBALcxBQA="}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNMHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMMMNNNNNNMMNNNNNNMMMMNMNCMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPFPPFPPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIPKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGGPPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNFNNNNNNNNNNNNNNNNNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFKSHHHNNNNNNNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPTTPPPPPKKKPFPPPIIGKEEEPIIIPPEPPEEEKEEPPPPPKKPPEPGPPIFEKPPPFGEEIEPKIGPPGGFFFPPEPPEEPKFPEPEEPKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNNMNNNNNNNMMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNNNMNNNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNPPPKPKKGRPPNMMNNNNCNNNNNMMNNNNNNNNMMNNMMNNMMNNNNNNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_binary","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","num_falses","num_trues","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","fmt","","from","","","","hash","","init","","into","","limit","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","can_have_dtype","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_dictionary","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","enum_","eq","","","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","","","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_or_infer","get_or_infer_with","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","gt_eq","","","","","hash","","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","last","leaf_dtype","lt","","","","","lt_eq","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max","","max_binary","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","","min_binary","min_reduce","","","mmap_slice","mul","multiply","","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","","","new_dimension","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","num_falses","num_trues","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","rechunk_and_trim_to_normalized_offsets","remainder","","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","","sum","sum_reduce","","take_unchecked","","","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_fixed_size_list","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","add","","","align_chunks","align_chunks_par","append_record_batch","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","first_col_n_chunks","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","max_n_chunks","mean_horizontal","min_horizontal","mul","","","n_chunks","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","rechunk_mut","rechunk_to_record_batch","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_extend","","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Partitioned","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_std","agg_sum","agg_valid_count","agg_var","and_reduce","append","apply_binary_elementwise","apply_broadcasting_binary_elementwise","apply_unary_elementwise","arg_sort","as_list","as_materialized_series","","as_partitioned_column","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","","bitxor","","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","implode","init","","into","","into_column","","","into_frame","into_materialized_series","into_nulls","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","map_scalar","map_unary_elementwise_to_bool","max_reduce","mean_reduce","median_reduce","min_reduce","mul","","","","n_chunks","n_unique","name","","new","","new_empty","","new_from_index","new_partitioned","new_scalar","not_equal","not_equal_missing","null_count","or_reduce","phys_iter","product","quantile_reduce","rechunk","rem","","","","rename","","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","sort_with","split_at","std_reduce","str","strict_cast","","sub","","","","sum_reduce","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_add_owned","try_apply_binary_elementwise","try_apply_broadcasting_binary_elementwise","try_apply_unary_elementwise","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_map_unary_elementwise_to_bool","try_mul_owned","try_str","try_sub_owned","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","var_reduce","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","try_from","try_into","type_id","vec_hash","","vec_hash_combine","","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","EMPTY","EMPTY_REF","Earliest","Equiprobable","","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","","Midpoint","","NamedFrom","NamedFromOwned","Nearest","","NewChunkedArray","NoData","NonExistent","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Raise","","RevMapping","RollingFnParams","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","Var","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","extract","finish","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","into","","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","method","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_cyclic_in","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","materialize_unknown_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompareEq","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","","","bitor","","","","bitxor","","","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","first","","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_chunks","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","last","","len","","limit","","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","or_reduce","","phys_iter","product","quantile_reduce","","rechunk","rechunk_validity","","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","to_arrow","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_sub_owned","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Add","Div","FloorDiv","LhsNumOps","Mul","NumOpsDispatch","NumOpsDispatchInner","NumericListOp","Output","Rem","Sub","__clone_box","add","add_to","","","borrow","borrow_mut","checked","clone","clone_into","clone_to_uninit","deref","deref_mut","div","divide","","","drop","execute","fmt","from","init","into","mul","multiply","","","rem","remainder","","","sub","subtract","","","to_owned","try_from","try_into","type_id","vzip","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","merge_dtypes_many","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[450,"polars_core::chunked_array::arithmetic"],[478,"polars_core::chunked_array::builder"],[586,"polars_core::chunked_array::builder::list"],[740,"polars_core::chunked_array::cast"],[768,"polars_core::chunked_array::collect"],[782,"polars_core::chunked_array::float"],[784,"polars_core::chunked_array::from_iterator_par"],[788,"polars_core::chunked_array::iterator"],[825,"polars_core::chunked_array::iterator::par"],[827,"polars_core::chunked_array::metadata"],[1113,"polars_core::chunked_array::object"],[1190,"polars_core::chunked_array::object::builder"],[1214,"polars_core::chunked_array::object::registry"],[1243,"polars_core::chunked_array::ops"],[1373,"polars_core::chunked_array::ops::arity"],[1409,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1411,"polars_core::chunked_array::ops::gather"],[1414,"polars_core::chunked_array::ops::row_encode"],[1423,"polars_core::chunked_array::ops::search_sorted"],[1452,"polars_core::chunked_array::ops::sort"],[1459,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1460,"polars_core::chunked_array::ops::sort::options"],[1537,"polars_core::chunked_array::temporal"],[1538,"polars_core::chunked_array::temporal::conversion"],[1541,"polars_core::config"],[1545,"polars_core::datatypes"],[3069,"polars_core::datatypes::categorical"],[3212,"polars_core::datatypes::categorical::revmap"],[3266,"polars_core::datatypes::categorical::string_cache"],[3285,"polars_core::datatypes::enum_"],[3303,"polars_core::datatypes::revmap"],[3309,"polars_core::datatypes::string_cache"],[3313,"polars_core::error"],[3380,"polars_core::error::PolarsError"],[3384,"polars_core::error::constants"],[3387,"polars_core::export"],[3394,"polars_core::fmt"],[3425,"polars_core::frame"],[3719,"polars_core::frame::column"],[3985,"polars_core::frame::explode"],[4013,"polars_core::frame::group_by"],[4249,"polars_core::frame::group_by::GroupByMethod"],[4250,"polars_core::frame::group_by::GroupsProxy"],[4252,"polars_core::frame::group_by::aggregations"],[4265,"polars_core::frame::group_by::expr"],[4268,"polars_core::frame::row"],[4364,"polars_core::functions"],[4366,"polars_core::hashing"],[4396,"polars_core::prelude"],[5027,"polars_core::prelude::PolarsError"],[5031,"polars_core::prelude::default_arrays"],[5037,"polars_core::prelude::list"],[5060,"polars_core::prelude::null"],[5091,"polars_core::prelude::revmap"],[5097,"polars_core::prelude::slice"],[5100,"polars_core::prelude::string_cache"],[5104,"polars_core::prelude::utf8"],[5108,"polars_core::random"],[5109,"polars_core::scalar"],[5152,"polars_core::scalar::reduce"],[5153,"polars_core::schema"],[5177,"polars_core::series"],[5636,"polars_core::series::amortized_iter"],[5660,"polars_core::series::arithmetic"],[5711,"polars_core::series::arithmetic::checked"],[5719,"polars_core::series::ops"],[5745,"polars_core::utils"],[5954,"polars_core::utils::flatten"],[5959,"dyn_clone::sealed"],[5960,"num_traits"],[5961,"num_traits::cast"],[5962,"polars_error"],[5963,"polars_core::series::arithmetic::borrowed"],[5964,"polars_core::frame::group_by::proxy"],[5965,"core::option"],[5966,"core::iter::traits::iterator"],[5967,"polars_utils::pl_str"],[5968,"core::ops::function"],[5969,"core::marker"],[5970,"alloc::string"],[5971,"polars_core::datatypes::dtype"],[5972,"polars_arrow::array::binview::view"],[5973,"polars_core::datatypes::aliases"],[5974,"polars_core::chunked_array::metadata::md_trait"],[5975,"alloc::boxed"],[5976,"polars_core::series::arithmetic::borrowed::checked"],[5977,"polars_arrow::array"],[5978,"alloc::vec"],[5979,"compact_str"],[5980,"core::iter::traits::double_ended"],[5981,"core::fmt"],[5982,"core::iter::traits::collect"],[5983,"polars_arrow::bitmap::immutable"],[5984,"rayon::iter"],[5985,"polars_arrow::trusted_len"],[5986,"polars_core::datatypes::any_value"],[5987,"polars_utils::index"],[5988,"std::sync::rwlock"],[5989,"polars_core::chunked_array::logical::decimal"],[5990,"core::iter::traits::exact_size"],[5991,"polars_core::series::series_trait"],[5992,"core::slice::iter"],[5993,"core::iter::adapters::map"],[5994,"core::convert"],[5995,"polars_core::chunked_array::metadata::guard"],[5996,"polars_core::chunked_array::metadata::interior_mutable"],[5997,"alloc::sync"],[5998,"core::ops::range"],[5999,"polars_core::datatypes::field"],[6000,"polars_arrow::legacy::kernels::rolling::no_nulls"],[6001,"polars_core::chunked_array::ops::rolling_window"],[6002,"polars_utils::aliases"],[6003,"polars_utils::hashing"],[6004,"ndarray::aliases"],[6005,"either"],[6006,"core::result"],[6007,"core::any"],[6008,"polars_core::chunked_array::arithmetic::numeric"],[6009,"polars_core::chunked_array::builder::string"],[6010,"polars_arrow::array::binview"],[6011,"polars_core::chunked_array::builder::boolean"],[6012,"polars_core::chunked_array::builder::null"],[6013,"polars_core::chunked_array::builder::primitive"],[6014,"core::clone"],[6015,"polars_core::chunked_array::builder::list::anonymous"],[6016,"polars_core::chunked_array::builder::list::boolean"],[6017,"polars_core::chunked_array::builder::list::primitive"],[6018,"polars_core::chunked_array::builder::list::binary"],[6019,"polars_core::chunked_array::builder::list::null"],[6020,"core::hash"],[6021,"polars_arrow::array::boolean"],[6022,"polars_core::chunked_array::metadata::env"],[6023,"polars_core::chunked_array::metadata::collect"],[6024,"bitflags::iter"],[6025,"std::fs"],[6026,"std::sync::mutex"],[6027,"polars_arrow::datatypes"],[6028,"polars_arrow::bitmap::utils::iterator"],[6029,"polars_arrow::bitmap::utils::zip_validity"],[6030,"polars_arrow::offset"],[6031,"polars_arrow::array::static_array"],[6032,"core::error"],[6033,"polars_arrow::array::primitive"],[6034,"polars_row::row"],[6035,"polars_arrow::array::binary"],[6036,"polars_arrow::legacy::array::slice"],[6037,"chrono::naive::datetime"],[6038,"alloc::borrow"],[6039,"polars_arrow::array::static_array_collect"],[6040,"bytemuck::zeroable"],[6041,"polars_core::chunked_array::logical::categorical"],[6042,"polars_core::chunked_array::logical::categorical::merge"],[6043,"polars_core::chunked_array::logical"],[6044,"polars_core::datatypes::time_unit"],[6045,"polars_arrow::datatypes::reshape"],[6046,"core::cmp"],[6047,"polars_arrow::types"],[6048,"polars_arrow::datatypes::physical_type"],[6049,"core::borrow"],[6050,"polars_arrow::pushable"],[6051,"polars_core::datatypes::into_scalar"],[6052,"polars_core::chunked_array::logical::categorical::builder"],[6053,"polars_core::chunked_array::logical::categorical::revmap"],[6054,"polars_core::chunked_array::logical::categorical::string_cache"],[6055,"polars_core::chunked_array::logical::enum_"],[6056,"polars_error::warning"],[6057,"polars_row"],[6058,"polars_arrow::record_batch"],[6059,"polars_arrow::datatypes::schema"],[6060,"polars_core::series::from"],[6061,"polars_core::chunked_array::ndarray"],[6062,"polars_arrow::array::struct_"],[6063,"polars_core::frame::column::scalar"],[6064,"polars_core::series::iterator"],[6065,"polars_utils::idx_vec"],[6066,"rayon::iter::plumbing"],[6067,"polars_core::frame::group_by::into_groups"],[6068,"core::iter::adapters::copied"],[6069,"core::iter::adapters::zip"],[6070,"polars_arrow::legacy::kernels::rolling"],[6071,"polars_utils::float"],[6072,"polars_arrow::types::native"],[6073,"polars_core::frame::group_by::aggregations::agg_list"],[6074,"polars_core::frame::row::av_buffer"],[6075,"polars_core::hashing::identity"],[6076,"polars_core::hashing::vector_hasher"],[6077,"core::alloc"],[6078,"std::os::fd::owned"],[6079,"std::os::fd::raw"],[6080,"std::ffi::os_str"],[6081,"std::path"],[6082,"core::mem::maybe_uninit"],[6083,"polars_arrow::legacy::kernels::time"],[6084,"core::default"],[6085,"core::ffi::c_str"],[6086,"polars_arrow::scalar"],[6087,"std::io::error"],[6088,"alloc::collections"],[6089,"regex::error"],[6090,"simdutf8::basic"],[6091,"alloc::ffi::c_str"],[6092,"polars_arrow::legacy::array::default_arrays"],[6093,"polars_arrow::buffer::immutable"],[6094,"polars_arrow::array::list"],[6095,"polars_core::named_from"],[6096,"polars_core::chunked_array::ops::aggregate"],[6097,"polars_core::chunked_array::ops::aggregate::quantile"],[6098,"polars_arrow::legacy::index"],[6099,"core::pin"],[6100,"core::io::borrowed_buf"],[6101,"std::io"],[6102,"polars_core::chunked_array::ops::aggregate::var"],[6103,"alloc::collections::btree::map"],[6104,"polars_arrow::legacy::array::list"],[6105,"polars_arrow::legacy::array::null"],[6106,"polars_arrow::bitmap::mutable"],[6107,"polars_arrow::array::utf8"],[6108,"polars_schema::schema"],[6109,"alloc::rc"],[6110,"polars_core::series::arithmetic::list_borrowed"],[6111,"polars_core::utils::supertype"],[6112,"polars_arrow::legacy::utils"],[6113,"polars_arrow::legacy::trusted_len::rev"],[6114,"core::iter::sources::repeat"],[6115,"core::iter::adapters::take"],[6116,"polars_core::chunked_array::object::extension"],[6117,"polars_error::constants"],[6118,"polars_core::frame::horizontal"],[6119,"polars_arrow::legacy::prelude"],[6120,"polars_arrow::legacy::array"],[6121,"polars_arrow::legacy::array::utf8"],[6122,"polars_core::utils::any_value"],[6123,"polars_core::utils::schema"],[6124,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kj000l00000000000000000000000000000000000`000000001010``0000000000000`0`00000001010000000100000000000`000000100000000000`00000000000000000000000000000000100001000000000000000000`00000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000``00000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`A@`00000000000000000000000000````````A@dA@hA@jA@lA@b432140043143214321432143214321432143214321044AA`AAb5436543AAd00076547654`7654365476547654765476547654````````AAf0AAhAAjAAl0AAn43AB`ABb4ABd47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`Ff00000000000000000000000000``ABhABj1000101000`ABl``ABnAC````ACdACf101010101010101011010`1010101010``ADdInGd0Ib`3L`22````````42110Lb4ACh43434343434344334343215604321560431150431504315043ACj054542654332671543267154541Fb7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADh00000If1111`111111110011111111111111111111``111111101111111110Ih2222222222`AEf0000000000000000000000````AEj00AEl00000001```00`0`10000AG`````````````````````````````0AFf``AGbAHb33333CEf4044AFb4AFh055AFj0AFl`88AFn00999999977AGd0`AGhAGj`<<`AGlAGn`AH`0<<????AHdAHf>><<AHh==:AHjAGb0:2AHlAHn`AI`0`0AIbAId`AFj0AIfAFbAIhAIjAIlAG`000AFl61`AIn`AJhAJdAJ```````````````````````````````````````````````AKb00`0`00000000000000000`00000`````AKd0````EfEl101010101010101010101011001011001010101010101010221010101010101010010010````````AMl`Cb``````HnE`ADj`1``2`0210```21````2`````100`1`2100``0`10`2120```0040210``210```BCd`4CEhCEj````AOj``8``654``654``654``654``4`777444BCf765``4``5AOlAN`1010A`:98`:9`:``;3;```````````B@h``35`=;:`;`9:99```90`;:9``;:9``;:9``;:9``9:9`99AJb0=0AMhAMj>AMl>AMnMj8ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlEbJdGh0Db00En00HnjJbM`MhLhMbD`CnDfDjAnEb?>=AEhGh0220020DbEn344AKnAL`43243232664325643253432AK`54305436ALb0ALd06HnE`MjALfAJb><<<<<<AMhCElBnjJbIdAMj;AMl;AMn;AN`ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMhCElBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlE``HnAMf012EbGhDbEnAK`5Jd54321`JbM`MhLhMbD`CnAMhAMjHnAMlE`AMnMjAN`ANbANd?>ANfANh?>=<ANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMhAMjHnAMlE`AMnMjAN`ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMhAMjHnAMlE`AMnMjAN`ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOl3MjB@`0005E`400`HnAMl26AMh0CElBnjJbIdAMj879AMn<AN`ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMh0CElBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlJdjJbM`MhLhMbD`CnAMhCElBn:9IdAMjHnAMlE`AMnMjAN`ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMfJdHnMj0`1AMlE`0AMn3AN`;:985EbGhDb0En0321100997766558844??>>==<<3AMh3121AEhAMd6431AMj==;::9<88AOhAOj0ADjAOl;7CElBnjJbId9Hn00000AMlE`000AMnMj00AN`0ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADj00AOlE`Eb000GhDb0En0AEh32104432211AK`01432154433225432143214AJb00654312065431260;:JdAMf08765341008765348CbjJbIdANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfEbAEh0AOj0HnBAfAJb5DbAK`7Gh2En2813300133006AMlE`MjAN`;ADjAOl<<4AMhCElBnjJbIdAMjHn=<AMn<;ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlEbE`3AMhCElBnjJbIdAMjHnAMl9AMnMjAN`ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlAMhBAh0EbGhDbEnAK`AEhBAjJd8HnE`0010000101000010=101010=0001000010=AJb019887798877``1AMl2:28:98:AKnAL`10`<4:<;:<6jJbM`MhLhMbD`CnDbEnMj0CEhCEjBBn55554444AEh04AOhAOj02EbGh:9AK`555AMhAMn3343==<<43==<<33404=4=HnAN`83Jd4AKnAL`1089jJbM`MhLhMbD`CnEbGhDbEnAK`AEh`JdAMh65465465477Mj87654387654376547654AKnAL`Hn0`5jJbM`MhLhMbD`CnGh0EnEb0Db022E`MjAN`203ADj505AMhAMjHnAMl7AMn76ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlE`2JdAMhHn3AN`7En2Eb0ALb0ALd0B@`00067CElBnjJbIdAMj<AMlE`AMnMj?ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOh0AOjADjAOlAMhCElBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlHnE`10AN`5EbAMhCElBnjJbIdAMj:AMl:AMnMj;ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOl1GhDbEnAEhAJb0E`1AKnAL`7BB`BBbB@dBBdBBfBBhBBjBBlBAh:9?>AK`>Gh:98765432<;DbEn3AEhAMhCElBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdM`MhANfANhLhMbD`CnANjANlDfDjANnAnAO`AObAOdAOfAOhAOjADjAOlCEhCEjBBnEhAJbHnEb`````BCd`BCf10`AMb00BC`10010BChBCb32103`3333021032103221033333333AMd31321444444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCn0000`00`0000000`0`BD`0000000000000000`8787`````BDdAKj000Ah`112101```11111112BDb3030`3003030`300300`3030`0``````0303003030CEnCF`10```````````BDh0000000000`0`````00`````00000BEf`0BEd11``0``01BCl000000000000000000000BFjBFl34210342222342342342`222421034210342222103422222222224222442`22222223422103422222222222222222`222422222222222222103422103421022222222222222222222222210222222222222222222`222222222222222222210222222222222222222234222222221034222221034221034222222210342222222``Ej0`0BGl1111111111111111111111111011110111111111111101010101011101010111010111111010101111111111111101011101111111110111111110101BEb12221122222222112222122222222222121212222222222222222122122212222222222122222222122221221222222222221222222122222222221222222212221222222`BHb00000000000000000000000000`BHh0``0``````BI`Al`2`22222222210`222BHd1BEn40`1023BIjBHlBHj4537621045374537453745373456210045376210453731621044537454455`643445377`62104445537445335BId04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CFbCFd0``````````BJfBJh0`BJj0BJlBJn``101010101010`10101010BEl211210210210210210`0210210210000022110`2102102121021```210210210210210`````````BK`000000000000BKb000111111`````````BGf````````````AKj00`0Bh0BOdCFfN`Ah6```BCd`326```````6```4BCf`43``````14343``43`7`5BLj````381``````BJ````71`````99`99``9``9`9``0``8OfBLdLdNb>B@l:5BLfBLh84444????4?44AKjBh08766BOd6BGf6N`<65=43;:928170<65=`98BLb04<;:9281=76>4<;:9281=76>4<;:9281=76>4:B@`0005;66``8;;5;;;;:392`655=<;;4:392>87?65=<;4:392>87?;`;;;65=<;;4:392>87?995=;;;:392>87?55==;;339922??<AMd<7766>=<<<;4:3?98BLj<8888877777??>==================6<5;4BJ`;:1BNjBNnBO`;;;;;;;;LdCFh0000111==<=BOf222Fn3?3=B@l=9Of55`AKjBh2BLd8BOdNbBGf7N`BJ`BLfBLhBLj;8:9;8Ld876=5432100000:9<=0<0BEj1`1``1C@`0C@bB@l6;2204C@dC@f6266666666666`OfBLdBh999````;7799699999`9`AKd0:CAb3`;994243;NbBGf9N`BJ`BLfBLhBLjAKj:LdB@`0002<>=11BOd:9B@l987654>OfBLd53=<2;:987C@d666666667Bh77803275?>4=<;:97`CAb914386NbBGf7N`BJ`BLfBLhBLj?66<AKjLd:::0CEnCF`10```BNjBNnBO``CAl000000000000000000000`CB`00000000000000000000000000000`BCdBCf10``AKd0``````CFjCFl``Kn000000000000000000000000000000000`0000000`CCb0`````BDlCBn101012101010101Jn0``00```BGn11````01AfBOl0111111`0010000`10001001001111111111111111CCf342034211122221122121122421424222203422034222222034211114222222222442222221121114222034222222222222222222222222222222222222222221221111111122222214222222`2034203422220BFn322333322003333222322333333333322223222232233332232223333333333333333333333333333333333333323133333332`22332222233323325223333222331233222322223333333322332222333533333333333145333333333314533333333333331453333322322222145333223``Cj000000000000000000000CCn00`0```CCj1110CClAj033`33333210033333321002100210033333``BLbFh0100CD`0`00000000000000000000000CDb0``````````0CDdCDh```````211````22222222CE`AKf43210432CDf543543543``CDj06``6653322654322654632654``636533665565`6666653265546666226CDn337333````4764376577743765375BGb6888383``3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{Cb{}{{Bl{Bn}}{C`{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cf{B`}{{Cd{B`}}}}Ch}}{{{f{{l{j}}}}c}{{l{j}}}{{Cl{Cj}{{Cd{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cl{{B`{Cj}}}{{Cd{{B`{c}}}}}}Ch}Cb}{{{f{{l{Cn}}}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{{l{D`}}}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{c}}}}e}DbCb{{Cl{{f{BjDd}}}}}}{{{f{{l{c}}}}{f{Cf}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cf}}}{{l{e}}}A`Cb}{{{f{Bj{l{c}}}}e}bA`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cl{{f{Dh}}}{{Cd{{f{Dh}}}}}}}}{{{f{{l{Dj}}}}c}{{l{Dj}}}{{Cl{{f{{Dn{Dl}}}}}{{Cd{{f{{Dn{Dl}}}}}}}}}}{{{f{{l{c}}}}E`g}{{l{i}}}Cb{}{{Cl{}{{Cd{e}}}}}Cb}{{{f{{l{j}}}}{f{Cf}}}{{Ah{Eb}}}}{{{f{{l{c}}}}g{f{Bj{Dn{e}}}}}bA`{}{{Cf{B`{f{e}}}{{Cd{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cl{Ed{f{Dh}}}{{Cd{Ed}}}}Ch}}{{{f{{l{c}}}}Ef}EhA`}{{{f{{l{c}}}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}A`}{{{f{{l{c}}}}}{{Ah{Eh}}}A`}`{{{f{{l{Df}}}}}En}{{{f{{l{c}}}}}{{f{{l{c}}}}}Cb}{{{f{{l{c}}}}}{{f{E`}}}Cb}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}CbCb{{Cl{{B`{Cj}}B`B`}{{Cd{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eF`{}}00{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{{l{c}}}}}{{Fd{Fb}}}Cb}``{{{f{{l{c}}}}e}{{l{g}}}A`{{Cf{}{{Cd{}}}}Ch}A`}{{{f{{l{c}}}}{f{E`}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{E`}}Ff}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Fh}{{{f{{l{c}}}}e}{{Ah{Af}}}FhAd}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fj}}}}}}}Cb}{{{f{{l{c}}}}}FlCb}{{{f{{l{c}}}}}{{f{{G`{Fn}}}}}Cb}{{{f{Bj{l{c}}}}}{{f{Bj{G`{Fn}}}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Cb}0{{f{f{Bjc}}}b{}}{fb}`{{{f{Bj{l{c}}}}}b{CbA`}}`{fGb}{{{f{{l{c}}}}}{{Ah{{f{Dn}}}}}A`}{{{f{Bj{l{c}}}}{f{{l{c}}}}Gd}bCb}{{{f{Bj{l{c}}}}{f{{l{e}}}}Gd}bCbCb}{{{f{{l{c}}}}}{{`{{Gf{}{{Bb{{f{Dn}}}}}}}}}A`}{{}{{l{c}}}Cb}{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{Fjb}{{{f{Bj{l{c}}}}}bCb}1{{{f{{l{c}}}}}{{l{c}}}Cb}{{{f{{l{c}}}}}{{f{E`}}}Cb}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}{{{f{{l{c}}}}e}GhA`Ad}10{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gh}}}{{Ah{{l{c}}}}}{{Cb{}{{Gj{Bn}}{C`{Bn}}}}}}{{{f{{l{c}}}}}B`Cb}{{{f{{l{c}}}}}{{B`{Fj}}}Cb}`{{{f{{l{c}}}}{f{BjGl}}}GnA`}{{{f{{l{An}}}}{f{BjGl}}}Gn}{{{f{{l{c}}}}e}bCb{{Cl{B`}}}}{{{f{{l{j}}}}c}b{{Cl{{B`{Cj}}}}}}{c{{l{e}}}H`{{Cb{}{{Hb{c}}}}}}{cc{}}0{{Bhc}{{l{e}}}Hd{{Cb{}{{Hb{}}}}Cb}}{{{f{{l{c}}}}e}{{l{c}}}{{Cb{}{{Hb{}}}}Cb}Hd}{{Bh{G`{Fn}}}{{l{c}}}Cb}{{Bh{G`{Fn}}E`}{{l{c}}}Cb}{c{{l{An}}}{{Hd{}{{Bb{{B`{d}}}}}}}}{c{{l{e}}}{{Hd{}{{Bb{{Hh{G`{B`{Hf}}}}}}}}}A`}{c{{l{e}}}{{Hd{}{{Bb{B`}}}}}A`}{{Bhc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}31{{Bhc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hj{}{{Bb{B`}}}}}A`}{{Bh{f{Dn}}}{{l{c}}}A`}{{Bh{f{{Dn{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{Hl{}{{Bb{B`}}}}}A`}{{BhG`}{{l{c}}}A`}{{BhG`{B`{Hf}}}{{l{c}}}A`}{{BhFj}{{l{c}}}A`}0{{{f{{l{c}}}}Fj}{{l{c}}}Cb}{{BhFj{f{E`}}}Eb}{{{f{{l{c}}}}Fj}B`Cb}{{{f{{l{c}}}}Fj}{{Ah{Hn}}}A`}{{{f{{l{c}}}}Fj}HnA`}{{{f{{l{j}}}}Fj}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{I`}}}Cb}{{{f{{l{c}}}}}dCb}{{{f{{l{c}}}}}IbCb}{{{f{{l{j}}}}}Af}{{{f{{l{c}}}}}B`Cb}0{{{f{{l{{Id{c}}}}}}Fj}{{B`{{f{If}}}}}Ih}09{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FjdFj}AlF`}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}{{{f{{l{c}}}}e}GhA`Ad}018{{{f{{l{c}}}}{B`{Fj}}}{{l{c}}}Cb}{{}Fj}0{{FjIj{B`{Il}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{E`}}}}{{{f{{l{c}}}}}{{J`{{In{c}}}}}Cb}{{}c{}}0{{}Ej}{{{l{Jb}}{B`{Fj}}Fj}{{Ah{Jd}}}}{{{l{Jb}}{B`{Fj}}Fj}Jd}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JfJh{Jj{}{{Bb{}}}}GfHl}}}A`}{{{l{c}}}AfCb}{{{f{{l{c}}}}}dCb}{{{f{{l{c}}}}}GhJl}000{{{f{{l{c}}}}}GhCb}02{{{f{{l{c}}}}}JnCb}{{{f{{l{c}}}}}{{`{{K`{}{{Bb{B`}}}}}}}Cb}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}Cb}{{{f{{l{c}}}}}{{Kf{{Kb{Fn}}{Kd{{f{Fn}}}{{Cd{{B`{{f{Hf}}}}}}}}}}}Cb}`{{fc}Gb{{Kh{Dh}}}}{{{f{{l{c}}}}}B`Cb}{{{f{{l{c}}}}}{{B`{Fj}}}Cb}{{{f{{l{c}}}}}{{Kj{c}}}Cb}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}{{{f{{l{c}}}}}FjCb}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbKl}}00{{{f{{l{c}}}}Fj}{{l{c}}}Cb}{{{f{{l{c}}}}e}GhA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}01{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{Dj}}}}}{{B`{{f{{Dn{Dl}}}}}}}}{{{f{{l{c}}}}}KnA`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{c}}}}}{{B`{n}}}F`}{{{f{{l{c}}}}}KnF`}{{{f{Bj{l{c}}}}{In{c}}}bCb}`{{{f{{l{c}}}}}{{L`{c}}}Cb}{{{f{{l{c}}}}}{{f{{Ld{{Lb{c}}}}}}}Cb}{{{f{{l{c}}}}}{{B`{{Lf{Fb}}}}}Cb}{{{f{Bj{l{c}}}}}{{f{Bj{Ld{{Lb{c}}}}}}}Cb}{{{f{{l{c}}}}}{{Ld{{Lb{c}}}}}Cb}<=;{{{f{{l{c}}}}}{{B`{Hh}}}A`};{{Bh{f{{Dn{Dl}}}}FjFj}{{l{An}}}}{{Bh{f{Dn}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FjCb}{{{f{{l{c}}}}}{{Ah{Fj}}}A`}{{{f{{l{c}}}}}{{f{Bh}}}Cb}{{Bhc}{{l{Lh}}}{{Kh{{Dn{{B`{Lj}}}}}}}}{{Bh{Ln{Ll}}}{{l{M`}}}}{{Bhc}{{l{Mb}}}{{Kh{{Dn{Md}}}}}}{{Bhc}{{l{Df}}}{{Kh{{Dn{Dd}}}}}}{{Bhc}{{l{Jb}}}{{Kh{{Dn{Mf}}}}}}{{Bhc}{{l{D`}}}{{Kh{{Dn{Ij}}}}}}{{Bhc}{{l{Cn}}}{{Kh{{Dn{n}}}}}}{{Bhc}{{l{Df}}}{{Kh{{Dn{{B`{Dd}}}}}}}}{{Bhc}{{l{Dj}}}{{Kh{{Dn{{B`{{G`{Dl}}}}}}}}}}{{Bhc}{{l{Mh}}}{{Kh{{Dn{Il}}}}}}{{Bhc}{{l{M`}}}{{Kh{{Dn{Ll}}}}}}{{Bhc}{{l{An}}}{{Kh{{Dn{{B`{d}}}}}}}}{{Bhc}{{l{M`}}}{{Kh{{Dn{{B`{Ll}}}}}}}}{{Bhc}{{l{Lh}}}{{Kh{{Dn{Lj}}}}}}{{Bhc}{{l{An}}}{{Kh{{Dn{d}}}}}}{{Bhc}{{l{Mb}}}{{Kh{{Dn{{B`{Md}}}}}}}}{{Bhc}{{l{Jb}}}{{Kh{{Dn{{B`{Mf}}}}}}}}{{Bhc}{{l{D`}}}{{Kh{{Dn{{B`{Ij}}}}}}}}{{Bhc}{{l{Dj}}}{{Kh{{Dn{{G`{Dl}}}}}}}}{{Bhc}{{l{Cn}}}{{Kh{{Dn{{B`{n}}}}}}}}{{Bh{Ln{Md}}}{{l{Mb}}}}{{Bh{Ln{Lj}}}{{l{Lh}}}}{{Bh{Ln{Il}}}{{l{Mh}}}}{{Bhc}{{l{Mh}}}{{Kh{{Dn{{B`{Il}}}}}}}}{Bh{{l{{Id{c}}}}}Ih}{{{f{{l{c}}}}FjFj}{{l{c}}}A`}{{Bh{G`{c}}}{{l{{Id{c}}}}}Ih}{{Bh{G`{c}}Hf}{{l{{Id{c}}}}}Ih}{{BhG`}{{l{c}}}A`}{{{Ld{Mj}}{G`{Fn}}I`I`}{{l{c}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{c}}}}e}GhA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}01{{{f{{l{c}}}}}FjCb}{{{f{{l{An}}}}}Fj}0``{{{f{{l{Df}}}}}{{`{{Ml{}{{Bb{{B`{{f{Dh}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Df}}}}}{{`{{Mn{}{{Bb{{B`{{f{Dh}}}}}}}}}}}}{{{f{{l{c}}}}}KnA`}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}nN`}{{Ah{{B`{n}}}}}F`}{{{f{{l{c}}}}nN`}{{Ah{Kn}}}F`}{{BhFjn}{{Ah{{l{An}}}}}}{{BhFjnn}{{Ah{{l{c}}}}}A`}{{BhFj}{{l{c}}}A`}{{BhFjnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}Cb}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{c}}}}}{{B`{Hf}}}Cb}{{{f{{l{c}}}}}{{f{Mj}}}Cb}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}Bh}bCb}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cf}}Nb}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fje}{{Ah{{l{c}}}}}Jl{{Cl{{f{Bj{l{c}}}}}{{Cd{B`}}}}}}{{{f{{l{c}}}}ndd{B`{Il}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}Fjdd{B`{Il}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}{{Cf{B`}{{Cd{B`}}}}}}{{{f{{l{c}}}}{f{Gh}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{c}}}}d}bCb}{{{f{Bj{l{j}}}}E`}b}{{{f{Bj{l{c}}}}I`}bCb}{{{f{Bj{l{c}}}}Jn}bCb}{{{f{{l{c}}}}Md}{{l{c}}}A`}{{{f{{l{c}}}}MdB`}{{l{c}}}A`}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}MdFj}{{l{c}}}Cb}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ef}{{l{c}}}A`}{{{f{{l{c}}}}Md}{{Hh{{l{c}}{l{c}}}}}Cb}0{{{f{{l{c}}}}Dl}{{B`{n}}}A`}{{{f{{l{c}}}}Dl}KnF`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{An}}}}}{{B`{I`}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}KnA`}{{{f{{l{c}}}}{B`{Fj}}}{{l{c}}}Cb}{{{f{{l{c}}}}{f{Eh}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}Cb{{Kh{{Dn{I`}}}}Nd}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Cb{}{{Gj{Bn}}{Nf{Bn}}{Bl{Bn}}}}Cb}{{Kh{{Dn{I`}}}}Nd}}{{{f{{l{c}}}}{f{Eh}}}{{l{c}}}{{Cb{}{{Gj{Bn}}{Nf{Bn}}{Bl{Bn}}}}Cb}}`{{{f{{l{c}}}}dNh}{{G`{{G`{Nj}}}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{Df}}}}Fj}{{Ah{Af}}}}{{{f{Bj{l{j}}}}E`}b}{{{f{{l{j}}}}}{{Ah{Nl}}}}{{{f{{l{c}}}}}{{Ah{Nn}}}A`}{fc{}}{{{f{{l{Dj}}}}}Db}{{{f{{l{c}}}}}{{G`{B`}}}A`}{{{f{{l{c}}}}}{{O`{G`{G`{B`}}}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cl{Cj}{{Cd{{Ah{Af}}}}}}}}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cl{{B`{Cj}}}{{Cd{{Ah{{B`{c}}}}}}}}Ch}Cb}{{{f{{l{c}}}}g}{{Ob{Dbe}}}Cb{}{{Cl{{f{BjDd}}}{{Cd{{Ob{be}}}}}}}}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{}{{Cd{{Ob{eg}}}}}}}Cb}{c{{Ob{e}}}{}{}}0{{Bhg}{{Ob{{l{i}}e}}}H`{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{{Cb{}{{Hb{c}}}}Cb}}{{}{{Ob{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{Ah{{B`{Af}}}}}}}}}}{fOd}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}Cb}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}Fj}{}Cb}{{{f{{l{c}}}}Dl}{{B`{n}}}A`}{{{f{{l{c}}}}Dl}KnF`}{{}c{}}0{{Bhc}{{l{e}}}H`{{Cb{}{{Hb{c}}}}Cb}}{{{f{{l{e}}}}c}{{l{e}}}H`{{Cb{}{{Hb{c}}}}Cb}}{{{f{{l{c}}}}{G`{Fn}}}{{l{c}}}Cb}{{{l{c}}Bh}{{l{c}}}Cb}{{{f{{Dn{Of}}}}e}c{}{{Oh{{f{Eh}}}{{Cd{c}}}}}}{{{f{{l{c}}}}Jn}{{l{c}}}Cb}{{{l{c}}}eA`{}}{{{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}2301{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}543210452367453201542310{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gh}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{Cb{}{{Nf{Bn}}}}}}````{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BjA@b}}}b}{{{f{Bj{A@d{c}}}}}b{A@fNd}}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{{{f{Bj{A@d{c}}}}{B`{e}}}b{A@fNd}{{Kh{c}}}}{{{f{BjA@b}}{B`{c}}}b{}}{{{f{BjA@b}}c}b{}}{{{f{Bj{A@d{c}}}}e}b{A@fNd}{{Kh{c}}}}{{{f{BjA@h}}d}b}5{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{{A@d{c}}}}}{{A@d{c}}}{A@fNd}}{{{f{A@h}}}A@h}{{{f{A@j}}}A@j}{{{f{{A@l{c}}}}}{{A@l{c}}}{A`A@n}}{{f{f{Bjc}}}b{}}000{fb}000{Fj{{f{c}}}{}}000{Fj{{f{Bjc}}}{}}000{Fjb}000{A@b{{l{c}}}Cb}{{{A@d{Dh}}}Db}{{{A@d{{Dn{Dl}}}}}En}{AA`Db}{AAbEn}{A@hGh}`{{{A@l{c}}}{{l{c}}}A`}{cc{}}000{{Bhe}AAd{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}AAd{}{{Bf{}{{Bb{c}}}}}}{{Bh{f{{Dn{c}}}}}AAd{}}{{Bh{f{{Dn{{B`{c}}}}}}}AAd{}}{{}Fj}000{{}c{}}000`{{BhFj}{{A@d{c}}}{A@fNd}}{{BhFj}A@h}{{BhFj}A@j}{{BhFj}{{A@l{c}}}A`}{{{f{BjA@b}}}b}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{fc{}}000{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}000<<<<````````{{{f{BjAAf}}{f{H`}}}b}{{{f{BjAAf}}}b}{{{f{BjAAh}}}b}{{{f{BjAAj}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{}}}}Hl}}{{{f{BjAAn}}}b}54{{{f{BjAB`}}}b}{{{f{BjABb}}}b}{{{f{BjAAj}}}b}{{{f{BjABd}}}b}{{{f{Bj{AAl{c}}}}}bA`}{{{f{BjAAf}}{B`{{f{H`}}}}}b}{{{f{BjAAf}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BjAAn}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{B`{{f{Dn}}}}}bA`}{{{f{BjAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAf}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAh}}{f{Af}}}{{Ah{b}}}}{{{f{BjAB`}}{f{Af}}}{{Ah{b}}}}{{{f{BjABb}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BjABd}}{f{Af}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bj{AAl{c}}}}{f{Dn}}}bA`}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{B`{{f{Dh}}}}}}}}Hl}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{B`{{f{{Dn{Dl}}}}}}}}}}Hl}}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{f{Dh}}}}}}}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{f{{Dn{Dl}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000`{{}AAf}{{}AAh}{Fj{{f{c}}}{}}000000{Fj{{f{Bjc}}}{}}000000{Fjb}000000{{{f{AB`}}}d}{{{f{ABb}}}d}{{{f{AAj}}}d}{{{f{{AAl{c}}}}}dA`}{{{f{AAn}}}d}{{{f{AB`}}}{{f{Mj}}}}{{{f{ABb}}}{{f{Mj}}}}{{{f{AAj}}}{{f{Mj}}}}{{{f{{AAl{c}}}}}{{f{Mj}}}A`}{{{f{AAn}}}{{f{Mj}}}}{{{f{BjAAf}}}Eb}{{{f{BjAAh}}}Eb}{{{f{BjABd}}}Eb}{{{f{BjAAn}}}Eb}{cc{}}000000{{{f{E`}}FjFjBh}{{Fd{AAn}}}}{{}Fj}000000{{{f{BjAB`}}}Fn}{{{f{BjABb}}}Fn}{{{f{BjAAj}}}Fn}{{{f{Bj{AAl{c}}}}}FnA`}{{{f{BjAAn}}}Fn}{{}c{}}000000{{BhFj{B`{E`}}}AAf}{{BhFj{B`{E`}}}AAh}{{BhFjFj}AB`}{{BhFjFj}ABb}{{BhFjFj}AAj}{{BhFj}ABd}{{BhFjFjE`}{{AAl{c}}}A`}{{BhFjFjE`E`}{{AAl{c}}}A`}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{fOd}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Ff}}}Ff}{{f{f{Bjc}}}b{}}{fb}{{}Ff}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{Ff}}{f{Ff}}}d}{{f{f{c}}}d{}}0{{{f{Ff}}{f{BjGl}}}Gn}{cc{}}{{{f{Ff}}{f{Bjc}}}bABf}{{}Fj}{{}c{}}{{{f{Ff}}}d}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5``{{ABhBh}{{l{c}}}Cb}{{ABj{f{{l{c}}}}}{{l{c}}}Cb}10{{ABjBhE`}{{l{c}}}Cb}0{{ABhBh}{{Ob{{l{c}}e}}}Cb{}}{{ABj{f{{l{c}}}}}{{Ob{{l{c}}e}}}Cb{}}10{{ABjBhE`}{{Ob{{l{c}}e}}}Cb{}}0`{ABlABl}``{{ABnBhE`}e{}{{AC`{c}}}}{{eBhE`}AC`{}{{Hj{}{{Bb{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0{Fjb}0{cc{}}0{{}Fj}0{{}c{}}000{{{f{ACb}}}ACd}{{{f{BjACd}}}{{B`{c}}}{}}{{{f{Bj{ACf{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{ACf{c}}}}}{{B`{e}}}Gf{}}`{{{f{ACd}}}{{Hh{Fj{B`{Fj}}}}}}{{{f{{ACf{c}}}}}{{Hh{Fj{B`{Fj}}}}}Bf}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}099`````````````````````````{{fh}b}0000{{}Gd}{{}Ib}{{GdGd}Gd}{{IbIb}Ib}{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}3210{{{f{Gd}}}Ll}0{{{f{Ib}}}Dl}05432{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000{{{f{{Lb{c}}}}}{{Fd{Fb}}}Cb}{{{f{{Lb{c}}}}}{{Lb{c}}}Cb}{{{f{{In{c}}}}}{{In{c}}}Cb}{{{f{ACh}}}ACh}{{{f{Gd}}}Gd}{{{f{Ib}}}Ib}{{f{f{Bjc}}}b{}}0000{fb}0000{{{f{BjACj}}}b}0{GdGd}{IbIb}{{{f{Gd}}Gd}d}{{{f{Ib}}Ib}d}{{}{{Lb{c}}}Cb}{{}{{In{c}}}Cb}{{}Gd}{{}Ib}{{{f{{L`{c}}}}}{{f{e}}}Cb{}}{Fj{{f{c}}}{}}000000{Fj{{f{Bjc}}}{}}000000{{GdGd}Gd}{{IbIb}Ib}{{}d}{{{f{Fb}}}{{B`{I`}}}}{{{f{{In{c}}}}}{{B`{I`}}}Cb}{{{In{c}}I`}{{In{c}}}Cb}{{{In{c}}{B`{I`}}}{{In{c}}}Cb}{Fjb}000000<;5{{{f{Gd}}{f{Gd}}}d}{{{f{Ib}}{f{Ib}}}d}7{{{f{BjGd}}c}b{{Hd{}{{Bb{Gd}}}}}}{{{f{BjIb}}c}b{{Hd{}{{Bb{Ib}}}}}}{{{In{c}}d}{{In{c}}}Cb}{{{In{c}}{B`{d}}}{{In{c}}}Cb}{{{f{{In{c}}}}Gd}{{In{c}}}Cb}{{{f{{In{c}}}}Gd}{{In{e}}}CbCb}{{{In{c}}Ib}{{In{c}}}Cb}{{{In{c}}{B`{Ib}}}{{In{c}}}Cb}{{{f{{In{c}}}}{f{BjGl}}}GnCb}{{{f{ACh}}{f{BjGl}}}Gn}{{{f{Gd}}{f{BjGl}}}Gn}0000{{{f{Ib}}{f{BjGl}}}Gn}0000{cc{}}000000{Ll{{B`{Gd}}}}{Dl{{B`{Ib}}}}{LlGd}0{DlIb}010{cGd{{Hd{}{{Bb{Gd}}}}}}{cIb{{Hd{}{{Bb{Ib}}}}}}{{{f{Dh}}}{{B`{Gd}}}}{{{f{Dh}}}{{B`{Ib}}}}{{{f{{In{c}}}}}{{B`{I`}}}Cb}{{{f{{In{c}}}}}dCb}{{{f{Ib}}}d}{{{f{Fb}}}Ib}{{{f{{In{c}}}}}IbCb}0{{{f{{In{c}}}}}{{B`{f}}}Cb}0{{{f{Bj{Lb{c}}}}}{{f{Bj{In{c}}}}}Cb}{{{f{Ib}}}Jn}{{}Fj}000000{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{{GdGd}Gd}{{IbIb}Ib}{{{f{Gd}}Gd}d}{{{f{Ib}}Ib}d}{{}c{}}000000{Gdc{}}{Ibc{}}{{{f{Gd}}}d}{{{f{Ib}}}d}{{{f{{In{c}}}}}dCb}21{{{f{{In{c}}}}}JnCb}111{{{f{Gd}}}{{ACl{Gd}}}}{{{f{Ib}}}{{ACl{Ib}}}}{{{f{Gd}}}{{ACn{Gd}}}}{{{f{Ib}}}{{ACn{Ib}}}}{{}d}{{}{{f{{ADb{AD`}}}}}}{{{f{Fb}}}{{B`{Kn}}}}{{{f{{In{c}}}}}{{B`{Kn}}}Cb}{{{In{c}}}{{In{c}}}Cb}{{{In{c}}B`}{{In{c}}}Cb}{{{f{{In{c}}}}{In{c}}}{{ADd{c}}}Cb}4321{{{In{c}}}{{Lb{c}}}Cb}{GdGd}{IbIb}{{{f{{Lb{c}}}}}{{Lf{{In{c}}}}}Cb}{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{{{f{BjGd}}Gdd}b}{{{f{BjIb}}Ibd}b}{{{f{Bj{In{c}}}}{B`{I`}}}bCb}{{{f{Bj{In{c}}}}d}bCb}{{{f{BjIb}}d}b}{{{f{Bj{In{c}}}}Ib}bCb}{{{f{Bj{In{c}}}}B`}bCb}033{{{f{Bj{In{c}}}}Jn}bCb}{{{f{BjIb}}Jn}b}{{{In{c}}Jn}{{In{c}}}Cb}{{{In{c}}{B`{Jn}}}{{In{c}}}Cb}{{GdGd}Gd}{{IbIb}Ib}>=10{{{Lb{c}}}{{In{c}}}Cb}{fc{}}0000{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{{{f{{Lb{c}}}}}{{B`{{Lf{{In{c}}}}}}}Cb}{{{f{{Lb{c}}}}}{{B`{{J`{{In{c}}}}}}}Cb}{fOd}000000:9{{{f{{Lb{c}}}}}{{f{{ADf{Fb}}}}}Cb}{{}c{}}000000{ACjACj}0{{{f{{Lb{c}}}}}{{J`{{In{c}}}}}Cb}````{{fh}b}{{{f{{ADh{c}}}}Fj}{{Hh{{ADh{c}}{ADh{c}}}}}Ih}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{B`{{f{c}}}}}}}}}}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{f{c}}}}}}}}{{ADje}g{}{{Hd{}{{Bb{c}}}}}{}}0{{{f{If}}}{{f{ADl}}}}{{{f{{ADh{c}}}}}{{f{ADl}}}Ih}{{{f{Bj{ADh{c}}}}}{{f{BjADl}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{{ADh{c}}}}Fj}dIh}{{{f{{ADh{c}}}}}{{ADh{c}}}{IhA@n}}{{f{f{Bjc}}}b{}}{fb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{{ADh{c}}}}}{{f{ADj}}}Ih}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADh{c}}}}{f{BjGl}}}Gn{IhADn}}{cc{}}{{{G`{c}}}{{ADh{c}}}Ih}{{FjADj}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}Fj}{{B`{{f{c}}}}}Ih}{{}ADj}{{{f{Hf}}{f{{ADh{c}}}}{f{{ADh{c}}}}}{{ADh{c}}}Ih}{{ADj{f{Hf}}cc}{{ADh{e}}}{}Ih}{{{f{Hf}}{f{{ADh{c}}}}e}{{ADh{c}}}Ih{}}{{{f{Hf}}c{f{{ADh{e}}}}}{{ADh{e}}}{}Ih}{{}Fj}{{}c{}}{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}Fj}dIh}0{{fFj}d}{{{f{{ADh{c}}}}}{{AEb{egAE`}}}Ih{}{}}{{{f{{ADh{c}}}}}{{AEb{{f{c}}{AEd{c}}AE`}}}Ih}{{{f{{ADh{c}}}}}FjIh}0`{db}{{{f{Bj{ADh{c}}}}{B`{Hf}}}bIh}{{{f{Bj{ADh{c}}}}FjFj}bIh}{{fFjFj}c{}}01{{{f{{ADh{c}}}}Fj}{{Hh{{Fd{H`}}{Fd{H`}}}}}Ih}0{{{f{If}}}{{Fd{If}}}}{{{f{{ADh{c}}}}}{{Fd{H`}}}Ih}{fc{}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{B`{{f{c}}}}e}}}}}}}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{f{c}}e}}}}}}}}{{ADjg}{{Ob{ie}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{}}0{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{If}}}{{f{Dh}}}}{{}{{f{Dh}}}}{{{f{{ADh{c}}}}}{{B`{{f{Hf}}}}}Ih}{{{f{{ADh{c}}}}Fj}{{f{c}}}Ih}0{{{f{{ADh{c}}}}Fj}eIh{}}{{{f{{ADh{c}}}}}{{AEd{c}}}Ih}{{{f{{ADh{c}}}}}eIh{}}{{}c{}}{{{f{{ADh{c}}}}{B`{Hf}}}{{Fd{H`}}}Ih}{{{ADh{c}}{B`{Hf}}}{{ADh{c}}}Ih}0`{{{f{Bj{AEf{c}}}}}bIh}0{{{f{Bj{AEf{c}}}}{B`{c}}}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}bIh}{{{f{Bj{AEf{c}}}}c}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}{{Ah{b}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}{{AEf{c}}}Ih}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{AEf{c}}}{{AEh{c}}}Ih}{cc{}}{{{f{{AEf{c}}}}BhFjFj}{{Fd{AAn}}}Ih}{{}Fj}{{}c{}}{{BhFj}{{AEf{c}}}Ih}{{{f{Bj{AEf{c}}}}}AfIh}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5````{{{f{BjAEj}}}b}{{{f{BjAEj}}{B`{{f{ADl}}}}}b}{{{f{BjAEj}}{f{ADl}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{AEl}}{f{BjGl}}}Gn}{cc{}}{{{f{AEj}}BhFjFj}{{Fd{AAn}}}}{{BhFj}{{Fd{AEj}}}}{{}AEn}{{}ADj}{{}Fj}{{}c{}}{{}d}`{{AF`AEnADj}b}{{{f{BjAEj}}}Af}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6````````````````````````````````````````````{{fh}b}{{{f{AFb}}}n}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cf{{B`{e}}}{{Cd{{B`{c}}}}}}Ch}}{{{f{AFh}}{f{Cf}}}AFh}{{{f{AFh}}{f{Cf}}}{{l{c}}}Cb}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Bj{Dn{g}}}}}b{}{}{}{{Cf{{B`{e}}{f{g}}}{{Cd{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cf{e}{{Cd{c}}}}Ch}}{{{f{AFj}}Ef}Eh}{{{f{AFj}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{AFl}}}{{Ah{Eh}}}}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AFn}}{f{E`}}}{{Ah{Af}}}}0{{{f{AFn}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AG`}}}AG`}{{f{f{Bjc}}}b{}}{fb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{AG`}}{f{AG`}}}d}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{Af}}}}{{{f{AGd}}}{{Ah{{Hh{Af{AGf{Md}}}}}}}}`{{{f{AGh}}c}{{Ah{AGh}}}{}}{{{f{AGj}}{f{Gh}}}{{Ah{{l{c}}}}}Cb}`{{{f{AG`}}{f{BjGl}}}Gn}{cc{}}`{{BhcFj}AGl{}}{{BhFj}AGn}`{{{f{AH`}}Fj}{{Ah{Hn}}}}{{{f{AH`}}Fj}Hn}{{{f{{AHb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AG`}}{f{Bjc}}}bABf}{{}Fj}{{}c{}}{{{f{AG`}}}d}{{{f{AHd}}}{{Ah{Gh}}}}{{{f{AHf}}}{{Ah{Gh}}}}66{{{f{AFb}}}{{B`{c}}}{}}{{{f{AFb}}}{{B`{n}}}}{{{f{AHh}}}{{B`{c}}}{}}2{{{f{AFb}}}{{B`{{Hh{cc}}}}}{}}{{{f{AFl}}}{{Ah{Fj}}}}{{{f{AHj}}FjFj}{{l{c}}}Cb}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{{AGf{Md}}}}}}{{{f{AHh}}nN`}{{Ah{{B`{c}}}}}{}}{{{f{AHl}}}AHl}{{{f{AHn}}{f{Cf}}Nb}{{Ah{Af}}}}`{{{f{AI`}}c{B`{e}}}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}}{{{f{AI`}}ci}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}{}{{Cf{{B`{e}}}{{Cd{{B`{g}}}}}}}}`{{{f{AI`}}{f{Gh}}{B`{c}}}{{Ah{AI`}}}{}}{{{f{AIb}}Md}{{l{c}}}Cb}{{{f{AId}}Mdc}{{l{e}}}{}Cb}`{{{f{AFj}}d}{{l{c}}}Cb}{{{f{AFj}}Ef}{{l{c}}}Cb}{{{f{AIf}}Dl}{{B`{n}}}}{{{f{AFb}}}{{B`{c}}}{}}{{{f{AIh}}{f{c}}}{{Ah{AIh}}}Nd}{{{f{AIj}}{f{c}}}AIjNd}{{{f{AIl}}}{{G`{{f{{Dn{Dl}}}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{AFl}}}{{Ah{AFl}}}}9{{}c{}}`{{{f{AIn}}{f{Gh}}{f{{l{c}}}}}{{Ah{{l{c}}}}}Cb}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}CbCb{{Cf{ff}{{Cd{}}}}}{{Cf{f}{{Cd{}}}}}{{Cf{f}{{Cd{}}}}}Cb}{{{l{c}}{l{e}}gik}{{l{m}}}CbCb{{Cf{}{{Cd{}}}}}{{Cf{}{{Cd{}}}}}{{Cf{}{{Cd{}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CbCbH`{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}CbCb{{AJ`{B`B`}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}g}bCbCb{{Cl{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}DbCbCb{{Cl{{f{BjDd}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CbCb{}{{Cl{}{{Cd{g}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}CbCb{H`AJb}{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}CbCbH`{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}CbCbH`{{Cl{}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}CbCb{{Cl{ff}{{Cd{{Fd{H`}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}CbCb{{Cl{ff}{{Cd{{Fd{H`}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}CbCb{}{}{{Cl{B`B`}{{Cd{{Ob{{B`{g}}i}}}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}CbCbCb{{AJd{B`B`B`}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}CbCbH`AJf{{Cl{ff}{{Cd{{Ob{gi}}}}}}}{{Cb{}{{Hb{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBh}{{Ob{{l{m}}i}}}CbCbH`AJf{{Cl{ff}{{Cd{{Ob{gi}}}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Ob{{l{c}}g}}}CbCbAJf{{Cl{ff}{{Cd{{Ob{{Fd{H`}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Ob{{l{o}}k}}}CbCbCb{}{}{{Cl{B`B`B`}{{Cd{{Ob{{B`{i}}k}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{B`}{{Cd{{Ob{{B`{e}}g}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{}{{Cd{{Ob{eg}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{H`AJb}AJf{{Cl{f}{{Cd{{Ob{eg}}}}}}}{{Cb{}{{Hb{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Cb{{AJh{B`}}}Cb}{{{f{{l{c}}}}e}{{l{g}}}CbAJhCb}{{{f{{l{c}}}}g}{{l{i}}}CbH`{{Cl{f}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}{{{l{c}}g}{{l{i}}}CbH`{{Cl{}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Cb{H`AJb}{{Cl{f}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}0{{{f{{l{c}}}}}FjA`}0{{JnJn}Jn}{{{f{Eh}}I`}{{Ah{b}}}}{{{f{{AJj{I`}}}}I`}{{Ah{b}}}}{{{f{{Dn{Ej}}}}{f{{Dn{d}}}}{f{{Dn{d}}}}}{{Ah{AJl}}}}{{{f{{Dn{Ej}}}}{f{{Dn{d}}}}{f{{Dn{d}}}}}{{Ah{{AJn{Md}}}}}}{{Bh{f{{Dn{Ej}}}}{f{{Dn{d}}}}{f{{Dn{d}}}}}{{Ah{AK`}}}}{{Bh{f{{Dn{Af}}}}}{{Ah{AK`}}}}{{{f{Af}}}{{Ah{Fn}}}}{{{f{{Dn{Af}}}}}{{Ah{AJl}}}}{{{f{{Dn{Af}}}}}{{Ah{AK`}}}}00````{{fh}b}{{{f{{l{c}}}}eAKbd}{{G`{I`}}}Cb{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AKb}}}AKb}{{f{f{Bjc}}}b{}}{fb}{{}AKb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{AKb}}{f{AKb}}}d}{{f{f{c}}}d{}}0{{{f{AKb}}{f{BjGl}}}Gn}{cc{}}{{{f{AKb}}{f{Bjc}}}bABf}{{}Fj}{{}c{}}{{{f{{Dn{f}}}}cI`e}{{G`{I`}}}{{Bf{}{{Bb{B`}}}}}{{Cf{fFjf}{{Cd{d}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5`{{Fj{f{Bj{G`{d}}}}}b}```{{{f{AKd}}FjFj}AKd}0{{Fj{f{{Dn{Ej}}}}{f{BjEl}}}{{Ah{{AKf{Eh}}}}}}```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Ef}}}Ef}{{{f{El}}}El}{{f{f{Bjc}}}b{}}0{fb}0{{}Ef}{{}El}{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0``{Fjb}0{{{f{Ef}}{f{Ef}}}d}{{{f{El}}{f{El}}}d}{{f{f{c}}}d{}}000{{{f{Ef}}{f{BjGl}}}Gn}{{{f{El}}{f{BjGl}}}Gn}{{{f{El}}}Ef}{cc{}}{{{f{Ef}}}El}1{{{f{Ef}}{f{Bjc}}}bABf}{{{f{El}}{f{Bjc}}}bABf}{{}Fj}0{{}c{}}0``````{{}Ef}{{}El}``{{{f{AKd}}FjFj}AKd}0{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077{{Efd}Ef}{{Eld}El}1010{{Elc}El{{Hd{}{{Bb{d}}}}}}210{EfEf}{ElEl}`{AKhMd}00{{}d}??0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000000000000000000000000{{{f{Eb}}}d}{{{f{Jd}}{f{Jd}}}c{}}{{GhGh}c{}}{{{f{Gh}}{f{Gh}}}c{}}{{{f{Db}}{f{Db}}}c{}}{{DbDb}c{}}{{{f{Db}}{f{Dh}}}c{}}{{{f{En}}{f{En}}}c{}}{{EnEn}c{}}{{{f{En}}{f{{Dn{Dl}}}}}c{}}{{{f{Hn}}{f{Hn}}}Hn}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Db}}{f{Af}}}{{Ah{Af}}}}{{{f{En}}{f{Af}}}{{Ah{Af}}}}{{{f{Gh}}{f{Af}}}{{Ah{Af}}}}{{{f{Eb}}{f{Al}}}Af}{{{f{Gh}}{f{Al}}}Af}{{{f{Db}}{f{Al}}}Af}{{{f{En}}{f{Al}}}Af}{{{f{{AEh{c}}}}{f{Al}}}AfIh}{{{f{Gh}}}d}{{{f{Gh}}}{{B`{d}}}}{{{f{Eb}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Eb}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Eb}}c}Eb{{Cf{{B`{Af}}}{{Cd{{B`{Af}}}}}}Ch}}{{{f{Gh}}c}Gh{{Cf{{B`{d}}}{{Cd{{B`{d}}}}}}Ch}}{{{f{Db}}c}Db{{Cf{{B`{{f{Dh}}}}}{{Cd{{B`{{AKl{Dh}}}}}}}}Ch}}{{{f{En}}c}En{{Cf{{B`{{f{{Dn{Dl}}}}}}}{{Cd{{B`{{AKl{{Dn{Dl}}}}}}}}}}Ch}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cf{{B`{{f{c}}}}}{{Cd{{B`{c}}}}}}Ch}}{{{f{Eb}}c}Eb{{Cl{Cj}{{Cd{Af}}}}}}{{{f{Eb}}e}{{l{g}}}{}{{Cl{{B`{Cj}}}{{Cd{{B`{c}}}}}}Ch}Cb}{{{f{AKn}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{AL`}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{Gh}}{f{Cf}}}Gh}{{{f{Db}}{f{Cf}}}Db}{{{f{En}}{f{Cf}}}En}{{{f{Gh}}{f{Cf}}}{{l{c}}}Cb}{{{f{Db}}{f{Cf}}}{{l{c}}}Cb}{{{f{En}}{f{Cf}}}{{l{c}}}Cb}{{{f{Db}}c}Db{{Cl{{f{Dh}}}{{Cd{{f{Dh}}}}}}}}{{{f{En}}c}En{{Cl{{f{{Dn{Dl}}}}}{{Cd{{f{{Dn{Dl}}}}}}}}}}{{{f{Eb}}{f{Cf}}}{{Ah{Eb}}}}{{{f{Eb}}e{f{Bj{Dn{c}}}}}b{}{{Cf{{B`{Af}}{f{c}}}{{Cd{c}}}}}}{{{f{Gh}}e{f{Bj{Dn{c}}}}}b{}{{Cf{{B`{d}}{f{c}}}{{Cd{c}}}}}}{{{f{Db}}e{f{Bj{Dn{c}}}}}b{}{{Cf{{B`{{f{Dh}}}}{f{c}}}{{Cd{c}}}}}}{{{f{En}}e{f{Bj{Dn{c}}}}}b{}{{Cf{{B`{{f{{Dn{Dl}}}}}}{f{c}}}{{Cd{c}}}}}}{{{f{{AEh{c}}}}g{f{Bj{Dn{e}}}}}bIh{}{{Cf{{B`{{f{c}}}}{f{e}}}{{Cd{e}}}}}}{{{f{Eb}}c}Eb{{Cf{Af}{{Cd{Af}}}}Ch}}{{{f{Gh}}c}Gh{{Cf{d}{{Cd{d}}}}Ch}}{{{f{Db}}c}Db{{Cf{{f{Dh}}}{{Cd{{AKl{Dh}}}}}}Ch}}{{{f{En}}c}En{{Cf{{f{{Dn{Dl}}}}}{{Cd{{AKl{{Dn{Dl}}}}}}}}Ch}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cf{{f{c}}}{{Cd{c}}}}Ch}}{{{f{Db}}c}Db{{Cl{Ed{f{Dh}}}{{Cd{Ed}}}}Ch}}{{{f{Gh}}Ef}Eh}{{{f{Db}}Ef}Eh}{{{f{En}}Ef}Eh}{{{f{AK`}}Ef}Eh}{{{f{Gh}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{Db}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{En}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{AK`}}{f{{Dn{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{Gh}}}{{Ah{Eh}}}}{{{f{Db}}}{{Ah{Eh}}}}{{{f{En}}}{{Ah{Eh}}}}{{{f{{AEh{c}}}}}{{Ah{Eh}}}Ih}{eALb{}{{Hd{}{{Bb{c}}}}}}0{{ADje}ALd{}{{Hd{}{{Bb{c}}}}}}0{{{f{Db}}}En}{{{f{Hn}}}Hn}{{{f{E`}}}{{f{E`}}}}{{{f{Mj}}}{{f{E`}}}}{{{f{ALf}}}{{f{E`}}}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{{f{{Dn{c}}}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{Eb}}{f{{l{c}}}}{f{{l{e}}}}g}EbCbCb{{Cl{{B`{Cj}}B`B`}{{Cd{{B`{Af}}}}}}}}{{GhGh}c{}}{{{f{Gh}}{f{Gh}}}c{}}0110{f{{f{c}}}{}}000000000000000000000000000000000000{{{f{Bj}}}{{f{Bjc}}}{}}000000000000000000000000000000000000{E`{{Fd{E`}}}}{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{Hn}}{f{E`}}}d}{{{f{AMf}}{f{E`}}}{{Ah{Af}}}}0{{{f{Hn}}{f{E`}}}Hn}{{{f{E`}}E`}E`}{{{f{Eb}}{f{E`}}}{{Ah{Af}}}}{{{f{Gh}}{f{E`}}}{{Ah{Af}}}}{{{f{Db}}{f{E`}}}{{Ah{Af}}}}{{{f{En}}{f{E`}}}{{Ah{Af}}}}{{{f{AK`}}{f{E`}}}{{Ah{Af}}}}{{{f{AMf}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Jd}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Eb}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Gh}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Db}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{En}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AK`}}{f{E`}}Ff}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}0000{{{f{AKn}}{f{Af}}}{{Ah{Af}}}}{{{f{AL`}}{f{Af}}}{{Ah{Af}}}}{{{f{{AMh{ce}}}}}{{AMh{ce}}}CbCb}{{{f{AMj}}}AMj}{{{f{Hn}}}Hn}{{{f{AMl}}}AMl}{{{f{E`}}}E`}{{{f{AMn}}}AMn}{{{f{Mj}}}Mj}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{M`}}}M`}{{{f{Mh}}}Mh}{{{f{ANf}}}ANf}{{{f{ANh}}}ANh}{{{f{Lh}}}Lh}{{{f{Mb}}}Mb}{{{f{D`}}}D`}{{{f{Cn}}}Cn}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{Df}}}Df}{{{f{Dj}}}Dj}{{{f{ANn}}}ANn}{{{f{An}}}An}{{{f{AO`}}}AO`}{{{f{AOb}}}AOb}{{{f{AOd}}}AOd}{{{f{AOf}}}AOf}{{{f{AOh}}}AOh}{{{f{AOj}}}AOj}{{{f{ADj}}}ADj}{{{f{AOl}}}AOl}{{f{f{Bjc}}}b{}}0000000000000000000000000000000{fb}0000000000000000000000000000000{{{f{AOh}}{f{AOh}}}AOn}{{{f{BjMj}}E`}b}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}{{{f{E`}}}d}{{{f{ADj}}}d}11{B@bE`}{{}Hn}{{}AMl}{{}E`}{{}ADj}{{{f{{AMh{ce}}}}}{{f{g}}}CbCb{}}{Fj{{f{c}}}{}}000000000000000000000000000000000000{Fj{{f{Bjc}}}{}}{{{f{Bj{AMh{ce}}}}}{{f{Bjg}}}CbCb{}}111111111111111111111111111111111111{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{Fjb}000000000000000000000000000000000000{{{f{AMf}}}{{f{E`}}}}{{{f{Jd}}}{{f{E`}}}}{{{f{Hn}}}E`}{{{f{Mj}}}{{f{E`}}}}``{{{f{Hn}}{f{Hn}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{E`}}{f{ADj}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{AN`}}{f{AN`}}}d}{{{f{AOh}}{f{AOh}}}d}{{{f{AOj}}{f{AOj}}}d}{{{f{ADj}}{f{ADj}}}d}{{{f{AOl}}{f{AOl}}}d}{{{f{Hn}}{f{Hn}}d}d}{{{f{Eb}}{f{Eb}}}Gh}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{Db}}{f{Dh}}}Gh}{{{f{En}}{f{{Dn{Dl}}}}}Gh}{{{f{En}}{f{En}}}Gh}543210{{f{f{c}}}d{}}0000000000000000000{{{f{Eb}}}{{Ah{{Hh{Af{AGf{Md}}}}}}}}{{{f{{AMh{ce}}}}}MjCbCb}{{{f{Gh}}d}{{Ah{Gh}}}}{{{f{En}}{f{{Dn{Dl}}}}}{{Ah{En}}}}{{{f{Db}}{f{Gh}}}{{Ah{{l{Df}}}}}}{{{f{En}}{f{Gh}}}{{Ah{{l{Dj}}}}}}{{{f{{AEh{c}}}}{f{Gh}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{Eb}}{f{BjGl}}}Gn}{{{f{Db}}{f{BjGl}}}Gn}{{{f{En}}{f{BjGl}}}Gn}{{{f{{AEh{c}}}}{f{BjGl}}}GnIh}{{{f{AMj}}{f{BjGl}}}Gn}{{{f{Hn}}{f{BjGl}}}Gn}0{{{f{AMl}}{f{BjGl}}}Gn}{{{f{E`}}{f{BjGl}}}Gn}0{{{f{AMn}}{f{BjGl}}}Gn}{{{f{Mj}}{f{BjGl}}}Gn}{{{f{AN`}}{f{BjGl}}}Gn}0{{{f{AOh}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{AOj}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{ADj}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{AOl}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{Eb}}c}b{{Cl{{B`{Cj}}}}}}{cc{}}000000{cHnB@h}1{{{f{{Dn{Dl}}}}}Hn}{{{f{Dh}}}Hn}{{{B`{c}}}Hn{{B@j{Hn}}}}{dHn}55{{{f{ADj}}}E`}{{{f{Hn}}}E`}{HnE`}88{{{f{Hn}}}Mj}{{{f{B@l}}}Mj}:{{{f{AOl}}}AN`};;;;;;;;;;;;;;;;;;;;;;;{B@nADj}{BA`ADj}={{{f{ADj}}d}E`}{cEb{{Hd{}{{Bb{{B`{Ej}}}}}}}}{eEb{{BAb{Af}}}{{Hd{}{{Bb{c}}}}}}{cEb{{Hd{}{{Bb{{B`{Af}}}}}}}}{cEb{{Hd{}{{Bb{{B`{{Fd{H`}}}}}}}}}}{cGh{{Hd{}{{Bb{d}}}}}}{eDb{{Kh{Dh}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eDb{{`{Dh}}}{{Hd{}{{Bb{c}}}}}}{eEn{{`{{Dn{Dl}}}}}{{Hd{}{{Bb{c}}}}}}{eEn{{Kh{{Dn{Dl}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{e{{AEh{c}}}Ih{{Hd{}{{Bb{{B`{c}}}}}}}}{{Bhc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bhe}Db{{Kh{Dh}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}En{{Kh{{Dn{Dl}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{{B`{c}}}}}}}}<;98765{eAK`{{Kh{{Dn{Dl}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eAK`{{`{{Dn{Dl}}}}}{{Hd{}{{Bb{c}}}}}}6{{Bhc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bhe}Db{{Kh{Dh}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}En{{Kh{{Dn{Dl}}}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{c}}}}}}{cEb{{Hj{}{{Bb{{B`{Af}}}}}}}}{cGh{{Hj{}{{Bb{{B`{d}}}}}}}}{cGh{{Hj{}{{Bb{d}}}}}}{eDb{{`{Dh}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{eDb{{Kh{Dh}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEn{{Kh{{Dn{Dl}}}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEn{{`{{Dn{Dl}}}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{{cBhE`}Eb{{Hj{}{{Bb{{B`{Af}}}}}}}}{{Bh{f{{Dn{d}}}}}Gh}{{Bh{f{{Dn{c}}}}}Db{{Kh{Dh}}}}{{Bh{f{{Dn{c}}}}}En{{Kh{{Dn{Dl}}}}}}{{Bh{f{{Dn{c}}}}}{{AEh{c}}}Ih}{{Bh{f{{Dn{{B`{d}}}}}}}Gh}{{Bh{f{{Dn{{B`{c}}}}}}}Db{{Kh{Dh}}}}{{Bh{f{{Dn{{B`{c}}}}}}}En{{Kh{{Dn{Dl}}}}}}{{Bh{f{{Dn{{B`{c}}}}}}}{{AEh{c}}}Ih}{cGh{{Hl{}{{Bb{{B`{d}}}}}}}}{{{G`{c}}ADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{G`{c}}ADj}{{AJb{}{{ALh{e}}{ALj{c}}{ALl{g}}}}}{ALn{AM`{e}}}A@n{{Gf{}{{Bb{e}}}}HlJfJh}}{{FjcADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{Bh{f{Af}}Fj}Eb}{{BhdFj}Gh}{{Bh{f{Dh}}Fj}Db}{{Bh{f{{Dn{Dl}}}}Fj}En}{{Bh{f{{Dn{Dl}}}}Fj}AK`}{{BhcFj}{{AEh{c}}}Ih}{{FjADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{BhFj}Eb}{{BhFj}Gh}{{BhFj}Db}{{BhFj}En}{{BhFj}AK`}{{BhFj}{{AEh{c}}}Ih}{{BhFj{f{E`}}}Eb}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fj}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{AOhIl}{AOj{{B`{Il}}}}{{{f{Jd}}Fj}{{Ah{Hn}}}}{{{f{AMf}}Fj}{{Ah{Hn}}}}0{{{f{Eb}}Fj}{{Ah{Hn}}}}{{{f{Gh}}Fj}{{Ah{Hn}}}}{{{f{Db}}Fj}{{Ah{Hn}}}}{{{f{En}}Fj}{{Ah{Hn}}}}{{{f{AK`}}Fj}{{Ah{Hn}}}}{{{f{{AEh{c}}}}Fj}{{Ah{Hn}}}Ih}{{{f{Jd}}Fj}Hn}{{{f{AMf}}Fj}Hn}0{{{f{Eb}}Fj}Hn}{{{f{Gh}}Fj}Hn}{{{f{Db}}Fj}Hn}{{{f{En}}Fj}Hn}{{{f{AK`}}Fj}Hn}{{{f{{AEh{c}}}}Fj}HnIh}{{{f{Eb}}Fj}{{B`{Af}}}}{{}E`}00000000000000000000000{{{f{Eb}}}Af}{{{f{{AEh{c}}}}Fj}{{B`{{f{If}}}}}Ih}0{{AOjIl}Il}{{AOjc}Il{{Cf{}{{Cd{Il}}}}}}{{{f{Hn}}}{{B`{{f{Dh}}}}}}{{{f{BAf}}Fj}Hn}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fj}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{Eb}}}Fj}{{{f{Db}}}Fj}{{{f{AK`}}}Fj}{{{f{Eb}}dd}{{Ah{Al}}}}{{{f{Gh}}dd}{{Ah{Al}}}}{{{f{Db}}dd}{{Ah{Al}}}}{{{f{En}}dd}{{Ah{Al}}}}{{{f{AK`}}dd}{{Ah{Al}}}}{{{f{{AEh{c}}}}dd}{{Ah{Al}}}Ih}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{Db}}{f{Dh}}}Gh}{{{f{En}}{f{En}}}Gh}{{{f{En}}{f{{Dn{Dl}}}}}Gh}43210{{{f{Hn}}{f{Bjc}}}bABf}{{{f{AMl}}{f{Bjc}}}bABf}{{{f{E`}}{f{Bjc}}}bABf}{{{f{Mj}}{f{Bjc}}}bABf}{{{f{AN`}}{f{Bjc}}}bABf}{{{f{AOj}}{f{Bjc}}}bABf}{{{f{ADj}}{f{Bjc}}}bABf}{{{f{AOl}}{f{Bjc}}}bABf}{{{f{Hn}}{f{Bjc}}d}bABf}{{{f{Hn}}}I`}{E`E`}{{}Fj}000000000000000000000000000000000000{{{f{Eb}}}{{f{E`}}}}{{{f{E`}}}{{B`{{f{E`}}}}}}{{{f{ADj}}}{{B`{{f{ADj}}}}}}{{}c{}}000000000000000000000000000000000000{{}Ej}{{BAh{B`{Fj}}Fj}{{Ah{Jd}}}}{{BAh{B`{Fj}}Fj}Jd}{{{f{Eb}}}c{}}{{{f{Gh}}}c{}}{{{f{Db}}}c{}}{{{f{En}}}c{}}{{{f{AK`}}}c{}}{{{f{{AEh{c}}}}}eIh{}}{{BAjE`}{{Ah{Kn}}}}{JdAf}{BAhAf}{HnHn}{{{f{E`}}}d}00{{{f{Hn}}}d}1111010111101{{{f{ADj}}}d}121212022212222120{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{AEb{cgAE`}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}{{f{E`}}}}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{Db}}{f{Dh}}}Gh}{{{f{En}}{f{{Dn{Dl}}}}}Gh}{{{f{En}}{f{En}}}Gh}42310{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{E`}}{f{E`}}}{{Ah{d}}}}{{{f{AMl}}}{{B`{E`}}}}{{{f{E`}}}{{Ah{E`}}}}{{{f{Gh}}}{{B`{d}}}}{{{f{E`}}}{{Ah{Kn}}}}{{{f{En}}}{{B`{{f{{Dn{Dl}}}}}}}}{{{f{Gh}}}Kn}{{{f{Db}}}Kn}{{{f{En}}}Kn}{{{f{Gh}}}{{B`{n}}}}{{{f{AKn}}}{{B`{Ij}}}}{{{f{AL`}}}{{B`{n}}}}{{{f{AKn}}}Kn}{{{f{AL`}}}Kn}{{{f{E`}}{f{E`}}}{{Ah{E`}}}};:9876{{Bh{f{{Dn{Dl}}}}FjFj}Gh}{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Db}}}{{Ah{Fj}}}}{{{f{En}}}{{Ah{Fj}}}}{{{f{Mj}}}{{f{Bh}}}}`{{}c{}}00{{Bhc}Db{{Kh{{Dn{{B`{{f{Dh}}}}}}}}}}{{Bhc}Db{{Kh{{Dn{{f{Dh}}}}}}}}{{Bhc}Db{{Kh{{Dn{{B`{{AKl{Dh}}}}}}}}}}{{Bhc}Db{{Kh{{Dn{{AKl{Dh}}}}}}}}{{Bhc}En{{Kh{{Dn{{B`{{f{{Dn{Dl}}}}}}}}}}}}{{Bhc}En{{Kh{{Dn{{f{{Dn{Dl}}}}}}}}}}{{Bhc}En{{Kh{{Dn{{B`{{AKl{{Dn{Dl}}}}}}}}}}}}{{Bhc}En{{Kh{{Dn{{AKl{{Dn{Dl}}}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Kh{{Dn{{B`{c}}}}}}}}{{Bh{f{{Dn{c}}}}}{{AEh{c}}}Ih}{{BhE`}Mj}{IlAOh}{MdAOj}{IlAOj}{Bh{{AEh{c}}}Ih}{{{f{Eb}}FjFj}Eb}{{{f{Gh}}FjFj}Gh}{{{f{Db}}FjFj}Db}{{{f{En}}FjFj}En}{{{f{AK`}}FjFj}AK`}{{{f{{AEh{c}}}}FjFj}{{AEh{c}}}Ih}{{Bh{G`{c}}}{{AEh{c}}}Ih}{{Bh{G`{c}}Hf}{{AEh{c}}}Ih}{{{l{c}}}{{AMh{ec}}}CbCb}{{}AMn}{Ghc{}}{{{f{Gh}}}c{}}{{{f{Eb}}{f{Eb}}}Gh}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Dh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{En}}{f{En}}}Gh}{{{f{En}}{f{{Dn{Dl}}}}}Gh}543201{{{f{Gh}}}Fj}0{{{f{Eb}}}{{Ah{{AGf{Md}}}}}}:{{{f{Eb}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Db}}}{{`{{Ml{}{{Bb{{B`{{f{Dh}}}}}}}}}}}}{{{f{BjEb}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Db}}}{{`{{Mn{}{{Bb{{B`{{f{Dh}}}}}}}}}}}}{{{f{Hn}}{f{Hn}}}{{B`{AOn}}}}{{{f{AN`}}{f{AN`}}}{{B`{AOn}}}}{{{f{AOh}}{f{AOh}}}{{B`{AOn}}}}{{{f{{AMh{ce}}}}}{{f{{l{e}}}}}CbCb}{{{f{Jd}}}{{B`{Fj}}}}{{{f{{AMh{AO`Jb}}}}}{{B`{Fj}}}}{{{f{AKn}}nN`}{{Ah{{B`{Ij}}}}}}{{{f{AL`}}nN`}{{Ah{{B`{n}}}}}}{{{f{AKn}}nN`}{{Ah{Kn}}}}{{{f{AL`}}nN`}{{Ah{Kn}}}}{{BhFjn}{{Ah{Gh}}}}{{{f{Eb}}}Eb}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}0000002{{{f{Gh}}}Gh}{{{f{Db}}}Db}{{{f{En}}}En}{{{f{AK`}}}AK`}{{{f{{AEh{c}}}}}{{AEh{c}}}Ih}`{{{f{Jd}}}Fj}{{{f{{AMh{AO`Jb}}}}}Fj}{{{f{Gh}}c{B`{d}}}{{Ah{Gh}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Db}}c{B`{{f{Dh}}}}}{{Ah{Db}}}{{Hd{}{{Bb{I`}}}}}}{{{f{En}}c{B`{{f{{Dn{Dl}}}}}}}{{Ah{En}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Gh}}ce}{{Ah{Gh}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{d}}}{{Cd{{B`{d}}}}}}}}{{{f{Db}}ce}{{Ah{Db}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{{f{Dh}}}}}{{Cd{{B`{Dd}}}}}}}}{{{f{En}}ce}{{Ah{En}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{{f{{Dn{Dl}}}}}}}{{Cd{{B`{{G`{Dl}}}}}}}}}}{{{f{Gh}}{f{Gh}}{B`{d}}}{{Ah{Gh}}}}{{{f{Db}}{f{Gh}}{B`{{f{Dh}}}}}{{Ah{Db}}}}{{{f{En}}{f{Gh}}{B`{{f{{Dn{Dl}}}}}}}{{Ah{En}}}}{{{f{BjEb}}}b}{{{f{BjEb}}E`}b}{{{f{BjMj}}Bh}b}{{{f{Eb}}Md}Eb}{{{f{Gh}}Md}Gh}{{{f{Db}}Md}Db}{{{f{En}}Md}En}{{{f{AK`}}Md}AK`}{{{f{{AEh{c}}}}Md}{{AEh{c}}}Ih}{{{f{Eb}}Md{B`{{f{Af}}}}}Eb}{{{f{Gh}}Md{B`{d}}}Gh}{{{f{Db}}Md{B`{{f{Dh}}}}}Db}{{{f{En}}Md{B`{{f{{Dn{Dl}}}}}}}En}{{{f{AK`}}Md{B`{{f{{Dn{Dl}}}}}}}AK`}{{{f{{AEh{c}}}}Md{B`{{Id{c}}}}}{{l{{Id{c}}}}}Ih}{{{f{Gh}}d}Gh}{{{f{Db}}d}Db}{{{f{En}}d}{{l{Dj}}}}{{{f{AK`}}d}AK`}{{{f{Gh}}Ef}{{l{An}}}}{{{f{Db}}Ef}{{l{Df}}}}{{{f{En}}Ef}{{l{Dj}}}}{{{f{AK`}}Ef}AK`}{{{f{AKn}}Dl}Kn}{{{f{AL`}}Dl}Kn}{{{f{Hn}}}{{AKl{Dh}}}}{{{f{Hn}}{f{E`}}}{{B`{Hn}}}}`{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Gh}}}{{B`{I`}}}}{{{f{Gh}}}Kn}{{{f{En}}}Kn}{{{f{Eb}}{f{Eh}}}Eb}{{{f{Eb}}{f{c}}}Eb{{Kh{{Dn{I`}}}}Nd}}{{{f{Db}}{f{c}}}Db{{Kh{{Dn{I`}}}}Nd}}{{{f{Db}}{f{Eh}}}Db}{{{f{En}}{f{c}}}En{{Kh{{Dn{I`}}}}Nd}}{{{f{En}}{f{Eh}}}En}{{{f{E`}}AMn}ADj}{{{f{Mj}}AMn}B@l}{AN`AOl}{{{f{E`}}BhAMn}B@l}{AN`{{f{Dh}}}}{{{f{Db}}Fj}{{Ah{Af}}}}{{ADjFjd}ADj}{{{f{BjEb}}E`}b}{{{f{ADj}}}{{f{ADj}}}}{{{f{Eb}}}{{Ah{Nl}}}}{fc{}}0000000000000000000000000000000{{{f{E`}}}E`}{{{f{ADj}}}BAl}{{{f{Jd}}Fj}{{Ah{{AKl{Jd}}}}}}{{{f{{AMh{AO`Jb}}}}Fj}{{Ah{{AKl{{AMh{AO`Jb}}}}}}}}{fDd}000{{{f{En}}}Db}{{{f{Hn}}{f{Hn}}}d}{{{f{Eb}}c}{{Ah{Eb}}}{{Cl{Cj}{{Cd{{Ah{Af}}}}}}}}{{{f{Eb}}e}{{Ah{{l{g}}}}}{}{{Cl{{B`{Cj}}}{{Cd{{Ah{{B`{c}}}}}}}}Ch}Cb}{g{{Ob{ALbe}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{{ADjg}{{Ob{ALde}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{{{f{Hn}}}{{Ah{c}}}Kl}{c{{Ob{e}}}{}{}}000000000000000000000000000000000{Md{{Ob{AOh}}}}111{{}{{Ob{c}}}{}}000000000000000000000000000000000000{{{f{Hn}}{f{E`}}}{{Ah{Hn}}}}{{{f{E`}}AMn}{{Ah{ADj}}}}{f{{Ob{GbBAn}}}}000{{{f{Eb}}{f{{l{c}}}}e}{{Ah{Eb}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{Ah{{B`{Af}}}}}}}}}}{fOd}000000000000000000000000000000000000{{{f{ADj}}}ADj}{{{f{Gh}}}{{Ah{Gh}}}}{{{f{Db}}}{{Ah{Db}}}}{{{f{En}}}{{Ah{En}}}}{{{f{{AEh{c}}}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fj}cA@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}0{{{f{E`}}Hn}d}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}gA@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{AKn}}Dl}Kn}{{{f{AL`}}Dl}Kn}{{{f{Gh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{Db}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{En}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AK`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}Ih}{{{f{Gh}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{Db}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{En}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{AK`}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}Ih}{{}c{}}000000000000000000000000000000000000{Fjc{}}0{Fj{{BBn{ce}}}{}{}}{{{f{{Dn{Of}}}}e}c{}{{Oh{{f{Eh}}}{{Cd{c}}}}}}{{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}{B`{Hf}}}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}Hn}{{{f{Eb}}{f{{l{c}}}}e}EbCb{{Cl{{B`{Cj}}B`}{{Cd{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AMb}}}d}{{AMbd}AMb}{{{f{BjBC`}}{B`{{f{Dh}}}}}b}{{{f{BjAMb}}{f{AMb}}}{{Ah{b}}}}{{{f{BjBC`}}}b}{{{f{BjBC`}}{f{Dh}}}b}{{{f{AMb}}Ef}Eh}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{AMb}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AMb}}}AMb}{{f{f{Bjc}}}b{}}{fb}{{}BCb}{Fj{{f{c}}}{}}000{Fj{{f{Bjc}}}{}}000{{BC`c}AMb{{Hd{}{{Bb{{B`{{f{Dh}}}}}}}}}}{Fjb}000{{{f{AMb}}}{{f{E`}}}}{{{f{AMb}}{f{AMb}}}c{}}{{{f{AMb}}{f{Db}}}c{}}{{{f{AMb}}{f{Dh}}}c{}}120{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{BC`AMb}{BCb{{Ld{BCd}}}}{cc{}}000{{B@dE`}AMb}{{B@d{Ld{BCd}}dBCf}AMb}{{B@dBCf}AMb}{{{f{Db}}{f{B@b}}BCf}{{Ah{AMb}}}}{{BhdFjBCf}AMb}{{{f{AMb}}Fj}{{Ah{Hn}}}}{{{f{AMb}}Fj}Hn}{{{f{AMb}}}{{f{{Ld{BCd}}}}}}<>=><={{}Fj}000{{}c{}}000{{}Ej}1{AMbAf}{{{f{AMb}}}d}0{{{f{AMb}}}BCh}{{{f{AMb}}}Fj}{{{f{AMb}}{f{AMb}}}c{}}{{{f{AMb}}{f{Dh}}}c{}}{{{f{AMb}}{f{Db}}}c{}}021{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{AMb}}}Kn}{{{f{BjBCb}}{f{{Ld{BCd}}}}}{{Ah{b}}}}1{{{f{AMb}}}{{Ah{Fj}}}}{{{f{AMb}}}{{f{Bh}}}}{{BhFjBCf}BC`}{{{Ld{BCd}}}BCb}{{{f{BjBCh}}}{{B`{c}}}{}}:9;:9;<{{{f{AMb}}}{{f{B@d}}}}{{{f{BjBC`}}{f{Dh}}}{{Hh{Lld}}}}`{{{f{BCh}}}{{Hh{Fj{B`{Fj}}}}}}{{{f{AMb}}d}AMb}{{{f{AMb}}Ef}AMb}`{{{f{AMb}}AMnd}Fn}{{{f{AMb}}{f{B@b}}BCj}AMb}{{{f{AMb}}}{{Ah{AMb}}}}{{{f{AMb}}}AMb}{fc{}}{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}0005{{{f{AMb}}}d}{{{f{AMb}}}{{Ah{BCl}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{B@bBCd}{{{f{BCf}}}BCf}{{{f{BCd}}}BCd}{{f{f{Bjc}}}b{}}0{fb}0{{}BCf}{{}BCd}{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0{Fjb}0{{{f{BCf}}{f{BCf}}}d}{{{f{BCd}}{f{Dh}}}{{B`{Ll}}}}{{{f{BCf}}{f{BjGl}}}Gn}{{{f{BCd}}{f{BjGl}}}Gn}{cc{}}0{{{f{BCd}}Ll}{{f{Dh}}}}{{{f{BCd}}}{{f{B@b}}}}{{{f{BCd}}Ll}{{B`{{f{Dh}}}}}}{{}Fj}0{{}c{}}0{{{f{BCd}}}d}0{{{f{BCd}}}Fj}{{{f{BCd}}{f{BCd}}}d}{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BCn}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{{}b}{{{f{BjBCn}}}b}{Fjb}2{cc{}}6{{}Fj}{{}c{}}=<;{{}d}1`{{{f{BjBD`}}Ll{f{BCd}}}{{Ah{{f{BjBD`}}}}}}{{{f{BjBD`}}}{{f{BjBD`}}}}{{{f{BjBD`}}{f{Dh}}}{{Ah{{f{BjBD`}}}}}}>=;:7{BD`AMb}765{{BhFj{Ld{BCd}}BCfd}BD`}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}9```````>>8````````````````````````{{{f{BDb}}}{{f{Dh}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0`{Fj{{f{c}}}{}}{{{f{BDb}}}f}1{Fj{{f{Bjc}}}{}}0{Fjb}0`{{{f{BDd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BDb}}{f{BjGl}}}{{Ob{bB@f}}}}0{cc{}}{cBDb{{B@j{{AKl{Dh}}}}}}1{{}{{Kd{{f{Dh}}BDd}{{Cd{b}}}}}}{{}Fj}0{{}c{}}0{cAKjAJf}{{{f{Dh}}}BDb}````{{{Kd{{f{Dh}}BDd}{{Cd{b}}}}}b}{cAKjBDf}{fDd}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{f{{Ob{GbBAn}}}}{fOd}099`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BDh}}}BDh}{{f{f{Bjc}}}b{}}{fb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{BjGl}}MfFj}Gn}{cc{}}{{}BDj}{{}BDh}{{}{{B`{Fj}}}}{{}Dd}{{}d}{{}Fj}{{}c{}}{{{B`{BDj}}}b}{BDhb}{{{B`{Fj}}}b}2{{{B`{d}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}8```````````{{fh}b}00{{{f{BjBCl}}{G`{Ej}}{f{BDl}}}{{Ah{b}}}}{{{f{BjBCl}}{G`{Af}}{f{BDl}}}{{Ah{b}}}}{{{f{BCl}}{f{Cf}}}{{G`{Ej}}}}0{{{f{BCl}}{f{Gh}}}{{Ah{BCl}}}}{{Fj{G`{Ej}}}BCl}{{{f{BCl}}{f{{Dn{Bh}}}}}{{Ah{BCl}}}}0{{{f{BCl}}{f{{Dn{Bh}}}}{f{BDl}}d}{{Ah{BCl}}}}{{{f{BCl}}MdFj}BCl}{{{f{BCl}}}BCl}{{{f{BCl}}{f{BCl}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{{{f{BjBCl}}}{{f{BjBCl}}}}0{{{f{BjBCl}}{BE`{BDn}}}{{Ah{b}}}}{{{f{BjBCl}}{f{Dh}}e}{{Ah{{f{BjBCl}}}}}BEb{{Oh{{f{Ej}}}{{Cd{c}}}}}}{{{f{BjBCl}}Fje}{{Ah{{f{BjBCl}}}}}BEb{{Oh{{f{Ej}}}{{Cd{c}}}}}}33{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{BCl}}}{{`{{Bf{}{{Bb{Fj}}}}}}}}:{{{f{BjBCl}}}b}{{{f{BEd}}}BEd}{{{f{BEf}}}BEf}={{f{f{Bjc}}}b{}}00{fb}00`{{{f{BCl}}{f{Dh}}}{{Ah{{f{Ej}}}}}}{{{f{BjBCl}}c}b{{Bf{}{{Bb{Ej}}}}}}{{{f{BCl}}e}{{Ah{{G`{{f{Ej}}}}}}}{{Kh{Dh}}}{{Hd{}{{Bb{c}}}}}}{{}BEf}{{}BCl}{Fj{{f{c}}}{}}0000{Fj{{f{Bjc}}}{}}0000{{{f{BCl}}{f{Af}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{Fjb}000{{{f{BCl}}{f{Dh}}}{{Ah{BCl}}}}1{{{f{BjBCl}}{f{Dh}}}{{Ah{Ej}}}}{{{f{BCl}}e}BCl{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{f{{BEh{Bh}}}}}BCl}{{{f{BCl}}{B`{{f{{Dn{c}}}}}}}{{Ah{BCl}}}{}}{{{f{BCl}}}{{G`{E`}}}}<{{{f{BEj}}}BCl}{{{f{BDl}}}BCl}{{{f{BEf}}{f{BEf}}}d}{{{f{BCl}}{f{BCl}}}d}00{{f{f{c}}}d{}}0{{{f{BCl}}}Fj}`{{{f{BCl}}e}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{G`{Ej}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}}{{G`{Mj}}}}{{{f{BCl}}AG`}{{Ah{BCl}}}}{{{f{BCl}}{f{Gh}}}{{Ah{BCl}}}}6{{{f{BEd}}{f{BjGl}}}Gn}{{{f{BEf}}{f{BjGl}}}Gn}{{{f{BCl}}{f{BjGl}}}Gn}0{cc{}}0000{cBCl{{Hd{}{{Bb{Af}}}}}}{cBCl{{Hd{}{{Bb{Ej}}}}}}{{{f{{Dn{BEl}}}}}{{Ah{BCl}}}}{{{f{{Dn{BEl}}}}{f{BDl}}}{{Ah{BCl}}}}{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{f{BEl}}}}}}}}{{{f{BCl}}Fj}{{B`{{G`{Hn}}}}}}{{{f{BCl}}{f{Dh}}}{{B`{Fj}}}}{{{f{BCl}}}{{G`{{f{Bh}}}}}}{{{f{BCl}}}{{G`{Bh}}}}{{{f{BCl}}}{{G`{{f{Dh}}}}}}{{{f{BCl}}}{{f{{Dn{Ej}}}}}}{{{f{BjBCl}}}{{f{Bj{G`{Ej}}}}}}{{{f{BCl}}Fj}{{Ah{BEl}}}}{{{f{BCl}}Fj{f{BjBEl}}}{{Ah{b}}}}{{{f{BCl}}Fj{f{BjBEl}}}b}{{{f{BCl}}}{{B`{{Ah{E`}}}}}}`{{{f{BCl}}e}{{Ah{BEn}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{{f{BCl}}{G`{Ej}}dd}{{Ah{BEn}}}}{{{f{BEf}}{f{Bjc}}}bABf}{{{f{BjBCl}}{B`{Nh}}}{{Ah{BBd}}}}{{{f{BCl}}{B`{Fj}}}BCl}{{{f{BCl}}}Fj}{{{f{BCl}}{f{{Dn{Ej}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{{Dn{Ej}}}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{{Dn{Ej}}}}}{{f{BjBCl}}}}{{{f{BCl}}{BF`{Fj}}}{{f{c}}}{}}{{{f{BCl}}Fj}{{f{c}}}{}}{{{f{BCl}}{BFb{Fj}}}{{f{c}}}{}}{{{f{BCl}}{BFd{Fj}}}{{f{c}}}{}}{{{f{BCl}}{BFf{Fj}}}{{f{c}}}{}}{{{f{BCl}}{Ln{Fj}}}{{f{c}}}{}}{{{f{BCl}}{f{Dh}}}{{f{c}}}{}}{{{f{BCl}}BFh}{{f{c}}}{}}{{}Fj}0000{{{f{BjBCl}}Fjc}{{Ah{{f{BjBCl}}}}}BEb}{{}c{}}000000{{{f{BCl}}}{{Ah{Gh}}}}{{{f{BCl}}}d}1{{{f{BCl}}}{{`{{Jj{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{BCl}}AMnd}BFj}{{{f{BCl}}}BFl}{{{f{BCl}}}Fj}4{{{f{BCl}}}{{Ah{{B`{Ej}}}}}}1{{{f{BCl}}BEd}{{Ah{{B`{Af}}}}}}1{{{f{BCl}}{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{BCl{f{Af}}}c{}}5{{{G`{Ej}}}{{Ah{BCl}}}}{{Fj{G`{Ej}}}BCl}{{{G`{Ej}}}BCl}22{{{G`{Ej}}Fj}{{Ah{BCl}}}}0{{{f{BjBFj}}}{{B`{c}}}{}}{{{f{BjBFl}}}{{B`{c}}}{}}{{{f{BCl}}}BCl}{{{f{BCl}}}{{`{{Ml{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}ed}{{Ah{{G`{BCl}}}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{BCle}{{Ah{c}}}{}{{Cf{BCl}{{Cd{{Ah{c}}}}}}}}{{{f{BjBCl}}e}{{Ah{c}}}{}{{Cf{{f{BjBCl}}}{{Cd{{Ah{c}}}}}}}}{{BClgc}{{Ah{e}}}{}{}{{Cf{BClc}{{Cd{{Ah{e}}}}}}}}{{{f{BjBCl}}}{{B`{Ej}}}}{{{f{BjBCl}}}b}{{BClAMn}{{BE`{{Fd{H`}}}}}}{{{f{BCl}}{f{Af}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BjBCl}}{f{Dh}}Bh}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{Dh}}c}{{Ah{{f{BjBCl}}}}}BFn}{{{f{BjBCl}}Fjc}{{Ah{{f{BjBCl}}}}}BEb}{{{f{BjBCl}}Bhc}{{Ah{{f{BjBCl}}}}}BFn}?`{{{f{BCl}}{f{Af}}dd{B`{Il}}}{{Ah{BCl}}}}0{{{f{BCl}}Fjdd{B`{Il}}}{{Ah{BCl}}}}{{{f{BCl}}}BDl}{{{f{BCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}e}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}Fj}{{B`{{f{Ej}}}}}}{{{f{BCl}}c}{{Ah{BCl}}}{{BG`{Fj}}}}{{{f{BCl}}c}{{Ah{{G`{Ej}}}}}{{BGb{Bh}}}}3{{{f{BCl}}e{f{BGd}}}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}e{f{BDl}}}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCl}}e}{{Ah{b}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCl}}Fj}b}{{{f{BCl}}}{{Hh{FjFj}}}}{{{f{BCl}}Md}BCl}{{{f{BCl}}}d}{{{f{BjBCl}}}b}{{{f{BCl}}}Fj}{{{f{BFj}}}{{Hh{Fj{B`{Fj}}}}}}{{{f{BFl}}}{{Hh{Fj{B`{Fj}}}}}}{{{f{BCl}}MdFj}BCl}00{{{f{BCl}}cEl}{{Ah{BCl}}}{{BGb{Bh}}}}{{{f{BjBCl}}cEl}{{Ah{{f{BjBCl}}}}}{{BGb{Bh}}}}{{{f{BCl}}Md}{{Hh{BClBCl}}}}0{{{f{BjBCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{BClFjd}{{G`{BCl}}}}{{{f{BCl}}{f{BCl}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{{{f{BCl}}BEd}{{Ah{{B`{Af}}}}}}{{{f{BCl}}{B`{Fj}}}BCl}{{{f{BCl}}{f{Eh}}}{{Ah{BCl}}}}{BCl{{G`{Ej}}}}{{{f{BCl}}{f{Eh}}}BCl}{{{f{BCl}}{f{Eh}}d}BCl}{{{f{BCl}}BGf}{{Ah{Nl}}}}{fc{}}00{fDd}{{{f{BjBCl}}{B`{{f{Dh}}}}{B`{{O`{Dd{G`{Dd}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{B`{{f{Dh}}}}{B`{{O`{Bh{G`{Bh}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{Dh}}e}{{Ah{{f{BjBCl}}}}}BEb{{Oh{{f{Af}}}{{Cd{{Ah{c}}}}}}}}{{{f{BjBCl}}Fje}{{Ah{{f{BjBCl}}}}}BEb{{Oh{{f{Ej}}}{{Cd{{Ah{c}}}}}}}}{{{f{BjBCl}}c}{{Ah{b}}}{{Hd{}{{Bb{{Ah{{BE`{{Fd{H`}}}}}}}}}}}}{{{f{BjBCl}}c}{{Ah{b}}}{{Hd{}{{Bb{{BE`{{Fd{H`}}}}}}}}}}{c{{Ob{e}}}{}{}}000{{{Hh{BGh{f{BEj}}}}}{{Ah{BCl}}}}{BGj{{Ah{BCl}}}}2{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{Ah{{f{BEl}}}}}}}}}}{{{f{BCl}}{f{Dh}}}{{Ah{Fj}}}}{{}{{Ob{c}}}{}}0000{f{{Ob{GbBAn}}}}{fOd}0000{{{f{BCl}}{B`{{f{{Dn{Dd}}}}}}BEf{B`{{Hh{MdFj}}}}}{{Ah{BCl}}}}{{{f{BCl}}d{B`{{G`{Bh}}}}BEf{B`{{Hh{MdFj}}}}}{{Ah{BCl}}}}1{{{f{BCl}}{f{BCl}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{BCl}}}b}{{}c{}}0000{{{f{BCl}}}Fj}{{{f{BjBCl}}c}{{Ah{{f{BjBCl}}}}}BEb}{{{f{BjBCl}}c{f{BDl}}}{{Ah{{f{BjBCl}}}}}BEb}{{{f{BjBCl}}Ej}{{f{BjBCl}}}}{{{f{BCl}}Bh{B`{I`}}}{{Ah{BCl}}}}{{{f{BjBCl}}Bh{B`{I`}}}{{f{BjBCl}}}}``````{{fh}b}0{{EjEj}c{}}{{{f{Ej}}c}e{AbKl}{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}c{}}{{{f{Ej}}{f{Al}}}Ej}0000000{{{f{Ej}}{f{Al}}nN`}Ej}{{{f{Ej}}{f{Al}}Dl}Ej}220{{{f{Ej}}}{{Ah{Kn}}}}{{{f{BjEj}}{f{Ej}}}{{Ah{{f{BjEj}}}}}}{{{f{Ej}}{f{Ej}}ceg}Ej{{Cf{{f{Af}}{f{Af}}}{{Cd{Af}}}}}{{Cf{{f{Kn}}{f{Af}}}{{Cd{Af}}}}}{{Cf{{f{Af}}{f{Kn}}}{{Cd{Af}}}}}}{{{f{Ej}}{f{Ej}}c}{{Ah{Ej}}}{{Cf{{f{Af}}{f{Af}}}{{Cd{Af}}}}}}{{{f{Ej}}c}Ej{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{Ej}}Ef}Eh}{{{f{Ej}}}Eb}{{{f{BGl}}}{{f{Af}}}}{{{f{Ej}}}{{f{Af}}}}{{{f{Ej}}}{{B`{{f{`}}}}}}{{{f{Ej}}}{{B`{{f{BGl}}}}}}{{{f{Ej}}}{{B`{{f{Af}}}}}}{{{f{BGl}}}Af}{{{f{Ej}}}{{Ah{{f{En}}}}}}{{{f{Ej}}}{{Ah{{f{AK`}}}}}}{{{f{Ej}}}{{B`{BGn}}}}{{EjEj}c{}}{{{f{Ej}}{f{Ej}}}{{Ah{Ej}}}}{{{f{Ej}}{f{Ej}}}c{}}210012{{{f{Ej}}}{{Ah{{f{Gh}}}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{BGl}}{f{E`}}}{{Ah{BGl}}}}{{{f{Ej}}{f{E`}}}{{Ah{Ej}}}}10{{{f{BGl}}{f{E`}}Ff}{{Ah{BGl}}}}{{{f{Ej}}{f{E`}}Ff}{{Ah{Ej}}}}{{{f{Ej}}}{{Ah{{f{AMb}}}}}}{{{f{Ej}}}Ej}{{{f{BGl}}}BGl}1{{f{f{Bjc}}}b{}}0{fb}0{{{f{Ej}}}{{Ah{{f{Jd}}}}}}{{}Ej}{Fj{{f{c}}}{}}0{Fj{{f{Bjc}}}{}}0{{{f{Ej}}c}e{AbKl}{}}{{EjEj}c{}}{{{f{Ej}}{f{Ej}}}c{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}{{Ah{Ej}}}}{Fjb}0<={{{f{BGl}}}{{f{E`}}}}{{{f{Ej}}}{{f{E`}}}}{{{f{Ej}}{f{Ej}}}d}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}011{{{f{Ej}}}{{Ah{Ej}}}}{{{f{BjEj}}{f{Ej}}}{{Ah{{f{BjEj}}}}}}{{{f{Ej}}HnFj}{{Ah{Ej}}}}{{{f{Ej}}}{{Ah{{f{AKn}}}}}}{{{f{Ej}}}{{Ah{{f{AL`}}}}}}{{{f{Ej}}}{{AKl{Mj}}}}{{{f{Ej}}AG`}{{Ah{Ej}}}}{{{f{Ej}}{f{Gh}}}{{Ah{Ej}}}}{{{f{BGl}}{f{BjGl}}}Gn}{{{f{Ej}}{f{BjGl}}}Gn}{cc{}}{AfEj}1{BGlEj}{{AfFj}BGl}{{BhFj{f{E`}}}Ej}{{{f{Ej}}FjFj}Ej}{{{f{Ej}}Fj}{{Ah{Hn}}}}{{{f{Ej}}}Ib}{{{f{Ej}}}{{B`{{Fd{Fb}}}}}}{{{f{Ej}}Fj}{{B`{{f{If}}}}}}{{{f{Ej}}Fj}Hn}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}0{{{f{BGl}}}d}{{{f{Ej}}}d}{{{f{Ej}}{B`{Fj}}}Ej}{{{f{Ej}}}{{Ah{{f{BBh}}}}}}{{{f{Ej}}}{{Ah{{f{BBj}}}}}}{{{f{Ej}}}{{Ah{{f{BBl}}}}}}{{{f{Ej}}}{{Ah{{f{BBf}}}}}}{{{f{Ej}}}{{Ah{{f{Eh}}}}}}{{{f{Ej}}}{{Ah{Eb}}}}{{}Fj}0{{}c{}}0{BEbEj}{BGlEj}{EjEj}{EjBCl}{{{f{BjEj}}}{{f{BjAf}}}}{BGlBGl}{{{f{BGl}}}d}{{{f{Ej}}}d}{{{f{Ej}}}{{Ah{Gh}}}}000{{{f{Ej}}}Gh}0{{{f{Ej}}}Jn}{{{f{BGl}}}{{B`{{f{Af}}}}}}{{{f{BGl}}}Fj}{{{f{Ej}}}Fj}{{{f{Ej}}}{{Ah{{f{Eb}}}}}}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}0{{{f{BjBGl}}c}b{{Cf{Kn}{{Cd{Kn}}}}}}{{{f{Ej}}c}Gh{{Cf{{f{Af}}}{{Cd{Gh}}}}}}{{{f{Ej}}}{{Ah{Kn}}}}{{{f{Ej}}}Kn}11{{Ejc}e{AbKl}{}}{{EjEj}c{}}{{{f{Ej}}c}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}c{}}:{{{f{Ej}}}{{Ah{Fj}}}}{{{f{BGl}}}{{f{Bh}}}}{{{f{Ej}}}{{f{Bh}}}}{{BhKnFj}BGl}{{Bhc}Ej{}}{{BhE`}BGl}{{Bh{f{E`}}}Ej}{{{f{Ej}}FjFj}Ej}{{BhKnFj}Ej}0{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}0{{{f{Ej}}}Fj}{{{f{Ej}}}{{Ah{Kn}}}}{{{f{Ej}}}BH`}1{{{f{Ej}}nN`}{{Ah{Kn}}}}{{{f{Ej}}}Ej}{{EjEj}c{}}{{{f{Ej}}{f{Ej}}}c{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}c}e{AbKl}{}}{{{f{BjBGl}}Bh}{{f{BjBGl}}}}{{{f{BjEj}}Bh}b}{{{f{Ej}}{f{{Dn{AOj}}}}}{{Ah{Ej}}}}{{{f{BGl}}Fj}BGl}8{{{f{Ej}}ndd{B`{Il}}}{{Ah{Ej}}}}{{{f{Ej}}Fjdd{B`{Il}}}{{Ah{Ej}}}}{{{f{BGl}}}{{f{Kn}}}}{{{f{BjEj}}Jn}b}{{{f{Ej}}Md}Ej}{{{f{BjEj}}}b}{{{f{Ej}}{B`{Il}}}Ej}{{{f{Ej}}MdFj}Ej}{{{f{Ej}}Ef}{{Ah{Ej}}}}0{{{f{Ej}}Md}{{Hh{EjEj}}}}{{{f{Ej}}Dl}{{Ah{Kn}}}}{{{f{Ej}}}{{Ah{{f{Db}}}}}}{{{f{BGl}}{f{E`}}}{{Ah{BGl}}}}{{{f{Ej}}{f{E`}}}{{Ah{Ej}}}}{{{f{Ej}}{f{Ej}}}c{}}{{Ejc}e{AbKl}{}}{{EjEj}c{}}{{{f{Ej}}c}e{AbKl}{}}{{{f{Ej}}}{{Ah{Kn}}}}{{{f{Ej}}{B`{Fj}}}Ej}{{{f{Ej}}{f{Eh}}}{{Ah{Ej}}}}{BGlAf}{EjAf}{{{f{Ej}}{f{{Dn{I`}}}}}{{Ah{Ej}}}}{{{f{Ej}}{f{{Dn{I`}}}}}Ej}{{{f{Ej}}{f{Eh}}}Ej}{fc{}}0{{{f{Ej}}}Ej}{{{f{BGl}}}Af}{{EjEj}{{Ah{Ej}}}}{{{f{Ej}}{f{Ej}}ceg}{{Ah{Ej}}}{{Cf{{f{Af}}{f{Af}}}{{Cd{{Ah{Af}}}}}}}{{Cf{{f{Kn}}{f{Af}}}{{Cd{{Ah{Af}}}}}}}{{Cf{{f{Af}}{f{Kn}}}{{Cd{{Ah{Af}}}}}}}}{{{f{Ej}}{f{Ej}}c}{{Ah{Ej}}}{{Cf{{f{Af}}{f{Af}}}{{Cd{{Ah{Af}}}}}}}}{{{f{Ej}}c}{{Ah{Ej}}}{{Cf{{f{Af}}}{{Cd{{Ah{Af}}}}}}}}{{{f{Ej}}}{{B`{{f{En}}}}}}{{{f{Ej}}}{{B`{{f{AK`}}}}}}{{{f{Ej}}}{{B`{{f{Gh}}}}}}{{{f{Ej}}}{{B`{{f{AMb}}}}}}{{{f{Ej}}}{{B`{{f{Jd}}}}}}{{{f{Ej}}}{{B`{{f{AKn}}}}}}{{{f{Ej}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}0{{{f{Ej}}}{{B`{{f{BBh}}}}}}{{{f{Ej}}}{{B`{{f{BBj}}}}}}{{{f{Ej}}}{{B`{{f{BBl}}}}}}{{{f{Ej}}}{{B`{{f{BBf}}}}}}{{{f{Ej}}}{{B`{{f{Eh}}}}}}{{}{{Ob{c}}}{}}0{{{f{Ej}}}{{B`{{f{Eb}}}}}}{{{f{Ej}}c}{{Ah{Gh}}}{{Cf{{f{Af}}}{{Cd{{Ah{Gh}}}}}}}}{{EjEj}{{Ah{Ej}}}}{{{f{Ej}}}{{B`{{f{Db}}}}}}1{{{f{Ej}}}{{B`{{f{BBb}}}}}}{{{f{Ej}}}{{B`{{f{B@d}}}}}}{{{f{Ej}}}{{B`{{f{BBd}}}}}}{{{f{Ej}}}{{B`{{f{BB`}}}}}}{fOd}0{{{f{Ej}}}{{Ah{{f{BBb}}}}}}{{{f{Ej}}}{{Ah{{f{B@d}}}}}}{{{f{Ej}}}{{Ah{{f{BBd}}}}}}{{{f{Ej}}}{{Ah{{f{BB`}}}}}}{{{f{Ej}}}{{Ah{Ej}}}}0{AfBGl}{{{f{Ej}}Dl}{{Ah{Kn}}}}{{{f{Ej}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{Ej}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}{{}c{}}0{{EjBh}Ej}{{{f{Ej}}c}Ej{AbKl}}{{{f{Ej}}}{{Ah{Kn}}}}{{{f{Ej}}{f{Gh}}{f{Ej}}}{{Ah{Ej}}}}{{{f{Ej}}{f{{l{An}}}}{f{Ej}}}{{Ah{Ej}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BHb}}}BHb}{{f{f{Bjc}}}b{}}{fb}{{}BHb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{BHb}}{f{BHb}}}d}{{f{f{c}}}d{}}0{{{f{BHb}}{f{BjGl}}}Gn}{cc{}}{{{f{BHb}}{f{Bjc}}}bABf}`{{}Fj}{{}c{}}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}``4````````````````````````````````{{fh}b}000{{{f{BEn}}}{{Ah{BCl}}}}`{{{f{BHd}}}{{f{{Dn{BHf}}}}}}{{{f{BEn}}c}{{Ah{BCl}}}{{Cl{BCl}{{Cd{{Ah{BCl}}}}}}JfJh}}{{{f{Al}}}Eb}{f{{f{c}}}{}}0000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000{{{f{BHd}}}BHd}{{{f{Al}}}Al}{{{f{BEn}}}BEn}{{{f{BHh}}}BHh}{{f{f{Bjc}}}b{}}000{fb}000;{{}BHd}{{}Al}{Fj{{f{c}}}{}}000{{{f{BHj}}}{{f{c}}}{}}1111{Fj{{f{Bjc}}}{}}0000000`{{BHle}{}{}{{BHn{c}}}}{Fjb}000{{{f{BjBHd}}}b}1111{{{f{BHd}}{f{BHd}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}000`{{{f{BI`}}}I`}{{{f{BHd}}}{{f{{Dn{I`}}}}}}{{{f{BEn}}}{{Ah{BCl}}}}{{{f{BjBHd}}}{{f{Bj{G`{I`}}}}}}{{{f{BHd}}{f{BjGl}}}Gn}{{{f{Al}}{f{BjGl}}}Gn}{{{f{BEn}}{f{BjGl}}}Gn}{{{f{BHh}}{f{BjGl}}}Gn}0{{{f{Dh}}BHh}Bh}{cc{}}000{{{G`{{G`{BIb}}}}}BHd}{{{G`{BIb}}}BHd}2{BHdAl}333{cBHd{{Hd{}{{Bb{BIb}}}}}}{cBHd{{Hj{}{{Bb{BIb}}}}}}{{{f{Al}}Fj}BI`}{{{f{BEn}}}{{f{Al}}}}{{{f{BjBEn}}}{{f{BjAl}}}}{{{f{Al}}}Eh}{{{f{BId}}dd}{{Ah{Al}}}}0{{{f{BEn}}}{{Ah{BCl}}}}{{{f{BjAl}}}{{f{BjBHd}}}}{{}Fj}0000000{{}c{}}0000000{AlBHd}1{{{f{BHd}}}c{}}{BHdc{}}301{{{f{BI`}}}d}{{{f{Al}}}d}{{{f{BHd}}}d}{{{f{BHd}}}{{BIh{{BIf{{Kb{I`}}}}{Kb{BHf}}}}}}{{{f{Al}}}BIj}{{{f{BEn}}}{{G`{Ej}}}}{{{f{BEn}}{B`{{Hh{MdFj}}}}}{{G`{Ej}}}}={{{f{BI`}}}Fj}{{{f{Al}}}Fj}?????{{{G`{I`}}{G`{BHf}}d}BHd}{{{f{BCl}}{G`{Ej}}Al{B`{{G`{Bh}}}}}BEn}{{{f{BjBIj}}}{{B`{c}}}{}}{{{f{BjBIj}}Fj}{{B`{c}}}{}}{{{f{BEn}}c}{{Ah{BCl}}}{{Cf{BCl}{{Cd{{Ah{BCl}}}}}}JfJh}}{f}{{{f{Al}}}BHl}{{{f{BEn}}nN`}{{Ah{BCl}}}}{{BEne}BEn{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{Al}}MdFj}BHj}{{{f{BjBHd}}}b}{{{f{BjAl}}}b}{{{f{BEn}}Dl}{{Ah{BCl}}}}{{{f{BEn}}}{{Ah{BCl}}}}{Al{{G`{I`}}}}0{BEnAl}{{{f{BjBEn}}}Al}{fc{}}000{fDd}{c{{Ob{e}}}{}{}}0000000{{}{{Ob{c}}}{}}0000000{f{{Ob{GbBAn}}}}{fOd}0000000{AlAl}{{{f{Al}}}{{f{BHd}}}}{{{f{Al}}}{{f{BIl}}}}={{}c{}}0000000`````{{{f{BHd}}c}Af{{Cf{{Hh{I`{f{BHf}}}}}{{Cd{B`}}}}JfJh}}{{{f{BHd}}c}Af{{Cf{{Hh{I`{f{BHf}}}}}{{Cd{}}}}JfJh}}{{{f{{Dn{{BIn{I`}}}}}}c}Af{{Cf{{BIn{I`}}}{{Cd{B`}}}}JfJh}}{{{f{{Dn{{BIn{I`}}}}}}c}Af{{Cf{{BIn{I`}}}{{Cd{}}}}JfJh}}{{{f{{Dn{c}}}}e{B`{BJ`}}}{{AJj{c}}}{BJbBJd}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{Dn{c}}}}{f{Hf}}e{B`{BJ`}}}{{AJj{c}}}{BJbBJd}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{l{c}}}}I`I`}{{l{c}}}Cb}{{{f{BIl}}{f{{Dn{Fn}}}}}d}{{{f{BJf}}{f{Al}}}Af}{{BJhBJh}BJh}0`{{{f{BJj}}{f{BCl}}{f{Al}}}{{Ah{Af}}}}{{{f{BJj}}}{{Ah{{f{Bh}}}}}}```````````````````````{{fh}b}00{{{f{BjBJl}}Hn}{{B`{b}}}}{{{f{BjBJn}}{f{Hn}}}b}0{f{{f{c}}}{}}00{{{f{Bj}}}{{f{Bjc}}}{}}00{{{f{BJl}}}BJl}{{{f{BJn}}}BJn}{{{f{BEl}}}BEl}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{Dn{c}}}}}E`{{BAb{E`}}}}{{}BEl}{Fj{{f{c}}}{}}00{Fj{{f{Bjc}}}{}}00{Fjb}00{{{f{BEl}}{f{BEl}}}d}{{f{f{c}}}d{}}0{{{f{BEl}}{f{BjGl}}}Gn}{cc{}}{{{Hh{{f{E`}}Fj}}}BJl}1{{{Hh{{f{E`}}Fj}}}BJn}2{{gFj}BDl{{B@j{Bh}}}{{B@j{E`}}}{{Bf{}{{Bb{{G`{{Hh{ce}}}}}}}}}}{{}Fj}00{{}c{}}00{BJlAf}{BJnAf}{{{f{E`}}Fj}BJl}{{{f{E`}}Fj}BJn}{{{G`{Hn}}}BEl}{{{f{BjBJl}}Fj}Af}{{{f{BjBJn}}Fj}Af}{{{f{{Dn{BEl}}}}{B`{Fj}}}{{Ah{BDl}}}}0{{{f{{Dn{BEl}}}}{B`{Fj}}}{{Ah{{G`{E`}}}}}}{fc{}}00{c{{Ob{e}}}{}{}}00{{}{{Ob{c}}}{}}00{fOd}00==={{{f{{Dn{BCl}}}}}{{Ah{BCl}}}}{{{f{{Dn{BCl}}}}d}{{Ah{BCl}}}}````{{IlIl}Il}{{{f{{Dn{BCl}}}}{B`{Nh}}}{{Ah{{Hh{{G`{BBd}}Nh}}}}}}{{{f{{AJn{Md}}}}Nh{f{Bj{G`{Il}}}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BK`}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{BK`}}}Il}{cc{}}{{}Fj}{{}c{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BKb}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}0{{{f{BKb}}Nh{f{Bj{Dn{Il}}}}}{{Ah{b}}}}05{{{f{BjBK`}}{f{{Dn{Dl}}}}}b}{{{f{BjBK`}}Lj}b}{{{f{BjBK`}}Md}b}{{{f{BjBK`}}Ll}b}{{{f{BjBK`}}Il}b}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{Ld{ce}}}}}{{f{e}}}NdBKd}{{{f{{Ld{c}}}}}BKf{BKhNd}}{{{f{{Ld{ce}}}}}{}NdBKd}{{{f{{Ld{c}}}}}LjBKj}{{{f{Bh}}}{{f{BKl}}}}{{{f{Bh}}}{{f{{Dn{Dl}}}}}}{{{f{Bh}}}{{f{BKn}}}}{{{f{Bh}}}{{f{Dh}}}}{{{f{{Ld{ce}}}}}{{f{c}}}NdBKd}1{{{Ld{{BL`{c}}e}}}{{Ld{ce}}}{}BKd}{{{Ld{{Dn{{BL`{c}}}}e}}}{{Ld{{Dn{c}}e}}}{}BKd}{f{{f{c}}}{}}400030000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{{Ld{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}`{{{f{BLb}}{f{Af}}}{{Ah{Af}}}}{{{f{BLb}}c}{{Ah{Af}}}Ad}{{{f{Bh}}}Bh}{{{f{Of}}}Of}{{{f{BLd}}}BLd}{{{f{{Ld{ce}}}}}{{Ld{ce}}}Nd{BKdA@n}}{{{f{Nb}}}Nb}{{{f{BGf}}}BGf}{{{f{B@l}}}B@l}{{{f{N`}}}N`}{{{f{BJ`}}}BJ`}{{{f{BLf}}}BLf}{{{f{BLh}}}BLh}{{{f{BLj}}}BLj}{{f{f{Bjc}}}b{}}00000000000{fb}00000000000{{{f{Bh}}{f{Bh}}}AOn}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}AOn{BLlNd}BKd}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}0{{AKjBDb}AKj}{AKjAKj}{{{f{H`}}{f{ADj}}}{{Fd{H`}}}}``{{}b}{cbBKd}{{}Bh}{{}{{Ld{c}}}BLn}{{}{{Ld{Dh}}}}{{}{{Ld{BM`}}}}{{}{{Ld{{Dn{c}}}}}{}}{{}Nb}{{}BGf}{{}B@l}{{}N`}`{Fj{{f{c}}}{}}0{{{f{Bh}}}f}111{{{f{{Ld{ce}}}}}{{f{c}}}NdBKd}222222222{Fj{{f{Bjc}}}{}}0000000000000{{{f{{Ld{c}}}}}{{f{Dh}}}{AJfNd}}`{{{Ld{ADlc}}}{{Ob{{Ld{ec}}{Ld{ADlc}}}}}BKd{ADlJfJh}}{{{Ld{ADlc}}}{{Ld{ec}}}BKd{ADlJfJh}}{{{f{{Ld{ce}}}}}{{BMb{ce}}}Nd{A@nBKd}}{Fjb}0000{{{f{Bj{Ld{ce}}}}}bNdBKd}111111111{{{f{B@l}}}{{f{ADj}}}}`{{{f{Bh}}{f{c}}}d{{Kh{Dh}}Nd}}{{{f{Of}}{f{Of}}}d}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BMdNd}BKd}{{{f{{Ld{H`}}}}{f{H`}}}d}{{{f{{Ld{BMf}}}}{f{BMf}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BGf}}{f{BGf}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BJ`}}{f{BJ`}}}d}{{{f{BLf}}{f{BLf}}}d}{{{f{BLh}}{f{BLh}}}d}{{{f{BLj}}{f{BLj}}}d}{{f{f{c}}}d{}}0000000000000{BLd{{Hh{LlLl}}}}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{Bj{Ld{AD`}}}}}{{Ob{bBMh}}}}{{{f{AKj}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Bh}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Of}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}NdBKd}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{ADnNd}BKd}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{BDfNd}BKd}{{{f{Nb}}{f{BjGl}}}Gn}{{{f{BGf}}{f{BjGl}}}Gn}{{{f{B@l}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{N`}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BJ`}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLf}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLh}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLj}}{f{BjGl}}}{{Ob{bB@f}}}}`{BMjAKj}{cc{}}{BMhAKj}{BMlAKj}{BMnAKj}{{{f{Dh}}}Bh}{DdBh}{{{f{Dd}}}Bh}{GbBh}7{LlOf}88{{{f{{Dn{c}}}}}{{Ld{{Dn{c}}}}}A@n}{{{Fd{ce}}}{{Ld{ce}}}NdBKd}{{{Ld{Dh}}}{{Ld{{Dn{Dl}}}}}}{BN`{{Ld{BM`}}}}{{{AKl{c}}}{{Ld{c}}}{BNbNd}}={BNdc{}}{{{f{BM`}}}{{Ld{BM`}}}}{c{{Ld{c}}}{}}{BNf{{Ld{BKl}}}}{Gb{{Ld{Dh}}}}{{{BIn{c}}}{{Ld{{Dn{c}}}}}{}}{{{f{Dh}}}{{Ld{Dh}}}}{{{G`{ce}}}{{Ld{{Dn{c}}e}}}{}{BKdA@n}}{{{f{BKl}}}{{Ld{BKl}}}}{BNh{{Ld{BKn}}}}{{{f{BKn}}}{{Ld{BKn}}}}{Dd{{Ld{Dh}}}}{cc{}}00000000{{c{B`{Hf}}}BNj{}}{{{BNl{Md}}{BNl{Dl}}{B`{Hf}}}BNn}{{{BNl{Md}}{BNl{Dl}}{B`{Hf}}}BO`}{cBh{{Hd{}{{Bb{{f{BDj}}}}}}}}{cBh{{Hd{}{{Bb{{AKl{Dh}}}}}}}}{cBh{{Hd{}{{Bb{{f{Dh}}}}}}}}{cBh{{Hd{}{{Bb{BDj}}}}}}{cBh{{Hd{}{{Bb{{f{Bh}}}}}}}}{cBh{{Hd{}{{Bb{{Fd{Dh}}}}}}}}{cBh{{Hd{}{{Bb{Bh}}}}}}{cBh{{Hd{}{{Bb{Dd}}}}}}{e{{Ld{{Dn{c}}}}}{}{{Hd{}{{Bb{c}}}}}}{{gFj}{{BOb{Md}}}Kh{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}0{e{{BOb{Md}}}{{Hd{}{{Bb{{B`{d}}}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{{gADj}{{BOb{Md}}}BJd{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}2{e{{Ld{{Dn{c}}}}}Jf{{Hj{}{{Bb{c}}}}}}{{}{{Ld{c}}}Nd}{c{{Ld{ec}}}BKdNd}{{{f{Dh}}}Bh}0{{{f{Dh}}}{{Ob{BOd}}}}{DdBh}{{Bhc}BOf{}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BOhNd}BKd}{{{f{Bj{Ld{ce}}}}}{{B`{{f{Bjc}}}}}NdBKd}{{{f{Bj{Ld{ce}}}}}{{f{Bjc}}}NdBKd}{{{f{Fn}}Fj}Hn}3{{{f{Bh}}{f{Bjc}}}bABf}{{{f{{Ld{ce}}}}{f{Bjg}}}b{BOjNd}BKdABf}{{{f{BGf}}{f{Bjc}}}bABf}{{{f{B@l}}{f{Bjc}}}bABf}{{{f{N`}}{f{Bjc}}}bABf}{{{f{BLj}}{f{Bjc}}}bABf}{{{f{Of}}}Ll}{{}b}{cb{A@nBKd}}{{{f{{Dn{Ll}}}}}{{`{{Bf{}{{Bb{Fj}}}}}}}}{{}Fj}0000000000000`{{{f{BjBLd}}}{{f{BjIl}}}}{{}c{}}0000000000000{{}Ej}{{{Ld{ce}}}{{B`{c}}}{}BKd}{{{Ld{ce}}}{}NdBKd}{{{Ld{ce}}}{{Hh{e}}}NdBKd}{{{Ld{BOl}}}Af}{BhDd}{{{f{BLd}}}d}{{{f{Of}}}d}`{{{f{{Ld{AD`}}}}}d}{{{f{c}}}d{}}1{{{f{BEj}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BOhNd}BKd}`0{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{Bj{Ld{ce}}}}}{{f{Bjc}}}{BOnNd}{BKdA@n}}{{{f{C@`}}}Kn}0{{{f{C@b}}}Kn}```11`{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BMdNd}BKd}{{C@dFj}{{B`{Fj}}}}{{Bhc}C@f{}}{c{{Ld{c}}}{}}{{BhADjd}B@l}{e{{Ld{c}}}{}{{Oh{{f{{BMb{c}}}}}{{Cd{c}}}}}}{{ge}{{Ld{ce}}}{}BKd{{Oh{{f{{BMb{ce}}}}}{{Cd{c}}}}}}{{ce}{{Ld{ce}}}{}BKd}{{}{{Ld{{BL`{c}}}}}{}}{c{{Ld{{BL`{e}}c}}}BKd{}}{Fj{{Ld{{Dn{{BL`{c}}}}}}}{}}{{Fjc}{{Ld{{Dn{{BL`{e}}}}c}}}BKd{}}3210`{{}Of}{{}BLd}{{{f{Bh}}{f{Bh}}}{{B`{AOn}}}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}{{B`{AOn}}}{BOhNd}BKd}{c{{C@h{{Ld{c}}}}}{}}{{ce}{{C@h{{Ld{ce}}}}}{}BKd}`````{{{f{C@`}}}Kn}0{{{f{{Ld{c}}}}{f{BjC@j}}}b{AJfNd}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}dNdBKd}{{{f{C@b}}nN`}{{Ah{Kn}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{Dn{Dl}}}}}{{Ob{FjBMh}}}}{{{f{Bj{Ld{AD`}}}}C@l}{{Ob{bBMh}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{G`{Dl}}}}}{{Ob{FjBMh}}}}{{{f{Bj{Ld{AD`}}}}{f{BjDd}}}{{Ob{FjBMh}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{Dn{C@n}}}}}{{Ob{FjBMh}}}}`{{{f{Bj{Ld{AD`}}}}CA`}{{Ob{IlBMh}}}}`{{{f{AKd}}FjFj}AKd}0{{{f{{Ld{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}{{{f{CAb}}Dl}Kn}{{LlLl}BLd}`{{{f{{Ld{ce}}}}}FjNdBKd}>>{{{f{Of}}}{{B`{Ll}}}}{fc{}}00000000000{fDd}00{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{c{{Ob{e}}}{}{}}0000{{{Ld{{Dn{c}}e}}}{{Ob{{Ld{{BIn{c}}e}}}}}{}BKd}111111111{{}{{Ob{c}}}{}}0000000000000{{C@dFj}{{Ob{FjAKj}}}}{c{{Ob{{Ld{c}}CAd}}}{}}{{ce}{{Ob{{Ld{ce}}CAd}}}{}BKd}{{}{{Ob{{Ld{{BL`{c}}}}CAd}}}{}}{c{{Ob{{Ld{{BL`{e}}c}}CAd}}}BKd{}}10{c{{Ob{{C@h{{Ld{c}}}}CAd}}}{}}{{ce}{{Ob{{C@h{{Ld{ce}}}}CAd}}}{}BKd}{f{{Ob{GbBAn}}}}00{{{Ld{ce}}}{{Ob{c{Ld{ce}}}}}{}BKd}{fOd}0000000000000{{{Ld{ce}}}cA@nBKd}`{{{f{CAb}}Dl}Kn}{{}c{}}0000000000000{{{f{{Ld{ce}}}}}FjNdBKd}``{{B@l{CAf{BhBh}}}B@l}{{{f{AKj}}c}AKj{{Oh{{f{Dh}}}{{Cd{Dd}}}}}}{{{f{Bj{Ld{AD`}}}}{f{{Dn{Dl}}}}}{{Ob{FjBMh}}}}{{{f{BjBh}}BDj}{{Ob{bB@f}}}}{{{f{BjBh}}CAh}{{Ob{bB@f}}}}{{{f{BjBh}}{f{Dh}}}{{Ob{bB@f}}}}{{{f{Bj{Ld{AD`}}}}{f{{Dn{CAj}}}}}{{Ob{FjBMh}}}}```````{{c{B`{Hf}}}BNj{}}{{{BNl{Md}}{BNl{Dl}}{B`{Hf}}}BNn}{{{BNl{Md}}{BNl{Dl}}{B`{Hf}}}BO`}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{CAl{B`{{f{ADj}}}}}{{Ob{{BOb{Md}}AKj}}}}{cc{}}{{}Fj}{{}c{}}{{{f{CAl}}}d}{FjCAl}{{{f{CAl}}}{{f{{Dn{Md}}}}}}{{{f{BjCAl}}{f{H`}}}b}{{{f{BjCAl}}}b}{{{f{BjCAl}}{f{{Dn{{Fd{H`}}}}}}}b}1{{{f{BjCAl}}{B`{{f{H`}}}}}b}{CAl{{CAn{Md}}}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd};`{{fh}b}{{{f{CB`}}}{{f{ADl}}}}{{{f{BjCB`}}}{{Fd{H`}}}}{{{f{BjCB`}}}{{f{BjADl}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CB`}}}CB`}{{f{f{Bjc}}}b{}}{fb}{{}CB`}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{CB`}}}{{f{ADj}}}}{{{f{BjCB`}}Fj}b}{{{f{CB`}}{f{BjGl}}}{{Ob{bB@f}}}}{cc{}}{{}Fj}{{}c{}}{{{f{CB`}}}Fj}{FjCB`}{{{f{BjCB`}}}b}70{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{CB`}}}{{B`{{f{CBb}}}}}}8```````{{{f{AKd}}FjFj}AKd}0`{{}b}0{{}d}``{{eFjFj}{{CBd{Md}}}{{Kh{Dh}}}{{Bf{}{{Bb{c}}}}}}{{eFjFj}{{AJn{Md}}}{{Kh{{Dn{Dl}}}}}{{Bf{}{{Bb{c}}}}}}{Ilb}`{{fh}b}{{{f{Kn}}}Hn}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Kn}}}Kn}{{f{f{Bjc}}}b{}}{fb}{{}Kn}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{Kn}}}{{f{E`}}}}{{{f{Kn}}{f{Kn}}}d}{{{f{Kn}}{f{BjGl}}}Gn}{CBfKn}{LjKn}{BhKn}{nKn}{IjKn}{cc{}}{IlKn}{LlKn}{DlKn}{dKn}{CBhKn}{CBjKn}{MdKn}{{}Fj}{{}c{}}{{KnBh}Ej}{{KnBh}Af}{{{f{Kn}}}d}0{{E`Hn}Kn}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BjKn}}Hn}b}{{{f{Kn}}}{{f{Hn}}}}:{{{B`{n}}E`}Kn}``````{{{f{{CBl{c}}}}{f{{CBl{c}}}}}{{Ah{b}}}{}}{{{f{BEl}}}BDl}{{{f{BEj}}}CBn}{{{f{BEj}}}BDl}{{{f{CBn}}{f{Dh}}}{{B`{Mj}}}}{{{f{BDl}}{f{Dh}}}{{B`{Mj}}}}{{{f{CBn}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{BDl}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{{CCb{}{{CC`{c}}}}}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{ADnA@nBLnBMd}}{{{f{BDl}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{CBn}}}{{Ah{BDl}}}}{{{f{BDl}}}{{Ah{BDl}}}}{{{f{CBn}}AMn}BEj}{{{f{BDl}}AMn}BEj}{{{f{BjCBn}}{f{BDl}}}{{Ah{d}}}}{{{f{BjBDl}}{f{BDl}}}{{Ah{d}}}}{{{f{CBn}}{f{Dh}}}{{Ah{Mj}}}}{{{f{BDl}}{f{Dh}}}{{Ah{Mj}}}}`````````````````{{fh}b}0{{{f{BOl}}}n}0{{Bh{G`{Fn}}{f{ADj}}}{{Ah{Af}}}}{{Bh{G`{Fn}}{f{ADj}}{B`{{f{CCd}}}}}{{Ah{Af}}}}{{AfAf}c{}}{{Afc}e{AbKl}{}}{{{f{Af}}c}e{AbKl}{}}{{{f{Af}}{f{Af}}}c{}}`{{{f{BOl}}}{{Ah{Kn}}}}0{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{BOl}}Ef}Eh}0{{{f{BOl}}}{{Ah{Eh}}}}0`{{{f{Af}}Fj}{{f{Fn}}}}{{{f{BOl}}}{{f{ADl}}}}{{{f{BjBOl}}}{{f{BjADl}}}}0{{{f{Af}}}Eb}{{{f{BjBOl}}}{{f{Bj{l{c}}}}}Cb}{{{f{BOl}}}{{f{{l{c}}}}}Cb}{{{f{Af}}}{{f{BOl}}}}{{{f{BjBOl}}}{{Ah{Fj}}}}0{{{f{BjAf}}}{{Ah{Fj}}}}{{{f{Af}}}{{Ah{{f{En}}}}}}{{{f{Af}}}{{Ah{{f{AK`}}}}}}{{AfAf}c{}}{{Af{f{Af}}}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}Af}c{}}21032031{{{f{Af}}}{{Ah{{f{Gh}}}}}}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{BOl}}}{{B`{{Fd{Fb}}}}}}0{{{f{BOl}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Af}}{f{E`}}}{{Ah{Af}}}}0{{{f{Af}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AMb}}}}}}{{{f{BOl}}{f{Af}}}{{Ah{Af}}}}0{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{BOl}}}Fl}{{{f{Af}}}{{`{{Bf{}{{Bb{Fj}}}}}}}}{{{f{BOl}}}{{f{{G`{Fn}}}}}}{{{f{BjBOl}}}{{f{Bj{G`{Fn}}}}}}{{{f{BjAf}}}{{f{Bj{G`{Fn}}}}}}{{{f{Af}}}Af}{{{f{Jn}}}Jn}1{{{f{BOl}}}{{Ld{BOl}}}}{{f{f{Bjc}}}b{}}0{fb}0{{{f{BjAf}}}b}{{{f{Af}}}{{Ah{{f{Jd}}}}}}{{}Af}{Fj{{f{c}}}{}}000{{{f{Af}}}{{f{c}}}{}}{Fj{{f{Bjc}}}{}}000{{{f{Af}}c}e{AbKl}{}}{{Afc}e{AbKl}{}}{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Fjb}000{{{f{BOl}}}Af}0{{{f{BOl}}}{{f{E`}}}}0{{{f{Jn}}{f{Jn}}}d}{{{f{Af}}{f{Af}}}d}7{{{f{Af}}{f{Dh}}}{{Ah{Gh}}}}{{{f{Af}}c}eB@h{}}90{{{f{Af}}{f{Dh}}}c{}}33{{f{f{c}}}d{}}0{{{f{Af}}}Fj}{{{f{Af}}}{{Ah{Af}}}}{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{Af}}HnFj}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AKn}}}}}}{{{f{Af}}}{{Ah{{f{AL`}}}}}}{{{f{BOl}}}{{AKl{Mj}}}}0{{{f{Af}}AG`}{{Ah{Af}}}}{{{f{BOl}}{f{Gh}}}{{Ah{Af}}}}{{{f{BOl}}}Kn}0{{{f{Jn}}{f{BjGl}}}Gn}{{{f{Af}}{f{BjGl}}}Gn}0{{{f{Af}}}Dd}{cc{}}000{{{l{c}}}AfCb}{{Bh{f{{Dn{Hn}}}}d}{{Ah{Af}}}}{{Bh{f{{Dn{Hn}}}}{f{E`}}d}{{Ah{Af}}}}{{BhFn}{{Ah{Af}}}}{{Bh{G`{Fn}}}{{Ah{Af}}}}{{Bh{G`{Fn}}{f{E`}}}Af}{cAf{{Hd{}{{Bb{d}}}}}}{cAf{{Hd{}{{Bb{{f{Il}}}}}}}}{cAf{{Hd{}{{Bb{{f{Lj}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Md}}}}}}}}{cAf{{Hd{}{{Bb{Md}}}}}}{cAf{{Hd{}{{Bb{{B`{Dd}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Ll}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ll}}}}}}}}{cAf{{Hd{}{{Bb{Dd}}}}}}{cAf{{Hd{}{{Bb{{f{Dh}}}}}}}}{cAf{{Hd{}{{Bb{{B`{{f{Dh}}}}}}}}}}{cAf{{Hd{}{{Bb{{f{d}}}}}}}}{cAf{{Hd{}{{Bb{{B`{d}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Lj}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Ij}}}}}}}}{cAf{{Hd{}{{Bb{Ij}}}}}}{cAf{{Hd{}{{Bb{{f{n}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Il}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ij}}}}}}}}{cAf{{Hd{}{{Bb{n}}}}}}{cAf{{Hd{}{{Bb{Il}}}}}}{cAf{{Hd{}{{Bb{Lj}}}}}}{cAf{{Hd{}{{Bb{{B`{n}}}}}}}}{cAf{{Hd{}{{Bb{Ll}}}}}}{cAf{{Hd{}{{Bb{{f{Md}}}}}}}}{{Bh{G`{n}}}Af}{{Bh{G`{Ij}}}Af}{{Bh{G`{Il}}}Af}{{Bh{G`{Ll}}}Af}{{Bh{G`{Mf}}}Af}{{Bh{G`{Md}}}Af}{{Bh{G`{Lj}}}Af}{{BhFj{f{E`}}}Af}{{{f{Af}}FjFj}Af}{{{f{BOl}}Fj}{{Ah{Hn}}}}{{{f{Af}}}Ib}{{{f{Af}}}Af}{{{f{BOl}}}{{B`{{Lf{Fb}}}}}}0{{{f{BOl}}Fj}{{B`{{f{If}}}}}}0{{{f{BOl}}FjFj}{{B`{{f{If}}}}}}0{{{f{BOl}}Fj}Hn}0{{{f{Af}}{f{Dh}}}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}eB@h{}}210{{{f{BOl}}}d}{{{f{Jn}}{f{Bjc}}}bABf}{{{f{Af}}{B`{Fj}}}Af}{{{f{Af}}}{{Ah{{f{BBh}}}}}}{{{f{Af}}}{{Ah{{f{BBj}}}}}}{{{f{Af}}}{{Ah{{f{BBl}}}}}}{{{f{Af}}}{{Ah{{f{BBf}}}}}}{{{f{Af}}}{{Ah{{f{Eh}}}}}}`{{{f{Af}}}{{Ah{Eb}}}}{{}Fj}000{{}c{}}000{Af{{G`{Fn}}}}{{}Ej}{AfBCl}3{BFnAf}{AfAf}??{{{f{Af}}}{{Ah{Gh}}}}000{{{f{BOl}}}Gh}0{{}d}00{{{f{Af}}}Jn}{{{f{Af}}}CCf}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{BOl}}}Kn}0{{{f{BOl}}}Fj}{{{f{Af}}}Fj}{{{f{BOl}}Fj}Af}0{{{f{Af}}}{{Ah{{f{Eb}}}}}}{{{f{Af}}}{{Hh{{G`{{AGf{Md}}}}{G`{{B`{Hf}}}}}}}}{{{f{Af}}}Af}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dh}}}c{}}{{{f{Af}}c}eB@h{}}201{{{f{Af}}}{{Ah{{B`{c}}}}}Kl}{{{f{BOl}}}{{Ah{Kn}}}}0{{{f{BOl}}}{{B`{n}}}}0{{{f{Af}}}Kn}11223226{{AfAf}c{}}{{Afc}e{AbKl}{}}{{{f{Af}}c}e{AbKl}{}}??>{{{f{BOl}}}{{Ah{Fj}}}}0{{{f{BOl}}}{{f{Bh}}}}{{Bhc}Af{{Kh{{Dn{{B`{Il}}}}}}}}{{Bhc}Af{{Kh{{Dn{{AKl{{Dn{Dl}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{{f{Dh}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Af}}}}}}}}{{Bhc}Af{{Kh{{Dn{Af}}}}}}{{Bh{Ln{Ll}}}Af}{{Bhc}Af{{Kh{{Dn{{B`{{f{Dh}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{{AKl{Dh}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{{AKl{Dh}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{{f{{Dn{Dl}}}}}}}}}}{{Bh{Ln{Il}}}Af}{{Bh{Ln{Lj}}}Af}{{Bhc}Af{{Kh{{Dn{{B`{{f{{Dn{Dl}}}}}}}}}}}}{{Bh{Ln{Md}}}Af}{{Bhc}Af{{Kh{{Dn{{B`{n}}}}}}}}{{Bhc}Af{{Kh{{Dn{Hn}}}}}}{{Bhc}AfBFn}{{Bhc}Af{{Kh{{Dn{{B`{{AKl{{Dn{Dl}}}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{Dd}}}}}}{{Bhc}Af{{Kh{{Dn{{G`{Dl}}}}}}}}{{Bhc}Af{{Kh{{Dn{d}}}}}}{{Bhc}Af{{Kh{{Dn{Ll}}}}}}{{Bhc}Af{{Kh{{Dn{Il}}}}}}{{Bhc}Af{{Kh{{Dn{Lj}}}}}}{{Bhc}Af{{Kh{{Dn{Md}}}}}}{{Bhc}Af{{Kh{{Dn{Mf}}}}}}{{Bhc}Af{{Kh{{Dn{Ij}}}}}}{{Bhc}Af{{Kh{{Dn{n}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Ij}}}}}}}}{{Bh{f{Af}}}Af}{{Bhc}Af{{Kh{{Dn{{B`{{G`{Dl}}}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Mf}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{d}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Md}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Ll}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Lj}}}}}}}}{{Bhc}Af{{Kh{{Dn{{B`{Dd}}}}}}}}{{Bh{f{E`}}}Af}{{{f{BOl}}FjFj}Af}{{BhFj}Af}{{{f{BjCCf}}}{{B`{c}}}{}}{{{f{Af}}{f{Dh}}}{{Ah{Gh}}}}{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Af}}}c{}}0{{{f{Af}}{f{Dh}}}c{}}2{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{BOl}}}Fj}`{{{f{BOl}}}{{Ah{Kn}}}}0{{{f{Af}}}BH`}{{{f{Af}}}{{Ah{Kn}}}}{{{f{BOl}}nN`}{{Ah{Kn}}}}0{{{f{BOl}}}Af}{{{f{BOl}}}{{B`{Hf}}}}0{{Afc}e{AbKl}{}}{{{f{Af}}c}e{AbKl}{}};{{{f{BjBOl}}Bh}b}{{{f{BjAf}}Bh}{{f{BjAf}}}}{{{f{Af}}{f{{Dn{AOj}}}}}{{Ah{Af}}}}6{JnJn}{{{f{BOl}}{f{Cf}}Nb}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fjdd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fj}Af}{{{f{BjAf}}Jn}b}{{{f{BOl}}Md}Af}{{{f{BjBOl}}}b}0{{{f{BjAf}}}b}{{{f{Af}}{B`{Il}}}Af}{{{f{CCf}}}{{Hh{Fj{B`{Fj}}}}}}{{{f{BOl}}MdFj}Af}{{{f{Af}}MdFj}Af}{{{f{Af}}Ef}{{Ah{Af}}}}{{{f{BOl}}Ef}{{Ah{Af}}}}0{{{f{BOl}}Md}{{Hh{AfAf}}}}{{{f{Af}}Md}{{Hh{AfAf}}}}{{{f{BOl}}Dl}{{B`{n}}}}0{{{f{BOl}}Dl}{{Ah{Kn}}}}0{{{f{Af}}}{{Ah{{f{Db}}}}}}{{{f{Af}}Fj}{{Ah{{AKl{Dh}}}}}}{{{f{Af}}{f{E`}}}{{Ah{Af}}}}{{{f{Af}}{f{Af}}}c{}}{{Afc}e{AbKl}{}}{{AfAf}c{}}{{{f{Af}}c}e{AbKl}{}}{{{f{Af}}}{{Ah{c}}}Kl}{{{f{BOl}}}{{Ah{Kn}}}}0{{{f{Af}}}{{Ah{Kn}}}}{{{f{Af}}{B`{Fj}}}Af}{{{f{BOl}}{f{Eh}}}{{Ah{Af}}}}{{{f{BOl}}{f{{Dn{I`}}}}}{{Ah{Af}}}}{{{f{BOl}}{f{{Dn{I`}}}}}Af}{{{f{BOl}}{f{Eh}}}Af}{{{f{Af}}FjAMn}Fn}{{{f{Af}}}{{Ah{Af}}}}>{fc{}}0{{{f{Af}}}{{AKl{Af}}}}{fDd}{{AfAf}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{En}}}}}}{{{f{Af}}}{{B`{{f{AK`}}}}}}{{{f{Af}}}{{B`{{f{Gh}}}}}}{{{f{Af}}}{{B`{{f{AMb}}}}}}{{{f{Af}}}{{B`{{f{Jd}}}}}}{{{f{Af}}}{{B`{{f{AKn}}}}}}{{{f{Af}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}00{{{Hh{{f{B@l}}Fn}}}{{Ah{Af}}}}{{{Hh{BhFn}}}{{Ah{Af}}}}{{{Hh{Bh{G`{Fn}}}}}{{Ah{Af}}}}{{{Hh{{f{B@l}}{G`{Fn}}}}}{{Ah{Af}}}}4{{{f{Af}}}{{B`{{f{BBh}}}}}}{{{f{Af}}}{{B`{{f{BBj}}}}}}{{{f{Af}}}{{B`{{f{BBl}}}}}}{{{f{Af}}}{{B`{{f{BBf}}}}}}{{{f{Af}}}{{B`{{f{Eh}}}}}}{{}{{Ob{c}}}{}}000{{{f{Af}}}{{B`{{f{Eb}}}}}}{{AfAf}{{Ah{Af}}}}{{Bhc}{{Ob{Af}}}{}}{{{f{Af}}}{{B`{{f{`}}}}}}{{{f{BjAf}}{In{c}}}dCb}{{{f{Af}}}{{B`{{f{Db}}}}}}4{f{{Ob{GbBAn}}}}{{{f{Af}}}{{B`{{f{BBb}}}}}}{{{f{Af}}}{{B`{{f{B@d}}}}}}{{{f{Af}}}{{B`{{f{BBd}}}}}}{{{f{Af}}}{{B`{{f{BB`}}}}}}{fOd}000{{{f{Af}}}{{Ah{{f{BBb}}}}}}{{{f{Af}}}{{Ah{{f{B@d}}}}}}{{{f{Af}}}{{Ah{{f{BBd}}}}}}{{{f{Af}}}{{Ah{{f{BB`}}}}}}{{{f{BOl}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{BOl}}}{{Ah{{f{{l{c}}}}}}}Cb}{{{f{BOl}}Dl}{{B`{n}}}}0{{{f{BOl}}Dl}{{Ah{Kn}}}}0{{}c{}}000{{AfBh}Af}{{{f{Af}}c}Af{AbKl}}{{{f{BOl}}}{{Ah{Kn}}}}0{{{f{Af}}{f{Gh}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Cj}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Cj}}}Cj}{{f{f{Bjc}}}b{}}{fb}{{{f{Cj}}}Af}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{cc{}}{{}Fj}{{}c{}}{{{CCh{Af}}}Cj}{{{f{BjCj}}{f{BjFn}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6{{{f{BjCj}}{f{BjFn}}e}c{}{{Cf{{f{Cj}}}{{Cd{c}}}}}}```````````{{fh}b}{{{CCj{}{{Cd{c}}}}{f{Af}}}c{}}{{{f{CCl}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{CCn}}}CCn}{{f{f{Bjc}}}b{}}{fb}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}9877{Fjb}{{{f{CCn}}{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{CCn}}{f{BjGl}}}Gn}{cc{}}{{}Fj}{{}c{}}?>==?>==?>=={fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4``{{{f{BLb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Fh}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BLb}}c}{{Ah{Af}}}Ad}{{{f{{l{Fh}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CD`}}}CD`}{{f{f{Bjc}}}b{}}{fb}{{}CD`}{Fj{{f{c}}}{}}{Fj{{f{Bjc}}}{}}{Fjb}{{{f{CD`}}{f{CD`}}}d}{{f{f{c}}}d{}}0{{{f{CD`}}{f{BjGl}}}Gn}{cc{}}{{{f{CD`}}{f{Bjc}}}bABf}{{}Fj}{{}c{}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4````````````{{fh}b}006{{{G`{BCl}}}{{Ah{BCl}}}}{c{{Ah{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{cBCl{{Hd{}{{Bb{BCl}}}}}}{c{{B`{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}}}}CbCb}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}{AKl{{l{g}}}}}}}CbCbCb}{{}CDb}{{{f{CDd}}}d}0{c{{Ah{E`}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}{c{{Ah{{Hh{E`Fj}}}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hf}}}CbCb}{{CDbCDb}CDb}{{{f{BjCDb}}CDb}b}10{{{f{CDb}}}Dl}021{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{CDf}}}{{`{{Bf{}{{Bb{Fj}}}}}}}}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{{CDh{ec}}}}}{{CDh{ec}}}A@n{A@n{Bf{}{{Bb{c}}}}}}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{c}}}}}}}Cb}{{{f{Ej}}{f{Ej}}}{{Hh{EjEj}}}}{CDje{}{{CDl{c}}}}{CDje{}{{CDn{c}}}}{CDbCDb}{c{{Ah{BCl}}}{{Hd{}{{Bb{{f{BCl}}}}}}}}{cBCl{{Hd{}{{Bb{{f{BCl}}}}}}}}{{{f{CDb}}CDb}d}{{}CDb}{{}CDd}{Fj{{f{c}}}{}}{{{f{{CE`{c}}}}}{{f{e}}}{}{}}1{{{f{{AKf{c}}}}}{{f{e}}}{}{}}222{Fj{{f{Bjc}}}{}}0{{{f{Bj{AKf{c}}}}}{{f{Bje}}}{}{}}111{{CDbCDb}CDb}{Fjb}0000{cBDl{{Hd{}{{Bb{E`}}}}}}{c{{Ah{E`}}}{{Hd{}{{Bb{{f{E`}}}}}}}}:{{{f{{CE`{Af}}}}{f{{CE`{Af}}}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{f{f{c}}}d{}}00000{{{f{BjCDb}}c}b{{Hd{}{{Bb{CDb}}}}}}``{{{f{CDb}}{f{BjGl}}}Gn}0000{{{f{CDd}}{f{BjGl}}}Gn}{cc{}}00{CDbCDd}11{Dl{{B`{CDb}}}}{DlCDb}00{c{{AKf{{l{e}}}}}{{Hd{}{{Bb{}}}}}A`}{c{{AKf{Gh}}}{{Hd{}{{Bb{d}}}}}}{cCDb{{Hd{}{{Bb{CDb}}}}}}{eCDn{}{{Hd{}{{Bb{c}}}}}}23{{{f{Dh}}}{{B`{CDb}}}}{c{{AKf{{l{e}}}}}{{Hj{}{{Bb{}}}}}A`}{c{{AKf{Gh}}}{{Hl{}{{Bb{d}}}}}}{c{{AKf{{l{e}}}}}{{Hl{}{{Bb{}}}}}A`}{{{f{E`}}{f{E`}}}{{B`{E`}}}}{{{f{E`}}{f{E`}}CDd}{{B`{E`}}}}{{{f{AN`}}{f{AN`}}}AN`}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CE`{Af}}}}{f{Bjc}}}bABf}{{{f{CDb}}{f{Bjc}}}bABf}{{{f{CDd}}{f{Bjc}}}bABf}{{}Fj}0000{{{f{BjCDb}}CDb}b}{{CDbCDb}CDb}{{{f{CDb}}CDb}d}{{}c{}}0000{{{AKf{c}}}c{}}{CDbc{}}2{BGb{{G`{c}}}{}}{{}{{G`{Bh}}}}{{{f{CDb}}}d}0{{{f{CDb}}}{{ACl{CDb}}}}{{{f{CDf}}}{{`{{Bf{}{{Bb{CDf}}}}}}}}{{{f{CDb}}}{{ACn{CDb}}}}{{{f{CDf}}}Fj}{MfHn}{e{{Ah{E`}}}{{Kh{E`}}}{{Hd{}{{Bb{c}}}}A@n}}2{c{{AKf{c}}}{}}{{eFj}{{CDh{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFj}{{CDh{{CEd{{CEb{c}}}}c}}}A@n}{{{f{Bj{CDh{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{CDh{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Gf}}{CDbCDb}{{{f{Dh}}}Dd}`{{{f{BjCDb}}CDb}b}{{{f{BjCDb}}CDbd}b}{{{f{{CDh{ec}}}}}{{Hh{Fj{B`{Fj}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CDf}}MdFj}CDf}{{{f{{Dn{c}}}}MdFj}{{f{{Dn{c}}}}}{}}{{{f{c}}Fj}{{G`{c}}}CDf}0{{{f{CDf}}Md}{{Hh{CDfCDf}}}}{{{f{BCl}}Fjd}{{G`{BCl}}}}{{CDbCDb}CDb}80{fc{}}009{{CDjFj}{{CDh{CDjc}}}{}}{c{{Ob{e}}}{}{}}0000{{{f{E`}}{f{E`}}}{{Ah{E`}}}}{{}{{Ob{c}}}{}}0000{fOd}00006{{}c{}}0000{{{f{E`}}e}c{}{{Cf{{f{BjCj}}}{{Cd{c}}}}}}{{{f{{Dn{{G`{c}}}}}}}{{Hh{Fj{G`{Fj}}}}}{}}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{{Dn{c}}}}}{{AJj{I`}}}{{Kh{{Dn{Of}}}}JfJh}}{{{f{{Dn{e}}}}}{{G`{c}}}{JfJhCh}{{Kh{{Dn{c}}}}}}{{{f{Af}}}{{G`{Af}}}}","D":"KBh","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5959],[5,"ListType",1545],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1545],[10,"Num",5960],[10,"ToPrimitive",5961],[5,"Series",5177],[8,"PolarsResult",4396,5962],[10,"NumOpsDispatchInner",5660,5963],[6,"GroupsProxy",4013,5964],[5,"BooleanType",1545],[6,"Option",5965],[17,"Item"],[8,"ArrayBox",5636],[10,"Iterator",5966],[5,"PlSmallStr",4396,5967],[0,"mut"],[17,"IsNested"],[5,"FalseT",1545],[17,"IsObject"],[10,"PolarsDataType",1545],[17,"Output"],[10,"Fn",5968],[10,"Copy",5969],[5,"AmortSeries",5636],[10,"FnMut",5968],[5,"Float64Type",1545],[5,"Float32Type",1545],[8,"StringChunked",1545],[5,"String",5970],[5,"StringType",1545],[1,"str"],[5,"BinaryType",1545],[1,"u8"],[1,"slice"],[6,"DataType",1545,5971],[8,"ListChunked",1545],[5,"View",5972],[5,"SortOptions",1460],[8,"IdxCa",1545,5973],[6,"Column",3719],[5,"SortMultipleOptions",1460],[8,"BinaryChunked",1545],[10,"PolarsIntegerType",1545],[10,"MetadataTrait",827,5974],[5,"Box",5975],[6,"CastOptions",740],[10,"NumOpsDispatchCheckedInner",5711,5976],[1,"usize"],[8,"ChunkLenIter",40],[8,"ArrayRef",4396,5977],[5,"Vec",5978],[5,"CompactString",5979],[5,"MetadataProperties",827],[10,"DoubleEndedIterator",5980],[8,"BooleanChunked",1545],[17,"HasViews"],[5,"Formatter",5981],[8,"Result",5981],[10,"Array",5977],[17,"Array"],[10,"IntoIterator",5982],[5,"Bitmap",5983],[1,"tuple"],[10,"IntoParallelIterator",5984],[10,"TrustedLen",5985],[6,"AnyValue",1545,5986],[8,"IdxSize",4396,5987],[5,"MetadataFlags",827],[5,"ObjectType",1545],[10,"PolarsObjectSafe",1113],[10,"PolarsObject",1113],[1,"f32"],[1,"u64"],[5,"Metadata",827],[5,"RwLockWriteGuard",5988],[5,"Int128Type",1545],[8,"DecimalChunked",1545,5989],[10,"Send",5969],[10,"Sync",5969],[10,"ExactSizeIterator",5990],[10,"PolarsFloatType",1545],[6,"IsSorted",5177,5991],[10,"PolarsIterator",788],[5,"Iter",5992],[1,"fn"],[5,"Map",5993],[10,"AsRef",5994],[6,"ChunkedArrayLayout",40],[10,"NumCast",5961],[5,"Scalar",5109],[6,"MetadataReadGuard",827,5995],[5,"IMMetadata",827,5996],[5,"Arc",4396,5997],[5,"RwLockReadGuard",5988],[5,"Int32Type",1545],[1,"i32"],[1,"u32"],[5,"Range",5998],[5,"UInt32Type",1545],[5,"Int64Type",1545],[1,"i64"],[1,"i128"],[5,"UInt64Type",1545],[5,"Field",1545,5999],[10,"ParallelIterator",5984],[10,"IndexedParallelIterator",5984],[6,"QuantileMethod",4396,6000],[5,"RollingOptionsFixedWindow",4396,6001],[10,"Sized",5969],[17,"IsStruct"],[8,"PlRandomState",1545,6002],[5,"BytesHash",6003],[8,"Array2",6004],[8,"ArrayView1",6004],[6,"Either",6005],[6,"Result",6006],[5,"TypeId",6007],[5,"NullableIdxSize",4396,5987],[10,"FnOnce",5968],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",450,6008],[10,"ChunkedBuilder",478],[5,"BinViewChunkedBuilder",478,6009],[10,"ViewType",6010],[5,"BooleanChunkedBuilder",478,6011],[5,"NullChunkedBuilder",478,6012],[5,"PrimitiveChunkedBuilder",478,6013],[10,"Clone",6014],[8,"StringChunkedBuilder",478,6009],[8,"BinaryChunkedBuilder",478,6009],[10,"NewChunkedArray",478],[5,"AnonymousListBuilder",586,6015],[5,"AnonymousOwnedListBuilder",586,6015],[5,"ListBooleanChunkedBuilder",586,6016],[5,"ListPrimitiveChunkedBuilder",586,6017],[10,"ListBuilderTrait",586],[5,"ListStringChunkedBuilder",586,6018],[5,"ListBinaryChunkedBuilder",586,6018],[5,"ListNullChunkedBuilder",586,6019],[10,"Hasher",6020],[10,"ChunkedCollectInferIterExt",768],[10,"ChunkedCollectIterExt",768],[10,"Canonical",782],[10,"ChunkedCollectParIterExt",784],[10,"FromParIterWithDtype",784],[5,"BooleanArray",6021],[5,"BoolIterNoNull",788],[5,"SomeIterator",788],[5,"MetadataEnv",827,6022],[10,"MetadataCollectable",827,6023],[5,"Iter",6024],[5,"IterNames",6024],[5,"File",6025],[5,"Mutex",6026],[6,"MetadataMerge",827],[5,"RwLock",5988],[5,"ObjectArray",1113],[6,"ArrowDataType",1545,6027],[10,"Any",6007],[10,"Debug",5981],[5,"BitmapIter",6028],[6,"ZipValidity",6029],[8,"ObjectValueIter",1113],[5,"ObjectChunkedBuilder",1190],[8,"ObjectChunked",1545],[10,"AnonymousObjectBuilder",1214],[5,"ObjectRegistry",1214],[8,"ObjectConverter",1214],[8,"BuilderConstructor",1214],[10,"ChunkAgg",1243],[17,"FuncRet"],[10,"ChunkApply",1243],[10,"ChunkApplyKernel",1243],[10,"ChunkSort",1243],[10,"ChunkUnique",1243],[10,"ChunkCast",1243],[6,"FillNullStrategy",1243],[10,"ChunkCompareEq",1243],[10,"ChunkExplode",1243],[5,"OffsetsBuffer",6030],[10,"ChunkFillNullValue",1243],[10,"ChunkFilter",1243],[10,"ChunkFull",1243],[10,"ChunkFullNull",1243],[10,"ChunkAnyValue",1243],[10,"ChunkCompareIneq",1243],[10,"IsFirstDistinct",1243],[10,"IsLastDistinct",1243],[10,"ChunkQuantile",1243],[10,"ChunkExpandAtIndex",1243],[10,"ChunkReverse",1243],[10,"ChunkRollApply",1243],[10,"ChunkSet",1243],[10,"ChunkShift",1243],[10,"ChunkShiftFill",1243],[10,"ChunkVar",1243],[10,"ChunkTake",1243],[10,"ChunkTakeUnchecked",1243],[10,"ChunkBytes",1243],[10,"ChunkZip",1243],[10,"BinaryFnMut",1373],[10,"StaticArray",1545,6031],[10,"TernaryFnMut",1373],[10,"Error",6032],[10,"UnaryFnMut",1373],[5,"PrimitiveArray",6033],[5,"RowsEncoded",6034],[5,"BinaryArray",6035],[8,"BinaryOffsetChunked",1545],[6,"SearchSortedSide",1423],[10,"SlicedArray",4396,6036],[5,"NoNull",5745],[5,"NaiveDateTime",6037],[6,"PolarsError",4396,5962],[6,"Cow",6038],[8,"Float32Chunked",1545],[8,"Float64Chunked",1545],[10,"ArrayFromIter",1545,6039],[10,"ArrayFromIterDtype",1545,6039],[10,"AsRefDataType",1545,5971],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",6040],[10,"From",5994],[5,"CategoricalChunked",3069,6041],[10,"CategoricalMergeOperation",3069,6042],[10,"LogicalType",1545,6043],[5,"Logical",1545,6043],[5,"OwnedObject",1545,5986],[6,"UnknownKind",1545,5971],[5,"CompatLevel",1545,5971],[6,"TimeUnit",1545,6044],[5,"UInt8Type",1545],[5,"UInt16Type",1545],[5,"Int8Type",1545],[5,"Int16Type",1545],[5,"DateType",1545],[5,"TimeType",1545],[5,"BinaryOffsetType",1545],[5,"DecimalType",1545],[5,"DatetimeType",1545],[5,"DurationType",1545],[5,"CategoricalType",1545],[5,"Dimension",1545,6045],[6,"ReshapeDimension",1545,6045],[6,"ArrowTimeUnit",1545],[6,"Ordering",6046],[10,"ArrayCollectIterExt",4396,6039],[8,"Utf8ViewArray",6010],[8,"UInt32Chunked",1545],[5,"Error",5981],[10,"NumericNative",1545],[10,"Into",5994],[5,"ArrowField",4396],[6,"PrimitiveType",6047],[6,"IntegerType",6048],[10,"Borrow",6049],[10,"NoOption",6050],[10,"GetAnyValue",1545,5986],[8,"Int128Chunked",1545],[10,"IntoScalar",1545,6051],[6,"PhysicalType",6048],[6,"ToCompactStringError",5979],[8,"UInt8Chunked",1545],[8,"UInt16Chunked",1545],[8,"UInt64Chunked",1545],[8,"Int8Chunked",1545],[8,"Int16Chunked",1545],[8,"Int32Chunked",1545],[8,"Int64Chunked",1545],[8,"PlIdHashMap",1545,5973],[5,"CategoricalChunkedBuilder",3069,6052],[5,"GlobalRevMapMerger",3069,6042],[6,"RevMapping",3212,6053],[6,"CategoricalOrdering",3212,6053],[5,"CatIter",3069,6041],[1,"u128"],[5,"DataFrame",3425],[5,"StringCacheHolder",3266,6054],[5,"EnumChunkedBuilder",3285,6055],[5,"ErrString",3313,5962],[6,"PolarsWarning",3313,6056],[10,"Display",5981],[6,"FloatFmt",3394],[1,"char"],[8,"Schema",5153],[8,"ArrayRef",6057],[5,"RecordBatchT",6058],[10,"IntoColumn",3719],[6,"NullStrategy",3425],[6,"UniqueKeepStrategy",3425],[8,"PlHashSet",1545,6002],[8,"ArrowSchema",4396,6059],[5,"Row",4268],[5,"GroupBy",4013],[5,"RangeInclusive",5998],[5,"RangeFrom",5998],[5,"RangeTo",5998],[5,"RangeToInclusive",5998],[5,"RangeFull",5998],[5,"RecordBatchIter",3425],[5,"PhysRecordBatchIter",3425],[10,"IntoSeries",5177,6060],[10,"RangeBounds",5998],[10,"IntoVec",5745],[8,"SchemaRef",5153],[6,"IndexOrder",4396,6061],[8,"RecordBatch",6058],[5,"StructArray",6062],[5,"ScalarColumn",3719,6063],[6,"BitRepr",5177,5991],[8,"SeriesPhysIter",5177,6064],[5,"UnpivotArgsIR",3985],[5,"GroupsIdx",4013,5964],[8,"IdxVec",6065],[6,"GroupByMethod",4013],[5,"SlicedGroups",4013,5964],[5,"GroupsProxyParIter",4013,5964],[10,"UnindexedConsumer",6066],[6,"GroupsIndicator",4013,5964],[8,"IdxItem",4013,5964],[10,"IntoGroupsProxy",4013,6067],[5,"Copied",6068],[5,"Zip",6069],[5,"GroupsProxyIter",4013,5964],[8,"GroupsSlice",4013,5964],[1,"array"],[6,"RollingFnParams",4396,6070],[10,"IsFloat",6071],[10,"NativeType",6072],[10,"AggList",4252,6073],[10,"TakeExtremum",4252],[10,"PhysicalAggExpr",4265],[6,"AnyValueBuffer",4268,6074],[6,"AnyValueBufferTrusted",4268,6074],[5,"IdHasher",4366,6075],[10,"VecHash",4366,6076],[10,"Allocator",6077],[5,"BorrowedFd",6078],[10,"AsFd",6078],[10,"AsRawFd",6079],[5,"OsStr",6080],[5,"Path",6081],[20,"MaybeUninit",6082],[10,"NumOpsDispatchChecked",4396,5976],[5,"ChunkId",4396,5987],[5,"RollingVarParams",4396,6070],[5,"RollingQuantileParams",4396,6070],[6,"NonExistent",4396,6083],[10,"Ord",6046],[10,"Default",6084],[5,"CStr",6085],[5,"Weak",5997],[10,"PartialEq",6046],[10,"Scalar",6086],[5,"Error",6087],[5,"TryReserveError",6088],[6,"Error",6089],[5,"Utf8Error",6090],[5,"CString",6091],[10,"ToOwned",6038],[1,"never"],[5,"OsString",6080],[5,"PathBuf",6081],[10,"FromData",5031,6092],[5,"Buffer",6093],[10,"FromDataUtf8",5031,6092],[10,"FromDataBinary",5031,6092],[5,"ListArray",6094],[6,"Ambiguous",4396,6083],[10,"NamedFromOwned",4396,6095],[10,"PartialOrd",6046],[10,"Hash",6020],[10,"SeriesTrait",5177,5991],[10,"CloneToUninit",6014],[10,"ChunkAggSeries",4396,6096],[10,"QuantileAggSeries",4396,6097],[10,"IndexToUsize",4396,6098],[10,"NamedFrom",4396,6095],[5,"Pin",6099],[5,"Request",6032],[5,"BorrowedCursor",6100],[5,"IoSliceMut",6101],[6,"SeekFrom",6101],[10,"VarAggSeries",4396,6102],[5,"AllocError",6077],[5,"BTreeMap",6103],[5,"Arguments",5981],[5,"IoSlice",6101],[5,"AnonymousBuilder",5037,6104],[5,"Offsets",6030],[5,"MutableNullArray",5060,6105],[5,"MutableBitmap",6106],[5,"Utf8Array",6107],[1,"u16"],[1,"i8"],[1,"i16"],[5,"Schema",6108],[10,"SchemaExt",5153],[17,"DataType"],[10,"SchemaNamesAndDtypes",5153],[8,"Metadata",6027],[5,"SeriesIter",5177,6064],[5,"Rc",6109],[10,"LhsNumOps",5660,5963],[10,"NumOpsDispatch",5660,5963],[6,"NumericListOp",5660,6110],[6,"NullBehavior",5719],[5,"SuperTypeFlags",5745,6111],[5,"SuperTypeOptions",5745,6111],[10,"Container",5745],[5,"TrustMyLength",5745,5985],[10,"CustomIterTools",5745,6112],[10,"FromIteratorReversed",6113],[10,"FromTrustedLenIterator",5745,6112],[5,"Wrap",5745],[5,"Repeat",6114],[5,"Take",6115],[8,"FillNullLimit",1243],[10,"InitHashMaps",1545],[10,"InitHashMaps2",1545],[5,"TrueT",1545],[15,"IO",3380],[15,"Context",3380],[15,"Count",4249],[15,"Slice",4250],[8,"QuantileInterpolOptions",4396],[10,"ListFromIter",4396],[10,"Utf8FromIter",5104],[10,"BinaryFromIter",5104]],"r":[[0,6075],[4,6054],[13,6054],[16,6054],[32,6054],[450,6008],[478,6009],[479,6009],[480,6011],[483,6012],[484,6013],[485,6009],[586,6015],[587,6015],[588,6018],[589,6016],[591,6019],[592,6017],[593,6018],[832,5996],[838,6023],[839,6022],[843,5995],[844,5974],[1160,6116],[1452,6036],[1460,6036],[1546,5986],[1548,6039],[1549,6039],[1550,6039],[1551,6027],[1553,5971],[1569,6041],[1572,6041],[1573,6052],[1574,6042],[1575,6053],[1578,5971],[1579,5971],[1580,5971],[1581,5971],[1592,5989],[1595,6045],[1604,5999],[1605,5999],[1620,5986],[1622,6042],[1626,5973],[1627,6098],[1628,5973],[1629,5973],[1631,6002],[1632,5973],[1657,6051],[1671,6043],[1672,6043],[1690,5986],[1694,6002],[1695,6002],[1696,5973],[1697,6002],[1698,6002],[1699,6002],[1700,5967],[1706,6045],[1707,6053],[1710,6031],[1722,6044],[1723,5971],[1750,5971],[1955,6042],[1973,6043],[2088,5971],[2220,6043],[2629,6042],[2630,6042],[2645,5971],[2742,6041],[2781,6041],[3069,6041],[3070,6041],[3071,6052],[3072,6042],[3073,6053],[3075,6042],[3079,6053],[3096,6042],[3164,6042],[3165,6042],[3183,6041],[3187,6041],[3212,6053],[3217,6053],[3266,6054],[3272,6054],[3275,6054],[3283,6054],[3285,6055],[3303,6053],[3308,6053],[3309,6054],[3310,6054],[3311,6054],[3312,6054],[3319,5962],[3326,5962],[3327,5962],[3328,6056],[3342,5962],[3350,5962],[3357,6056],[3362,5962],[3364,5962],[3365,5962],[3366,5962],[3367,5962],[3368,6056],[3369,5962],[3384,6117],[3385,6117],[3386,6117],[3387,4366],[3723,6063],[4013,5964],[4019,5964],[4020,5964],[4021,5964],[4022,5964],[4023,5964],[4024,5964],[4027,5964],[4029,6067],[4041,5964],[4252,6073],[4270,6074],[4271,6074],[4365,6118],[4366,6075],[4367,6075],[4368,6076],[4371,6076],[4372,6076],[4396,6083],[4397,5997],[4398,6008],[4399,6039],[4400,5977],[4402,6059],[4403,6009],[4404,6011],[4406,6041],[4407,6041],[4408,6052],[4409,6042],[4410,6053],[4411,6096],[4412,5987],[4413,40],[4414,478],[4415,768],[4416,768],[4417,3719],[4421,3425],[4430,6092],[4431,6092],[4432,6092],[4434,6042],[4438,6098],[4439,5987],[4440,6061],[4441,6098],[4442,3719],[4443,6060],[4444,5745],[4446,6119],[4447,6119],[4448,6119],[4451,5963],[4454,6018],[4455,6016],[4456,586],[4457,6120],[4458,6017],[4459,6018],[4465,6095],[4466,6095],[4469,478],[4471,6083],[4474,5987],[4475,5987],[4476,5963],[4477,5976],[4481,5967],[4482,5962],[4483,788],[4484,1113],[4485,5962],[4486,6013],[4488,6097],[4489,6000],[4490,6000],[4493,6053],[4494,6070],[4495,6001],[4496,6070],[4497,6070],[4500,5109],[4503,5177],[4504,5991],[4506,6036],[4507,6054],[4509,6009],[4511,3425],[4512,3985],[4514,6102],[4515,6076],[4570,6042],[4621,6120],[4622,0],[4635,6120],[4667,0],[4815,6098],[4860,6120],[4862,6042],[4863,6042],[4890,6120],[4897,5962],[4898,5962],[4899,5962],[4900,5962],[4912,6041],[4914,6120],[4920,6041],[5001,6120],[5031,6092],[5032,6092],[5033,6092],[5037,6104],[5060,6105],[5091,6053],[5096,6053],[5097,6036],[5100,6054],[5101,6054],[5102,6054],[5103,6054],[5104,6121],[5105,6121],[5179,5991],[5180,1243],[5183,6060],[5184,5991],[5185,5991],[5190,6064],[5191,6064],[5192,5991],[5663,5963],[5665,5963],[5666,5963],[5667,6110],[5678,5963],[5711,5976],[5712,5976],[5748,6112],[5749,6112],[5750,6112],[5753,6111],[5754,6111],[5755,5985],[5770,6122],[5771,6122],[5831,6123],[5832,6111],[5872,6111],[5873,6111],[5875,6124],[5903,6111],[5904,6111],[5936,6111],[5953,6124]],"b":[[50,"impl-Add-for-ChunkedArray%3CT%3E"],[51,"impl-Add-for-%26ChunkedArray%3CT%3E"],[52,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[53,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[67,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CT%3E"],[73,"impl-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkedArray%3CBinaryType%3E"],[103,"impl-Container-for-ChunkedArray%3CT%3E"],[104,"impl-ChunkedArray%3CT%3E"],[124,"impl-Div-for-ChunkedArray%3CT%3E"],[125,"impl-Div-for-%26ChunkedArray%3CT%3E"],[126,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[127,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[136,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[137,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[144,"impl-Debug-for-ChunkedArray%3CT%3E"],[145,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[156,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[159,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[160,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[227,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[228,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[229,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[230,"impl-ChunkedArray%3CT%3E"],[231,"impl-Container-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkedArray%3CBooleanType%3E"],[241,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[244,"impl-ChunkedArray%3CBooleanType%3E"],[245,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[255,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[256,"impl-ChunkedArray%3CBooleanType%3E"],[260,"impl-ChunkedArray%3CBooleanType%3E"],[261,"impl-ChunkedArray%3CT%3E"],[262,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[263,"impl-Mul-for-ChunkedArray%3CT%3E"],[264,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[265,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[270,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[271,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[272,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[273,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[275,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[278,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[279,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[280,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[281,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[283,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[284,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[287,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[288,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[289,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[290,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[291,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[292,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[293,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[301,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[310,"impl-ChunkedArray%3CStringType%3E"],[311,"impl-ChunkedArray%3CListType%3E"],[312,"impl-ChunkedArray%3CListType%3E"],[313,"impl-ChunkedArray%3CStringType%3E"],[326,"impl-Rem-for-ChunkedArray%3CT%3E"],[327,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[328,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[329,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[348,"impl-Container-for-ChunkedArray%3CT%3E"],[349,"impl-ChunkedArray%3CT%3E"],[352,"impl-Container-for-ChunkedArray%3CT%3E"],[353,"impl-ChunkedArray%3CT%3E"],[356,"impl-Sub-for-ChunkedArray%3CT%3E"],[357,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[358,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[359,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[361,"impl-ChunkedArray%3CBooleanType%3E"],[362,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[366,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[367,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[368,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[374,"impl-ChunkedArray%3CListType%3E"],[375,"impl-ChunkedArray%3CT%3E"],[380,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[381,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[382,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[383,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[384,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[385,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[534,"impl-BinViewChunkedBuilder%3Cstr%3E"],[535,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[865,"impl-MetadataProperties"],[866,"impl-Flags-for-MetadataProperties"],[867,"impl-Flags-for-MetadataFlags"],[868,"impl-MetadataFlags"],[932,"impl-MetadataTrait-for-Metadata%3CT%3E"],[933,"impl-Metadata%3CT%3E"],[958,"impl-Octal-for-MetadataProperties"],[959,"impl-LowerHex-for-MetadataProperties"],[960,"impl-UpperHex-for-MetadataProperties"],[961,"impl-Binary-for-MetadataProperties"],[962,"impl-Debug-for-MetadataProperties"],[963,"impl-Debug-for-MetadataFlags"],[964,"impl-UpperHex-for-MetadataFlags"],[965,"impl-Octal-for-MetadataFlags"],[966,"impl-LowerHex-for-MetadataFlags"],[967,"impl-Binary-for-MetadataFlags"],[977,"impl-MetadataProperties"],[978,"impl-Flags-for-MetadataProperties"],[979,"impl-MetadataFlags"],[980,"impl-Flags-for-MetadataFlags"],[991,"impl-MetadataTrait-for-Metadata%3CT%3E"],[992,"impl-Metadata%3CT%3E"],[1035,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1036,"impl-Metadata%3CT%3E"],[1040,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1041,"impl-Metadata%3CT%3E"],[1119,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1120,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1155,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1156,"impl-ObjectArray%3CT%3E"],[1171,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1172,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1182,"impl-ObjectArray%3CT%3E"],[1183,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1184,"impl-ObjectArray%3CT%3E"],[1185,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1187,"impl-Array-for-ObjectArray%3CT%3E"],[1188,"impl-ObjectArray%3CT%3E"],[1191,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1192,"impl-ObjectChunkedBuilder%3CT%3E"],[1194,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1195,"impl-ObjectChunkedBuilder%3CT%3E"],[1791,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1792,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1793,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1794,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1795,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1796,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1797,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1798,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1874,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1875,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1876,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1877,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1878,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1879,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[2223,"impl-PartialEq-for-DataType"],[2224,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2235,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2236,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2237,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2238,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2241,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2242,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2243,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2244,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2278,"impl-Debug-for-AnyValue%3C\'a%3E"],[2279,"impl-Display-for-AnyValue%3C\'_%3E"],[2281,"impl-Debug-for-DataType"],[2282,"impl-Display-for-DataType"],[2285,"impl-Debug-for-TimeUnit"],[2286,"impl-Display-for-TimeUnit"],[2288,"impl-Display-for-ReshapeDimension"],[2289,"impl-Debug-for-ReshapeDimension"],[2300,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2302,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2303,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2304,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2305,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2308,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2309,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2310,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2313,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2314,"impl-From%3C%26Field%3E-for-Field"],[2340,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2341,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2344,"impl-FromIterator%3COption%3CColumn%3E%3E-for-ChunkedArray%3CListType%3E"],[2345,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2346,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2347,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2349,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2350,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2351,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2352,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2358,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2359,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2361,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2362,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2363,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2364,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2365,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2366,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2373,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2374,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2375,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2376,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2377,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2378,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2470,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2471,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2472,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2473,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2475,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2476,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2477,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2478,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2620,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2621,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2622,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2623,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2625,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2626,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2627,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2628,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2669,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2670,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2671,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2672,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2673,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2674,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2675,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2676,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2677,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2678,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2694,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2695,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2698,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2699,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2700,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2701,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2704,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2705,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2706,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2707,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2794,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[2795,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[2796,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2797,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2798,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2799,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[3116,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3117,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3118,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3119,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3120,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3121,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3137,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3138,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3139,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3140,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3141,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3142,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3158,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3159,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3160,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3161,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3162,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3163,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3174,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3175,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3176,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3177,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3178,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3179,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3352,"impl-Display-for-ErrString"],[3353,"impl-Debug-for-ErrString"],[3450,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3451,"impl-Add%3C%26Series%3E-for-DataFrame"],[3452,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3498,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3499,"impl-Div%3C%26Series%3E-for-DataFrame"],[3500,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3532,"impl-Debug-for-DataFrame"],[3533,"impl-Display-for-DataFrame"],[3539,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3540,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3566,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3567,"impl-Index%3Cusize%3E-for-DataFrame"],[3568,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3569,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3570,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3571,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3572,"impl-Index%3C%26str%3E-for-DataFrame"],[3573,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3591,"impl-Container-for-DataFrame"],[3592,"impl-DataFrame"],[3600,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3601,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3602,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3623,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3624,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3625,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3653,"impl-DataFrame"],[3654,"impl-Container-for-DataFrame"],[3658,"impl-DataFrame"],[3659,"impl-Container-for-DataFrame"],[3662,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3663,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3664,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3680,"impl-TryExtend%3CResult%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E,+PolarsError%3E%3E-for-DataFrame"],[3681,"impl-TryExtend%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E%3E-for-DataFrame"],[3686,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3687,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3727,"impl-Add-for-Column"],[3728,"impl-Add%3CT%3E-for-%26Column"],[3729,"impl-Add%3CT%3E-for-Column"],[3730,"impl-Add-for-%26Column"],[3760,"impl-BitAnd-for-Column"],[3761,"impl-Column"],[3762,"impl-BitAnd-for-%26Column"],[3763,"impl-BitOr-for-Column"],[3764,"impl-Column"],[3765,"impl-BitOr-for-%26Column"],[3766,"impl-BitXor-for-%26Column"],[3767,"impl-Column"],[3768,"impl-BitXor-for-Column"],[3794,"impl-Div%3CT%3E-for-%26Column"],[3795,"impl-Div-for-Column"],[3796,"impl-Div-for-%26Column"],[3797,"impl-Div%3CT%3E-for-Column"],[3821,"impl-From%3CSeries%3E-for-Column"],[3823,"impl-From%3CScalarColumn%3E-for-Column"],[3874,"impl-Mul%3CT%3E-for-Column"],[3875,"impl-Mul-for-Column"],[3876,"impl-Mul%3CT%3E-for-%26Column"],[3877,"impl-Mul-for-%26Column"],[3897,"impl-Rem-for-Column"],[3898,"impl-Rem-for-%26Column"],[3899,"impl-Rem%3CT%3E-for-Column"],[3900,"impl-Rem%3CT%3E-for-%26Column"],[3921,"impl-Sub-for-%26Column"],[3922,"impl-Sub%3CT%3E-for-Column"],[3923,"impl-Sub-for-Column"],[3924,"impl-Sub%3CT%3E-for-%26Column"],[4127,"impl-Debug-for-GroupByMethod"],[4128,"impl-Display-for-GroupByMethod"],[4134,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4135,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4169,"impl-IntoIterator-for-%26GroupsIdx"],[4170,"impl-IntoIterator-for-GroupsIdx"],[4172,"impl-IntoParallelIterator-for-GroupsIdx"],[4173,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4532,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4533,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4534,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4535,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4538,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4539,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4627,"impl-Default-for-Arc%3CT%3E"],[4628,"impl-Default-for-Arc%3Cstr%3E"],[4629,"impl-Default-for-Arc%3CCStr%3E"],[4630,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4690,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4691,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4692,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4718,"impl-Debug-for-PolarsError"],[4719,"impl-Display-for-PolarsError"],[4720,"impl-Debug-for-PlSmallStr"],[4721,"impl-Display-for-PlSmallStr"],[4724,"impl-Pointer-for-Arc%3CT,+A%3E"],[4725,"impl-Debug-for-Arc%3CT,+A%3E"],[4726,"impl-Display-for-Arc%3CT,+A%3E"],[4736,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4738,"impl-From%3CError%3E-for-PolarsError"],[4739,"impl-From%3CError%3E-for-PolarsError"],[4740,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4741,"impl-From%3C%26str%3E-for-PlSmallStr"],[4742,"impl-From%3CString%3E-for-PlSmallStr"],[4743,"impl-From%3C%26String%3E-for-PlSmallStr"],[4744,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4749,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4750,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4751,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4752,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4753,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4756,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4757,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4758,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4759,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4760,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4761,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4762,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4763,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4764,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4765,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4766,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4779,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4780,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4781,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4782,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4783,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4784,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4785,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4786,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[5124,"impl-From%3Cu16%3E-for-Scalar"],[5125,"impl-From%3Ci32%3E-for-Scalar"],[5126,"impl-From%3CPlSmallStr%3E-for-Scalar"],[5127,"impl-From%3Cf64%3E-for-Scalar"],[5128,"impl-From%3Cf32%3E-for-Scalar"],[5130,"impl-From%3Cu64%3E-for-Scalar"],[5131,"impl-From%3Cu32%3E-for-Scalar"],[5132,"impl-From%3Cu8%3E-for-Scalar"],[5133,"impl-From%3Cbool%3E-for-Scalar"],[5134,"impl-From%3Ci8%3E-for-Scalar"],[5135,"impl-From%3Ci16%3E-for-Scalar"],[5136,"impl-From%3Ci64%3E-for-Scalar"],[5200,"impl-Add-for-Series"],[5201,"impl-Add%3CT%3E-for-Series"],[5202,"impl-Add%3CT%3E-for-%26Series"],[5203,"impl-Add-for-%26Series"],[5226,"impl-BitAnd-for-Series"],[5227,"impl-BitAnd%3C%26Series%3E-for-Series"],[5228,"impl-BitAnd-for-%26Series"],[5229,"impl-BitAnd%3CSeries%3E-for-%26Series"],[5230,"impl-BitOr%3C%26Series%3E-for-Series"],[5231,"impl-BitOr-for-%26Series"],[5232,"impl-BitOr%3CSeries%3E-for-%26Series"],[5233,"impl-BitOr-for-Series"],[5234,"impl-BitXor%3C%26Series%3E-for-Series"],[5235,"impl-BitXor%3CSeries%3E-for-%26Series"],[5236,"impl-BitXor-for-Series"],[5237,"impl-BitXor-for-%26Series"],[5283,"impl-Div%3CT%3E-for-%26Series"],[5284,"impl-Div%3CT%3E-for-Series"],[5285,"impl-Div-for-%26Series"],[5286,"impl-Div-for-Series"],[5298,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5299,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5300,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5301,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5302,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5303,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5321,"impl-Display-for-Series"],[5322,"impl-Debug-for-Series"],[5334,"impl-FromIterator%3Cbool%3E-for-Series"],[5335,"impl-FromIterator%3C%26u64%3E-for-Series"],[5336,"impl-FromIterator%3C%26i32%3E-for-Series"],[5337,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5338,"impl-FromIterator%3Ci64%3E-for-Series"],[5339,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5340,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5341,"impl-FromIterator%3C%26u32%3E-for-Series"],[5342,"impl-FromIterator%3CString%3E-for-Series"],[5343,"impl-FromIterator%3C%26str%3E-for-Series"],[5344,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5345,"impl-FromIterator%3C%26bool%3E-for-Series"],[5346,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5347,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5348,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5349,"impl-FromIterator%3Cf32%3E-for-Series"],[5350,"impl-FromIterator%3C%26f64%3E-for-Series"],[5351,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5352,"impl-FromIterator%3C%26f32%3E-for-Series"],[5353,"impl-FromIterator%3Cf64%3E-for-Series"],[5354,"impl-FromIterator%3Cu64%3E-for-Series"],[5355,"impl-FromIterator%3Ci32%3E-for-Series"],[5356,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5357,"impl-FromIterator%3Cu32%3E-for-Series"],[5358,"impl-FromIterator%3C%26i64%3E-for-Series"],[5359,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5360,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5361,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5362,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5363,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5364,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5365,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5379,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5380,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5381,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5382,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5383,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5384,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5432,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5433,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5434,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5435,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5436,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5437,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5451,"impl-Mul-for-%26Series"],[5452,"impl-Mul-for-Series"],[5453,"impl-Mul%3CT%3E-for-Series"],[5454,"impl-Mul%3CT%3E-for-%26Series"],[5461,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5462,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5463,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5464,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5465,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5466,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5467,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5468,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5469,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5470,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5471,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5472,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5473,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5474,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5475,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5476,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5477,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5478,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5479,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5480,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5481,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5482,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5483,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5484,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5485,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5486,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5487,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5488,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5489,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5490,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5491,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5492,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5493,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5494,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5495,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5496,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5497,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5502,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5503,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5504,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5505,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5506,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5507,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5520,"impl-Rem%3CT%3E-for-Series"],[5521,"impl-Rem%3CT%3E-for-%26Series"],[5522,"impl-Rem-for-%26Series"],[5554,"impl-Sub-for-%26Series"],[5555,"impl-Sub%3CT%3E-for-Series"],[5556,"impl-Sub-for-Series"],[5557,"impl-Sub%3CT%3E-for-%26Series"],[5585,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5586,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5587,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5588,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5778,"impl-SuperTypeFlags"],[5779,"impl-Flags-for-SuperTypeFlags"],[5846,"impl-UpperHex-for-SuperTypeFlags"],[5847,"impl-LowerHex-for-SuperTypeFlags"],[5848,"impl-Debug-for-SuperTypeFlags"],[5849,"impl-Binary-for-SuperTypeFlags"],[5850,"impl-Octal-for-SuperTypeFlags"],[5859,"impl-SuperTypeFlags"],[5860,"impl-Flags-for-SuperTypeFlags"],[5862,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5863,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5866,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5867,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5870,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5871,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAA0AEAAAANIPGxBWEFkQWhBbEFwQXRBiEGUQahBrEJEQihE=","e":"OzAAAAEAALMRRgIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBAAAAAQwABAEYABQBOAAEAUQAAAFMAAABVAAoAYQAAAGQABABsAAMAcQACAHgADQCHAAMAjAACAJAABQCYAAEAnAAFAKQAAwCqAAMArwAFALYAAQC7AAAAvQADAMMAAgDKAAUA0QADANgAAgDcAAIA4AAGAOgAAADtAA0AAAEEAAcBBgAPARsALgEDADMBAgA3AQQAPQEBAEMBAgBHAQQATQEAAFIBBQBaAQEAXQEAAF8BAgBjAQkAcwEBAHkBAAB9AQgAhwEIAJEBAACTAQUAmwEAAJ0BIwDCASkA8AECAPYBJwAkAgUALgIAADACJgBZAkwArQIMAMECJADpAg0A+AIBAPsCGQAYAwkAJAMBACgDAQArAxUAQgMJAE0DCgBjAwEAagMNAHkDEACOAxIAowMAAKUDCQCxAwMAtwMBALsDDQDTAwAA1QMAANwDBwDlAwcA+gMBAP4DAAABBAMACQQFABAEBAAcBAsALwQEADYEDQBGBAYAUAQIAFoEAQBeBBYAdgQIAIAEAACDBAEAhgQBAIsEEACdBAAAoAQEAKYEAgCqBAEArQQHALYEAQC5BAUAwQQBAMQEAADGBAEAyQQDAM4EBADUBAIA2AQDAN4EAADhBAAA6gQAAO8EAADyBAEA9wQBAPoEAAD9BAEACAUBABIFAgAYBQYAIQUCACYFAQApBQAAKwUBADEFAQA0BQIAPAUBAEIFAABFBQEASQUAAEsFAABNBQAATwUAAFQFBABbBQEAXgUHAGcFAQBqBQAAbgUAAHAFAwB1BQEAeAUFAIQFHgCkBQEAqAUEAK4FAwC4BREAzAUKANgFAADaBQMA7AUJAAIGDQASBgIAFgYFAB4GAAAgBg4AMgYAADQGAAA5BgEAPAYBAD8GAwBEBgAARgYAAEkGAABMBgAATgYBAFEGAABTBgIAVwYNAGYGAABoBgEAawYAAG0GAQBwBgAAcgYBAHUGAAB3BgEAegYDAIEGAACFBgEAiQYAAIwGAACOBgAAkAYDAJUGAACYBggAogYCAKcGAwCsBgAArgYCALMGAAC1BgAAugYCAL4GAQDBBgAAwwYBAMYGAADIBgEAywYAAM0GAQDQBgAA0gYBANUGAADXBgAA2gY+AB8HBAAmBwkAMQcEADcHAwA8BwQAQgcAAEQHYACmBwIAqgd0ACAIBQAnCIAAqQgAAKwISQD9CAAA/wgDAAUJAgAKCQEADQkAACUJAQAoCRgARQklAG0JBgB2CR4AmAkBAJ0JQgDiCQAACAoLABYKAAAYCgIAHAoBAB8KAAAkCgcALQoBADEKAgA2CgQAPAoNAEsKAABNCgoAWQoDAF4KCgBqCg0AeQojAJ4KCACoChwAxgoWAN4KDgDuCgAA8woAAPUKAAD3CgAA+wofAB0LBQAkC1YAfAswAK4LTgD+CwQABAwBAAcMAgALDAQAEQwkAD4MAgBCDAkAUAwEAFYMFwBwDAEAcwwEAHkMDQCIDAUAjwwAAJEMFwCqDAEAsAwCALUMAQC5DAkAxAwEAMoMAQDPDAAA0QwCANUMCgDhDAAA4wwFAOoMAADsDAEA8gwEAPgMBAD+DBAAEA0KABwNAAAeDQIAIw0FACoNJQBRDQUAWA0JAGUNAABoDQsAdg0DAHsNAwCADQAAhQ0LAJINCQCfDRIAsw0AALwNAQDADQEAww0AAMUNAADLDQMA3Q0AAOQNAADnDQEA7w0MAAIOAQAIDgAACw4BABEOAwAcDgEAHw4AACgOAgAwDgAAMw4AADoOAABEDgEARw4BAEwOBQBZDgQAYQ4IAGwOCgB4DgAAfQ4EAIoOAQCNDgYAoQ4FAKoOAgCuDhIAww4bAOEOCwDuDgAA8A4AAPIOBQD7DgoACA8DAA0PCQAYDwIAHQ8UADQPDABCDxYAWw8AAF4PAgBiDyQAiA8JAJMPDQCiDwIApg8KALIPAQC1DwMAug8DAL8PCQDKDwcA0w8BANYPHAD0DyYAHBAGACcQAQAqEAAALhACADMQAAA4EAcASBANAFcQAQBeEAMAYxABAGcQAgBsEAAAbhAgAJIQDAChEAUAqBAHALEQFgDKEA4A2hANAOkQAADrEAAA7RADAPQQBQD+EA4ADxENAB4RAAAgEQIAJREIAC8RAgA0EQcAPREPAE4RAwBTERkAbhEQAIARAQCDERcAnRETALIRAAC0EQYAvREfAN8RAwDkESAABhIHAA8SAQATEgAAGBIkAEASBABGEggAURIBAFQSKwCBEgAAgxIGAIsSAACUEgAAmBIAAKkSAACsEgcAuhIAAL0SAwDFEgAAxxIGANASEADvEgAA8xIDAPgSAwD9EgAA/xIBAAYTAAAbEwMAIhMEACkTAAAsEwcANhMAADgTAQA9EzEAdxMCAHsTDQCKEwAAjBMNAJ4TDQCuEwYAthMAALgTHQDXEwAA2RMLAOYTAADoEwEA8RMYAAsUBwAVFBcALhQAADAUAgA0FAAANhQAADgUAAA6FAUAQRQEAEcUBQBRFAQAXRQAAGMUAgBrFAsAeBQLAIcUAwCMFAAAkBQCAJQUAwCaFBIAsRQBALQUAQC3FAEAuxQBAMkUAwDRFAAA1BQBANcUIAD6FAAA/BQBAAQVAAAGFQEACRUAAAsVAAARFQEAFBUDABwVBQAqFQMALxUAADMVAAA6FQEAPRUBAEQVAABMFQMAUhUAAFYVDgBmFRQAfRUDAIMVAQCHFQAAihUAAI8VBACWFQAAmBUAAJwVAgCjFQEAphUAAKgVAQCrFQAAsRUAALMVAwDDFQEAxhUBAM8VBwDbFQQA4RUBAOYVAQDsFQMA9xUAAPwVAwABFgAABhYLABMWAAAVFgAAFxYEAB0WHgA9FgAAPxYSAFUWAgBaFg4AahYBAG0WBAB0FgMAehYIAIUWAACJFgEAjRYBAJQWAACXFhMArBYCALMWDgDDFgQAyxYIANUWBwDgFgAA5RYAAOcWAQDqFgIA7hYDAPMWCQAFFwQADRcAAA8XBAAWFwEAGRcBAB0XAgAiFwAAJxcCACwXBAAyFwkAPRcEAEMXBAA="}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNCNNNNNNNNNNNNNNONNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPFPGPFPPFKPGGPPNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNCNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOONHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFGNNNNNHNNNNNNNNNNNHNNNNNNNNHHNNNNNNNENNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNHNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNONNNNNNNNNNNNNNNNNNHNNNNNNNONNNNNNNNNNNNNNNNNNNNPPPGNNHNNNHNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSHCHCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","credential_provider","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get_range","get_ranges_sort","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","Aws","AwsCredential","Azure","AzureCredential","BearerToken","CredentialProviderFunction","Function","Gcp","GcpCredential","IntoCredentialProvider","None","ObjectStoreCredential","PlCredentialProvider","Python","SASToken","__clone_box","","bearer","borrow","","","","","","borrow_mut","","","","","","clone","","clone_into","","clone_to_uninit","","deref","","","","","","deref_mut","","","","","","deserialize","drop","","","","","","eq","","","","","equivalent","","","","","","","","","","","","","","","fmt","","","","","from","","","","","","","","from_func","from_python_func","from_python_func_object","hash","","init","","","","","","into","","","","","","into_aws_provider","","","into_azure_provider","","","into_gcp_provider","","","key_id","secret_key","serialize","to_owned","","token","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_credential_provider","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_csv_read_internal","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","compile","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","AllColumns","AllColumnsSingle","Columns","CountLines","NullValuesCompiled","__clone_box","borrow","","borrow_mut","","cast_columns","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","find_next","find_starting_point","fmt","from","","init","","into","","new","prepare_csv_schema","read_chunk","to_owned","try_from","","try_into","","type_id","","validate_utf8","vzip","","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","validate_utf8","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_parallel","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","write_encoded","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","to_bytes","to_file","to_memslice","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","create_sorting_map","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","","serialize","","set_low_memory","set_metadata","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","try_set_sorted_flag","type_id","","","","","use_statistics","","","vzip","","","","","with_arrow_schema_projection","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","apply_projection","byte_source","columns_to_projection","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::credential_provider"],[372,"polars_io::cloud::options"],[560,"polars_io::csv"],[562,"polars_io::csv::read"],[823,"polars_io::csv::read::_csv_read_internal"],[866,"polars_io::csv::read::buffer"],[941,"polars_io::csv::read::buffer::Buffer"],[944,"polars_io::csv::read::schema_inference"],[971,"polars_io::csv::write"],[1116,"polars_io::file_cache"],[1137,"polars_io::ipc"],[1376,"polars_io::json"],[1474,"polars_io::mmap"],[1495,"polars_io::ndjson"],[1497,"polars_io::ndjson::core"],[1600,"polars_io::parquet"],[1603,"polars_io::parquet::metadata"],[1656,"polars_io::parquet::read"],[1802,"polars_io::parquet::read::_internal"],[1824,"polars_io::parquet::write"],[2048,"polars_io::partition"],[2049,"polars_io::path_utils"],[2056,"polars_io::pl_async"],[2078,"polars_io::predicates"],[2146,"polars_io::prelude"],[2157,"polars_io::utils"],[2170,"polars_io::utils::byte_source"],[2251,"polars_io::utils::compression"],[2269,"polars_io::utils::slice"],[2288,"dyn_clone::sealed"],[2289,"polars_io::options"],[2290,"core::result"],[2291,"serde::de"],[2292,"polars_io::shared"],[2293,"polars_core::frame"],[2294,"polars_error"],[2295,"core::fmt"],[2296,"core::hash"],[2297,"std::io"],[2298,"polars_arrow::record_batch"],[2299,"core::option"],[2300,"serde::ser"],[2301,"core::any"],[2302,"polars_io::avro::read"],[2303,"polars_arrow::datatypes::schema"],[2304,"polars_io::avro::write"],[2305,"polars_core::schema"],[2306,"alloc::string"],[2307,"alloc::vec"],[2308,"polars_io::cloud::glob"],[2309,"object_store"],[2310,"alloc::sync"],[2311,"polars_io::cloud::polars_object_store"],[2312,"object_store::path"],[2313,"tokio::fs::file"],[2314,"polars_io::cloud::adaptors"],[2315,"std::io::error"],[2316,"crossterm::command"],[2317,"url"],[2318,"core::ops::range"],[2319,"bytes::bytes"],[2320,"polars_utils::aliases"],[2321,"core::convert"],[2322,"core::cmp"],[2323,"core::ops::function"],[2324,"polars_parquet_format::thrift::varint::decode"],[2325,"object_store::aws::credential"],[2326,"object_store::azure::credential"],[2327,"object_store::gcp::credential"],[2328,"core::future::future"],[2329,"alloc::boxed"],[2330,"core::pin"],[2331,"core::marker"],[2332,"polars_utils::python_function"],[2333,"pyo3::instance"],[2334,"object_store::aws"],[2335,"object_store::azure"],[2336,"object_store::gcp"],[2337,"object_store::aws::builder"],[2338,"object_store::azure::builder"],[2339,"object_store::gcp::builder"],[2340,"core::iter::traits::collect"],[2341,"polars_io::csv::read::reader"],[2342,"polars_io::csv::read::read_impl::batched"],[2343,"polars_io::csv::read::options"],[2344,"std::path"],[2345,"polars_utils::pl_str"],[2346,"std::fs"],[2347,"polars_core::datatypes::dtype"],[2348,"polars_core::datatypes::field"],[2349,"polars_io::csv::read::parser"],[2350,"polars_core::series"],[2351,"polars_io::csv::write::writer"],[2352,"polars_io::csv::write::options"],[2353,"core::num::nonzero"],[2354,"polars_io::file_cache::entry"],[2355,"polars_io::ipc::ipc_stream"],[2356,"polars_io::ipc::write"],[2357,"polars_io::ipc::ipc_file"],[2358,"polars_io::ipc::ipc_reader_async"],[2359,"polars_arrow::io::ipc::read::file"],[2360,"polars_arrow::io::ipc::write::common"],[2361,"polars_utils::mmap::private"],[2362,"polars_arrow::array::struct_"],[2363,"polars_arrow::array"],[2364,"polars_arrow::datatypes"],[2365,"polars_arrow::datatypes::field"],[2366,"polars_arrow::array::growable::structure"],[2367,"polars_arrow::bitmap::immutable"],[2368,"polars_arrow::scalar"],[2369,"polars_arrow::array::struct_::iterator"],[2370,"polars_arrow::bitmap::utils::iterator"],[2371,"polars_arrow::bitmap::utils::zip_validity"],[2372,"polars_parquet::parquet::metadata::file_metadata"],[2373,"polars_parquet::parquet::metadata::column_order"],[2374,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2375,"core::iter::traits::exact_size"],[2376,"polars_parquet::arrow::read::statistics"],[2377,"polars_parquet_format::parquet_format"],[2378,"polars_parquet::parquet::metadata::schema_descriptor"],[2379,"polars_parquet::parquet::error"],[2380,"polars_io::parquet::read::reader"],[2381,"polars_io::parquet::read::read_impl"],[2382,"polars_io::parquet::read::options"],[2383,"polars_parquet::parquet::metadata::row_metadata"],[2384,"polars_core::series::series_trait"],[2385,"polars_parquet::arrow::read::deserialize::utils::filter"],[2386,"polars_io::parquet::write::writer"],[2387,"polars_io::parquet::write::batched_writer"],[2388,"polars_parquet::arrow::write"],[2389,"polars_io::parquet::write::options"],[2390,"polars_parquet::parquet::write"],[2391,"core::iter::traits::iterator"],[2392,"polars_parquet::arrow::write::file"],[2393,"std::sync::mutex"],[2394,"tokio::runtime::task::join"],[2395,"avro_schema::file"],[2396,"polars_io::cloud::object_store_setup"],[2397,"polars_io::csv::read::read_impl"],[2398,"polars_io::file_cache::cache"],[2399,"polars_io::file_cache::utils"],[2400,"polars_io::parquet::read::utils"],[2401,"polars_io::parquet::read::predicates"],[2402,"polars_io::parquet::read::mmap"],[2403,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEhDj21020`222`010210221102010102102022`21021021021``0101210210210210211HfAJ``0`1`H`1``1``020HbHh3Hd3251403251323232403251403251340325103251000333222555111032514000325133332403251403251In43043043114431514362514362514362514362JhJf1`Jj2Jl0`21223133``2232223223300`00223332232112323233322Dh42342301423014200003042304230420301423014230423014230142333000444222030423014231420304230142301420304230423014230142301423014200000``Lj0``````LfLh2``01LbLd324`Kf00L`Kn24365710243657`4436574365743657437``34361024365710243657436571024365743343657444333666555777424365710243655744436574`41024365710243657444344255510344434444`4343657444365731024365710243657431024365741024365744334334444344344434444434433Ll00``0Ml101`11100101010`10101010``1010101`01Mn`0`00`0000000000000`00AJbAJdAJf32103210321032103321032103`21033210321032103`2103AJh00`Mf000000000`0000``000000000Nn```000``NjNl21Nf0Nh324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```Od00000`0`000000000```````````A@b0OlOnA@`3OfOhA@lA@d3A@nA@j4Oj987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:743462154697:46987:74362150987:4362150987:4362150987:4362150987:462521514446584684688070`AAn`0```AAf1AAhAAlAAj342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001Nd`0`0000000000Kj011111````ABd00000000ABl1011111100101011111010110110010111110011111111111111111111111111010110111110100000000000111``````ACnADb1011111110101`0010010010101111000111110110101101AEj`00````00AEh1`AEbAEfAEd213402134343434`402134021343402134343334442103402134121340213402134003`020213210213342221340213402134`0213421302134212212121212121AFd00`00`000`0000`0`0000`AG``0`00````0`00`AFlAFn2AGbAGdAGfAFhAFj16574320165743265743265743265743255657016574320165743265743260165743260657432666555777444333222016574320165743260657432016574320165743266566165657432156574325016574320165743243201657432016574321111050``````````AHd0000000`00AHf1111`11`````AHlAHn`Kh21212121211212121212022121222221212102121121AHj233332323232322```AfAl10111```````````````AId``0`AIb0`0AIfAIh321032222310321032103221033332AIj21402140214214321433321432143214342143AIl`00000000000`0000AIn00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}`{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hEf}}}{{Aj{f}}}}{{{b{hEh}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}Ej}}}El{}}`{{{b{hEh}}}{{En{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{F`}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}{Fb{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{ce}}}}}{{Fn{n}{{Fj{{`{Fl}}}}}}G`Gb}{{Gd{Fd}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Gf}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Eh}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Eh}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}Ej}}}El{}}`{{{b{h}}g}{{A`{eEj}}}{}{}{{Gj{{b{hc}}}{{Gh{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEh}}{b{{Ff{Gl}}}}}{{En{n}}}}{{{b{h}}c}{{A`{nEj}}}Gn}````````````````{{bd}f}0`{b{{b{c}}}{}}00000{{{b{h}}}{{b{hc}}}{}}00000{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{b{b{hc}}}f{}}0{bf}0{n{{b{c}}}{}}00000{n{{b{hc}}}{}}00000{c{{A`{H`}}}Ab}{nf}00000{{{b{Hd}}{b{Hd}}}Ad}{{{b{H`}}{b{H`}}}Ad}{{{b{Hb}}{b{Hb}}}Ad}{{{b{Hf}}{b{Hf}}}Ad}{{{b{Hh}}{b{Hh}}}Ad}{{b{b{c}}}Ad{}}00000000000000{{{b{Hd}}{b{hAn}}}{{A`{fCn}}}}{{{b{H`}}{b{hAn}}}B`}{{{b{Hb}}{b{hAn}}}B`}{{{b{Hf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Hh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{HjHd}1{HlHd}2222{cH`{{Id{}{{Gh{{Ib{{I`{Hn}}}}}}}}IfIh}}{IjH`}{IlH`}{{{b{H`}}{b{hc}}}fBb}{{{b{Hb}}{b{hc}}}fBb}{{}n}00000{{}c{}}00000{InJ`}{H`J`}{HbJ`}{InJb}{H`Jb}{HbJb}{InJd}{H`Jd}{HbJd}``{{{b{H`}}c}A`Bn}{bc{}}0`{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{bC`}00000>>>>>>```````````````````````````````````````````````````````{{bd}f}000{{{b{Jf}}}{{b{Df}}}}{{{b{Jh}}}{{b{Df}}}}{{{b{Jj}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Jf}}}Jf}{{{b{Dh}}}Dh}{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Jf}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Jh}}}Ab}{c{{A`{Jj}}}Ab}{nf}0000{{{b{Jf}}{b{Jf}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Jl}}{b{Jl}}}Ad}{{{b{Jh}}{b{Jh}}}Ad}{{{b{Jj}}{b{Jj}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Jf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Jh}}{b{hAn}}}{{A`{fCn}}}}{{{b{Jj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Jf}}}}{{{b{Df}}}{{A`{Jlc}}}{}}{{{b{Df}}}{{A`{Jh}}}}{{{b{Df}}}{{A`{Jj}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Jn{Df}}}{{K`{Db}}}{{Kd{}{{Kb{{E`{ce}}}}}}}}{{{b{Jf}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Jh}}{b{hc}}}fBb}{{{b{Jj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Jf}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Jh}}c}A`Bn}{{{b{Jj}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jfc}}}}}}}}{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jhc}}}}}}}}{{Dh{Bl{H`}}}Dh}{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jjc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000`{{{Kf{c}}{Bl{{Dn{Kh}}}}}{{Kf{c}}}Kj}{{{Kf{{I`{Kj}}}}{Bl{Kl}}}{{Aj{Kn}}}}{{{b{h{Kf{c}}}}}{{Aj{L`}}}Kj}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Lb}}}Lb}{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{b{b{hc}}}f{}}0000{bf}0000``{{Lj{b{D`}}}{{Aj{Ll}}}}{{{b{Ln}}Gl{Bl{Gl}}{Bl{{b{Lh}}}}GlAd}{{Aj{n}}}}{{{b{{Ff{Gl}}}}Gl{Bl{Gl}}{Bl{{b{Lh}}}}GlAd}{{Aj{n}}}}`{{}Lb}{{}Ld}{{}Lf}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Lb}}}Ab}{c{{A`{Ld}}}Ab}{c{{A`{Lf}}}Ab}{c{{A`{Lh}}}Ab}{c{{A`{Lj}}}Ab}{nf}0000000```{{{b{Lb}}{b{Lb}}}Ad}{{{b{Ld}}{b{Ld}}}Ad}{{{b{Lf}}{b{Lf}}}Ad}{{{b{Lh}}{b{Lh}}}Ad}{{{b{Lj}}{b{Lj}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Kf{c}}}{{Aj{Ah}}}Kj}{{{b{Lb}}{b{hAn}}}B`}{{{b{Ld}}{b{hAn}}}B`}{{{b{Lf}}{b{hAn}}}B`}{{{b{Lh}}{b{hAn}}}B`}{{{b{Lj}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Lh}1{{{b{Lb}}}{{Dn{Ld}}}}`{{{b{Lb}}{b{hc}}}fBb}{{{b{Ld}}{b{hc}}}fBb}{{{b{Lf}}{b{hc}}}fBb}{{{b{Lh}}{b{hc}}}fBb}{{{b{Lj}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Lbc}{{Kf{c}}}Kj}`{{Lbc}Lb{{Id{Ld}{{Gh{Ld}}}}}}```{c{{Kf{c}}}Kj};{M`Lh}{GlLh}{{{b{hL`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hKn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}````````````{{{b{Lb}}c}A`Bn}{{{b{Ld}}c}A`Bn}{{{b{Lf}}c}A`Bn}{{{b{Lh}}c}A`Bn}{{{b{Lj}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Lb{Bl{Mb}}}{{Aj{{Kf{Md}}}}}}`{bC`}0000000{{{b{hLb}}{b{Mf}}}f}{{}c{}}0000000{{Lbn}Lb}{{Lb{Bl{{Dn{{Ff{M`}}}}}}}Lb}{{Ld{Bl{c}}}Ld{{K`{Lh}}}}{{LdAd}Ld}{{Lb{Bl{{Dn{{Dd{Mh}}}}}}}Lb}{{LdLf}Ld}{{LdGl}Ld}{{LbAd}Lb}0{{Lb{Bl{n}}}Lb}1500{{Ld{Bl{Lj}}}Ld}{{LbLd}Lb}{{Lb{Bl{c}}}Lb{{K`{Mb}}}}{{Lb{Bl{{Dn{{Dd{n}}}}}}}Lb}{{Ld{Bl{Gl}}}Ld}66{{Lb{Bl{j}}}Lb}{{Lb{Bl{Kl}}}Lb}09??<<`````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{hAh}}{b{{Ff{Mj}}}}AdAd}{{Aj{f}}}}{{{b{Ll}}}Ll}{{b{b{hc}}}f{}}{bf}{{{b{Ml}}{b{{Ff{Gl}}}}}{{E`{nn}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Ml}}{b{{Ff{Gl}}}}{b{hn}}}{{E`{nn}}}}{{{b{{Ff{Gl}}}}{Bl{Gl}}Glnnn{Bl{{b{Lh}}}}Ad}{{Aj{n}}}}{{{b{Ll}}{b{hAn}}}B`}{cc{}}0{{}n}0{{}c{}}0{{{Bl{Gl}}Gl}Ml}{{{b{hKl}}{b{h{Dd{Mj}}}}}{{Aj{Ad}}}}{{{b{{Ff{Gl}}}}Gl{b{D`}}Ad{b{{Ff{n}}}}n{Bl{Gl}}Gl{Bl{{b{Lh}}}}nLf{Bl{{b{Ll}}}}AdAdnn{Bl{n}}Ad}{{Aj{Ah}}}}{bc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0`77`````````````````````{{{b{hMn}}{b{{Ff{Gl}}}}AdAdAd}{{Aj{f}}}}{{{b{hMn}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Mn}}}Mh}{cc{}}000{{}n}000{{{b{{Ff{n}}}}n{b{D`}}{Bl{Gl}}LfAd}{{Aj{{Dd{Mn}}}}}}{{}c{}}000{Mn{{Aj{N`}}}}????>>>>===={{{b{{Ff{Gl}}}}}Ad}2222````{{bd}f}<;{{{b{Mf}}}Mf}{{b{b{hc}}}f{}}{bf}{{}Mf}>=<{{{b{{Nb{Mh}}}}}Mh}{{{b{Mf}}{b{hAn}}}B`}<{{{b{Mf}}}n}{{{b{Mf}}}Kl}{{{b{Df}}AdAd}Mh}{{{b{Nd}}Gl{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Lh}}}}{Bl{Gl}}Gl{Bl{{b{Lj}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}?={bc{}}{c{{A`{e}}}{}{}}{{{b{Nd}}{b{Lb}}}{{Aj{Mf}}}}{{}{{A`{c}}}{}}{bC`}{{}c{}}{{MfKl}Mf}`````````{{bd}f}00`{{{Nf{c}}{b{D`}}}{{Aj{{Nh{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nj}}}Nj}{{{b{Nl}}}Nl}{{{b{Nn}}}Nn}{{b{b{hc}}}f{}}00{bf}00``{{}Nj}{{}Nl}{{}Nn}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nj}}}Ab}{c{{A`{Nl}}}Ab}{c{{A`{Nn}}}Ab}{nf}0000{{{b{Nj}}{b{Nj}}}Ad}{{{b{Nl}}{b{Nl}}}Ad}{{{b{Nn}}{b{Nn}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Nh{c}}}}}{{Aj{f}}}Bf}``{{{b{Nj}}{b{hAn}}}B`}{{{b{Nl}}{b{hAn}}}B`}{{{b{Nn}}{b{hAn}}}B`}{cc{}}0000{{{b{Nj}}{b{hc}}}fBb}{{{b{Nl}}{b{hc}}}fBb}{{{b{Nn}}{b{hc}}}fBb}{{{Nf{c}}Ad}{{Nf{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Nf{c}}n}{{Nf{c}}}Bf}{c{{Nf{c}}}Bf}````{{{b{Nj}}c}A`Bn}{{{b{Nl}}c}A`Bn}{{{b{Nn}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Nf{c}}O`}{{Nf{c}}}Bf}{{{Nf{c}}{Bl{Db}}}{{Nf{c}}}Bf}0{{{Nf{c}}{Bl{n}}}{{Nf{c}}}Bf}{{{Nf{c}}{Bl{Ad}}}{{Nf{c}}}Bf}{{{Nf{c}}Db}{{Nf{c}}}Bf}0{{{Nf{c}}Gl}{{Nf{c}}}Bf}{{{Nf{c}}Nn}{{Nf{c}}}Bf}15{{{b{h{Nh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Ob}{{}n}{{{b{{Ff{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Od}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{Od}}}{{Aj{Md}}}}0{bC`}{{{b{Od}}Ob}f}{{{b{Od}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{Of{c}}}}}{{Aj{Cf}}}Bd}{{{Oh{c}}{b{D`}}}{{Aj{{Oj{c}}}}}Bf}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Ol}}}Ol}{{{b{On}}}On}{{{b{A@`}}}A@`}{{{b{A@b}}}A@b}{{b{b{hc}}}f{}}000{bf}000`{{{b{A@d}}{Bl{{b{A@f}}}}}{{Aj{A@h}}}}{{{b{A@d}}{Bl{{b{A@f}}}}OnAd}{{Aj{Ah}}}}{{}A@j}{{}On}{{}A@`}{{}A@b}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Ol}}}Ab}{c{{A`{A@`}}}Ab}{c{{A`{A@b}}}Ab}{nf}0000000000{{{b{Ol}}{b{Ol}}}Ad}{{{b{A@`}}{b{A@`}}}Ad}{{{b{A@b}}{b{A@b}}}Ad}{{b{b{c}}}Ad{}}00000{{{A@l{c}}}{{Aj{Ah}}}Kj}{{{Of{c}}}{{Aj{Ah}}}Bd}{{{b{h{A@n{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Oh{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Oj{c}}}}}{{Aj{f}}}Bf}{{{A@l{c}}{Bl{{Dn{Kh}}}}Ad}{{Aj{Ah}}}Kj}{{{b{Ol}}{b{hAn}}}B`}{{{b{A@`}}{b{hAn}}}B`}{{{b{A@b}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{A@d}}}}{{{b{Ol}}{b{hc}}}fBb}{{{b{A@`}}{b{hc}}}fBb}{{{b{A@b}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{A@l{c}}{Bl{Mb}}}{{A@l{c}}}Kj}{{{b{A@d}}}{{Aj{A@f}}}}{c{{A@l{c}}}Kj}{c{{Of{c}}}Bd}{c{{A@n{c}}}Bf}{{}A@j}{c{{Oh{c}}}Bf}{{{b{h{A@l{c}}}}}{{Aj{AA`}}}Kj}{{{b{h{Of{c}}}}}{{Aj{D`}}}Bd}{{{b{Ol}}c}A`Bn}{{{b{A@`}}c}A`Bn}{{{b{A@b}}c}A`Bn}{{{A@l{c}}Ad}{{A@l{c}}}Kj}{{{Of{c}}Ad}{{Of{c}}}Bd}{bc{}}000{{{b{A@`}}c}{{Oh{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{A@l{c}}{Bl{{Dd{Db}}}}}{{A@l{c}}}Kj}{{{Of{c}}{Bl{{Dd{Db}}}}}{{Of{c}}}Bd}{{{A@n{c}}AAb}{{A@n{c}}}{}}{{{Oh{c}}AAb}{{Oh{c}}}Bf}{{{A@n{c}}{Bl{A@b}}}{{A@n{c}}}{}}{{A@j{Bl{A@b}}}A@j}{{{Oh{c}}{Bl{A@b}}}{{Oh{c}}}Bf}{{A@jMb}A@j}{{{A@l{c}}{Bl{{Dd{N`}}}}}{{A@l{c}}}Kj}{{{A@l{c}}{Bl{{E`{M`{Dn{Df}}}}}}}{{A@l{c}}}Kj}{{{A@l{c}}{Bl{n}}}{{A@l{c}}}Kj}{{{Of{c}}{Bl{n}}}{{Of{c}}}Bd}{{{Oh{c}}Ad}{{Oh{c}}}Bf}{{Onc}On{{K`{{Bl{{Dn{Kh}}}}}}}}{{{A@l{c}}{Bl{{Dd{n}}}}}{{A@l{c}}}Kj}{{{Of{c}}{Bl{{Dd{n}}}}}{{Of{c}}}Bd}{{On{Bl{{Dn{{Ff{M`}}}}}}}On}{{{A@l{c}}{Bl{j}}}{{A@l{c}}}Kj}{{{Of{c}}{Bl{j}}}{{Of{c}}}Bd}{{Onc}On{{K`{{Bl{j}}}}}}{{Onc}On{{K`{{Bl{n}}}}}}{{{b{h{Oj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{A@`}}Ahc}{{Aj{f}}}Bf}{{{b{h{Oj{c}}}}{b{{Ff{AAd}}}}{b{AAd}}}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{AAf}}}AAf}{{b{b{hc}}}f{}}{bf}{{}AAf}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{AAf}}}Ab}{nf}0000{{{b{AAf}}{b{AAf}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{AAh{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{AAj{c}}}{{Aj{Ah}}}Kj}{{{b{AAf}}{b{hAn}}}B`}{cc{}}0000{{{b{AAf}}{b{hc}}}fBb}{{{AAj{c}}{Bl{O`}}}{{AAj{c}}}Kj}{{}n}0000{{}c{}}0000`{c{{AAh{c}}}Bf}{c{{AAl{c}}}Bf}{c{{AAj{c}}}Kj}{{{b{{Ff{Gl}}}}}{{Aj{{b{{Ff{Gl}}}}}}}}{{{b{AAf}}c}A`Bn}{{{AAj{c}}Ad}{{AAj{c}}}Kj}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{AAj{c}}O`}{{AAj{c}}}Kj}5{{{AAh{c}}AAn}{{AAh{c}}}Bf}{{{AAj{c}}AAn}{{AAj{c}}}Kj}{{{AAj{c}}{Bl{{Dd{M`}}}}}{{AAj{c}}}Kj}{{{AAj{c}}Kl}{{AAj{c}}}Kj}{{{AAj{c}}{b{D`}}}{{AAj{c}}}Kj}{{{b{h{AAl{c}}}}{b{Ah}}}{{Aj{f}}}Bf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{{{b{Nd}}}{{b{{Ff{Gl}}}}}}{n{{b{hc}}}{}}{nf}{cc{}}{{{b{hc}}}NdKj}{{}n}{{}c{}}{{{b{Kj}}}{{Bl{{b{{Ff{Gl}}}}}}}}{{{b{Kj}}}{{Bl{{b{Md}}}}}}{{{b{Nd}}}AB`}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{O`}}}{{Aj{D`}}}ABb}``{{bd}f}{{{b{ABd}}n}{{E`{ABdABd}}}}{ABd{{Dn{ABf}}}}{cABd{{Kd{}{{Kb{{Bl{f}}}}}}}}{cABd{{Kd{}{{Kb{f}}}}}}{{ABhc}ABd{{Kd{}{{Kb{f}}}}}}{{ABhc}ABd{{Kd{}{{Kb{{Bl{f}}}}}}}}{{{b{ABd}}}{{b{ABj}}}}{{{b{hABd}}}{{b{hABj}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{ABd{{I`{ABf}}}}{{{b{ABd}}n}Ad}{{{b{ABd}}}ABd}{{b{b{hc}}}f{}}{bf}{{{ABl{c}}}{{Aj{n}}}Kj}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{ABd}}}{{b{ABh}}}}{{{b{ABd}}{b{ABd}}}Ad}{{{b{ABd}}{b{{b{ABf}}}}}Ad}{{{b{ABd}}}{{b{{Ff{ABn}}}}}}{{{ABl{c}}}{{Aj{Ah}}}Kj}{{{b{ABd}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0{AC`ABd}{c{{Aj{{ABl{Md}}}}}{{K`{Mb}}}}{{nABh}ABd}{{{b{ABh}}}{{b{{Ff{ABn}}}}}}{{{ABl{c}}{Bl{O`}}}{{ABl{c}}}Kj}{{}n}0{{}c{}}0{ABd{{E`{{Dd{ABn}}n{Dd{{I`{ABf}}}}{Bl{ACb}}}}}}{{{b{ABd}}}}{{{b{ABd}}}{{ACj{{Dd{{I`{ACd}}}}ACfACh}}}}{{{b{ABd}}}n}{{{ABl{c}}Ad}{{ABl{c}}}Kj}{c{{ABl{c}}}Kj}{{ABhn{Dd{{I`{ABf}}}}{Bl{ACb}}}ABd}{ABhABd}{{ABhn}ABd}{{{b{ABd}}}ABd}{{{b{hABd}}{Bl{ACb}}}f}{{{b{hABd}}nn}f}0{{bnn}c{}}011{{ABdnn}ABd}0{{{b{ABd}}n}{{E`{{I`{ABf}}{I`{ABf}}}}}}0{{{b{hABd}}}{{Bl{ACb}}}}{{{b{ABd}}}{{I`{ABf}}}}{bc{}}{{{b{ABd}}{b{ABd}}}ACb}{{{b{ABd}}b}ACb}10{e{{A`{ABdc}}}{}{{Kd{}{{Kb{{A`{fc}}}}}}}}{e{{A`{ABdc}}}{}{{Kd{}{{Kb{{A`{{Bl{f}}c}}}}}}}}{{ABhe}{{A`{ABdc}}}{}{{Kd{}{{Kb{{A`{{Bl{f}}c}}}}}}}}{{ABhe}{{A`{ABdc}}}{}{{Kd{}{{Kb{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{ABhn{Dd{{I`{ABf}}}}{Bl{ACb}}}{{A`{ABdACl}}}}{bC`}0{{{b{ABd}}}{{Bl{{b{ACb}}}}}}0{{{b{ABd}}}{{b{{Ff{{I`{ABf}}}}}}}}{{{b{ABd}}}ACf}{{}c{}}0{{{ABl{c}}{Bl{O`}}}{{ABl{c}}}Kj}{{{ABl{c}}Ad}{{ABl{c}}}Kj}{{{ABl{c}}{Bl{n}}}{{ABl{c}}}Kj}0{{{ABl{c}}{Bl{e}}}{{ABl{c}}}Kj{{K`{Mb}}}}{{{ABl{c}}{Bl{{Dn{Kh}}}}}{{ABl{c}}}Kj}{{{ABl{c}}{Bl{{Dn{{Ff{M`}}}}}}}{{ABl{c}}}Kj}4{{{ABl{c}}{Bl{{b{hj}}}}}{{ABl{c}}}Kj}{{{ABl{c}}Kl}{{ABl{c}}}Kj}{{{ABl{c}}{b{D`}}}{{ABl{c}}}Kj}{{ABd{Bl{ACb}}}ABd}{{{b{ABd}}{Bl{ACb}}}{{I`{ABf}}}}1``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{ACn}}}ACn}{{b{b{hc}}}f{}}{bf}{{{b{ACn}}n}AD`}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{ABn}}c}{{A`{ADbACl}}}{{ADf{}{{Kb{{b{ADd}}}}}}}}`{nf}0{{{b{ADb}}{b{ADb}}}Ad}{{{b{ADb}}{b{hAn}}}{{A`{fCn}}}}{{{b{ACn}}{b{hAn}}}{{A`{fCn}}}}{ADhADb}{cc{}}0{{}n}0{{}c{}}0{{{b{ACn}}}{{b{{Bl{{Dd{ADj}}}}}}}}```````{{{b{ACn}}}{{b{ADl}}}}`{bc{}}{c{{A`{e}}}{}{}}0{ADn{{A`{ACnAE`}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{AEb{c}}n}{{Aj{AEd}}}Kj}{{AEfn}{{Aj{AEd}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{AEh}}}AEh}{{{b{AEj}}}AEj}{{b{b{hc}}}f{}}0{bf}0{{{b{AEl}}}{{Fh{nAEn}}}}{{}AEj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{AEh}}}Ab}{c{{A`{AEj}}}Ab}{nf}0000{{{b{AEh}}{b{AEh}}}Ad}{{{b{AEj}}{b{AEj}}}Ad}{{b{b{c}}}Ad{}}00000{{{AEb{c}}}{{Aj{Ah}}}Kj}{AEf{{Aj{Ah}}}}{{{b{AEd}}n}Ad}{{{b{AEh}}{b{hAn}}}B`}{{{b{AEj}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{AF`}}}{{Aj{AEf}}}}{{{b{h{AEb{c}}}}}{{Aj{{b{AF`}}}}}Kj}{{{b{hAEf}}}{{Aj{{b{AF`}}}}}}{{{b{AEh}}{b{hc}}}fBb}{{{b{AEj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{AEd}}}Ad}``{{{Bl{{b{{Ff{n}}}}}}{b{Cf}}{Bl{{b{{Ff{N`}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AEb{c}}}Kj}{{{b{hAEd}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AEb{c}}}}}{{Aj{n}}}Kj}{{{b{hAEf}}}{{Aj{n}}}}`{{{AEb{c}}AEj}{{AEb{c}}}Kj}{{AEfAEj}AEf}{{{b{AEd}}}{{b{AA`}}}}{{{b{h{AEb{c}}}}}{{Aj{AA`}}}Kj}{{{b{hAEf}}}{{Aj{AA`}}}}`{{{b{AEh}}c}A`Bn}{{{b{AEj}}c}A`Bn}{{{AEb{c}}Ad}{{AEb{c}}}Kj}{{{b{h{AEb{c}}}}AF`}fKj}1{{AEfAd}AEf}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{{{b{hN`}}n{b{{Fh{nAEn}}}}}f}{bC`}000075`{{}c{}}0000{{{AEb{c}}{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{{AEb{c}}}}}Kj}{{AEf{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{AEf}}}}{{{AEb{c}}{Bl{{Dd{Db}}}}}{{AEb{c}}}Kj}{{{AEb{c}}{Bl{{Dd{N`}}}}}{{AEb{c}}}Kj}{{AEf{Bl{{Dd{N`}}}}}AEf}{{{AEb{c}}{Bl{{E`{M`{Dn{Df}}}}}}}{{AEb{c}}}Kj}{{AEf{Bl{{E`{M`{Dn{Df}}}}}}}AEf}{{{AEb{c}}{Bl{{Dn{Kh}}}}}{{AEb{c}}}Kj}{{AEf{Bl{{Dn{Kh}}}}}AEf}{{{AEb{c}}{Bl{{Dd{n}}}}}{{AEb{c}}}Kj}{{AEf{Bl{{Dd{n}}}}}AEf}{{{AEb{c}}{Bl{j}}}{{AEb{c}}}Kj}{{AEf{Bl{j}}}AEf}{{{AEb{c}}{Bl{{E`{nn}}}}}{{AEb{c}}}Kj}{{AEf{Bl{{E`{nn}}}}}AEf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{ACb}}}AFb}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{Cf}}{b{Cf}}}{{Aj{f}}}}{cc{}}{{}n}{{}AFd}{{}c{}}{{{Bl{{b{Kh}}}}{b{AEl}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AFd}}AFb{b{ABh}}}Ad}{{{Dd{{E`{{b{ADd}}AB`}}}}ABn{Bl{AFf}}}{{Aj{{I`{ABf}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{AFh{c}}{b{D`}}}{{Aj{{AFj{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{AFl}}}AFl}{{{b{AFn}}}AFn}{{{b{AG`}}}AG`}{{{b{AGb}}}AGb}{{{b{AGd}}}AGd}{{{b{AGf}}}AGf}{{b{b{hc}}}f{}}00000{bf}00000``{{}AFl}{{}AFn}{{}AG`}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{AFl}}}Ab}{c{{A`{AFn}}}Ab}{c{{A`{AG`}}}Ab}{c{{A`{AGb}}}Ab}{c{{A`{AGd}}}Ab}{c{{A`{AGf}}}Ab}`{nf}0000000;{{{b{{AFj{c}}}}{b{Ah}}}{{`{{AGj{}{{Kb{{Aj{{AGh{ACl}}}}}}}}}}}Bf}{{{b{AFl}}{b{AFl}}}Ad}{{{b{AFn}}{b{AFn}}}Ad}{{{b{AG`}}{b{AG`}}}Ad}{{{b{AGb}}{b{AGb}}}Ad}{{{b{AGd}}{b{AGd}}}Ad}{{{b{AGf}}{b{AGf}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{AFj{c}}}}}{{Aj{Ob}}}Bf}{{{AFh{c}}{b{hAh}}}{{Aj{Ob}}}Bf}{{{b{AFl}}{b{hAn}}}{{A`{fCn}}}}{{{b{AFn}}{b{hAn}}}B`}{{{b{AG`}}{b{hAn}}}B`}{{{b{AGb}}{b{hAn}}}B`}{{{b{AGd}}{b{hAn}}}B`}{{{b{AGf}}{b{hAn}}}B`}{cc{}}0000000{{}AFl}{{{b{{AFj{c}}}}}{{b{{AGn{{AGl{c}}}}}}}Bf}{{{b{AFl}}{b{hc}}}fBb}{{{b{AFn}}{b{hc}}}fBb}{{{b{AG`}}{b{hc}}}fBb}{{{b{AGb}}{b{hc}}}fBb}{{{b{AGd}}{b{hc}}}fBb}{{{b{AGf}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{AFl}}}Ad}0```{c{{AFh{c}}}{BfBf}}``{{{b{AFl}}c}A`Bn}{{{b{AFn}}c}A`Bn}{{{b{AG`}}c}A`Bn}{{{b{AGb}}c}A`Bn}{{{b{AGd}}c}A`Bn}{{{b{AGf}}c}A`Bn}{{{AFh{c}}Ad}{{AFh{c}}}Bf}`{bc{}}00000{{{b{AFn}}c}{{AFh{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{Gl{{Aj{AGb}}}}{AH`{{Aj{AGd}}}}{AHb{{Aj{AGf}}}}{bC`}0000000{{}c{}}0000000{{{AFh{c}}AG`}{{AFh{c}}}Bf}{{{AFh{c}}{Bl{n}}}{{AFh{c}}}Bf}0{{{AFh{c}}AFl}{{AFh{c}}}Bf}{{{b{h{AFj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{AFn}}Ahc}{{Aj{f}}}Bf}{{{b{{AFj{c}}}}{Dd{{AGh{ACl}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{Ln}}e{b{g}}n}{{Aj{f}}}{{K`{M`}}}{{Kd{}{{Kb{c}}}}}{CbIfIh}}`{{{b{{Ff{Mb}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Ff{Mb}}}}}}}}{{{b{{Ff{Mb}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Ff{Mb}}}}n}}}}}}{{{b{{Ff{c}}}}{b{{Ff{c}}}}}Ad{{Jn{Ln}}}}{{{b{{Ff{Gl}}}}}{{Bl{n}}}}{cAd{{Jn{Ln}}}}{{{b{Ln}}}Mb}``{{{b{AHd}}c}{}Hn}{{{b{AHd}}c}{}{HnIf}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AHd}}}}{{}n}{{}c{}}{{{b{AHf}}}Ob}{{{b{AHd}}c}AHh{HnIf}}{{{b{AHd}}e}{{AHh{c}}}If{{Gj{}{{Gh{c}}}}If}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{AH`e}{}Hn{{Gj{}{{Gh{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Kh}}}}Ad}{{Aj{f}}}}{{{b{Kh}}}{{Bl{{b{AHj}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AHl}}}AHl}{{{b{AHn}}}AHn}{{b{b{hc}}}f{}}0{bf}0{{{b{AHn}}}{{b{{Ff{AHl}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AHl}}}Ab}{c{{A`{AHn}}}Ab}{nf}0{{{b{AHl}}}{{b{Mh}}}}{{{b{Kh}}{b{Ah}}}{{Aj{N`}}}}{{{b{AHl}}}{{b{M`}}}}{{{b{AHl}}{b{hAn}}}B`}{{{b{AHn}}{b{hAn}}}B`}{cc{}}0{N`AHl}{MjAHl}{{{b{AHl}}}{{Bl{{b{N`}}}}}}00{{{b{AHn}}{b{Df}}}{{Aj{{b{AHl}}}}}}{{}n}0{{}c{}}0{{{b{Kh}}}{{Bl{{Dd{M`}}}}}}{{Mj{Bl{N`}}{Bl{N`}}{Bl{N`}}}AHl}{{Kl{Dd{AHl}}{Bl{n}}}AHn}{{{b{AHl}}}{{Bl{n}}}}{{{b{AHn}}}{{Bl{n}}}}{{{b{AHn}}}{{b{Kl}}}}{{{b{AHl}}c}A`Bn}{{{b{AHn}}c}A`Bn}{{{b{AHj}}{b{AHn}}}{{Aj{Ad}}}}{{{b{hAHn}}{b{{Ff{n}}}}}f}=={{{b{AHl}}}{{Bl{N`}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAHn}}Kl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00``````{{{b{Cf}}{b{{Ff{n}}}}}Cf}`{{{b{{Ff{c}}}}{b{Cf}}}{{Aj{{Dd{n}}}}}{{Jn{Df}}}}`{{{b{hc}}}{{Aj{Nd}}}{BdKjAI`}}{{{Bl{{b{{Ff{M`}}}}}}{b{D`}}{Bl{{b{{Ff{N`}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AIb}}}AIb}{{b{b{hc}}}f{}}{bf}{{}AId}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AIb}}{b{hAn}}}B`}{cc{}}0{AB`AId}{AIfAId}{AIhAId}33{{{b{AIj}}{Fb{n}}}{{Aj{AB`}}}}{{{b{AIf}}{Fb{n}}}{{Aj{AB`}}}}{{{b{AIh}}{Fb{n}}}{{Aj{AB`}}}}{{{b{AId}}{Fb{n}}}{{Aj{AB`}}}}{{{b{AIj}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nAB`}}}}}}{{{b{AIf}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nAB`}}}}}}{{{b{AIh}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nAB`}}}}}}{{{b{AId}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nAB`}}}}}}{{{b{AIj}}}{{Aj{n}}}}{{{b{AIf}}}{{Aj{n}}}}{{{b{AIh}}}{{Aj{n}}}}{{{b{AId}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AIb}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AId}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AId}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Ff{Gl}}}}}{{Bl{AIl}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Ff{Gl}}}}{b{h{Dd{Gl}}}}}{{Aj{{b{{Ff{Gl}}}}}}}};:9>````76432{{{b{AIn}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Fb{n}}}AIn}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"DDh","p":[[1,"reference"],[5,"Private",2288],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2289],[5,"HiveOptions",0,2289],[1,"usize"],[6,"Result",2290],[10,"Deserializer",2291],[1,"bool"],[10,"SerReader",2146,2292],[5,"DataFrame",2293],[8,"PolarsResult",2294],[10,"SerWriter",2146,2292],[5,"Formatter",2295],[8,"Result",2295],[10,"Hasher",2296],[10,"Read",2297],[10,"Write",2297],[10,"ArrowReader",0,2292],[8,"RecordBatch",2298],[6,"Option",2299],[10,"Serializer",2300],[5,"TypeId",2301],[10,"WriteDataFrameToFile",0,2292],[5,"AvroReader",86,2302],[8,"ArrowSchema",2303],[10,"Seek",2297],[6,"AvroCompression",86],[5,"AvroWriter",86,2304],[5,"Error",2295],[8,"Schema",2305],[5,"String",2306],[5,"Vec",2307],[1,"str"],[5,"CloudOptions",372],[5,"CloudLocation",153,2308],[10,"ObjectStore",2309],[5,"Arc",2310],[1,"tuple"],[5,"PolarsObjectStore",153,2311],[5,"Path",2312],[5,"File",2313],[5,"CloudWriter",153,2314],[5,"Error",2315],[10,"Command",2316],[8,"Result",2315],[5,"Url",2317],[5,"Range",2318],[5,"Bytes",2319],[1,"slice"],[8,"PlHashMap",2320],[17,"Error"],[10,"Debug",2295],[10,"TryFrom",2321],[10,"Hash",2296],[10,"Eq",2322],[10,"From",2321],[5,"ObjectMeta",2309],[17,"Output"],[10,"FnOnce",2323],[1,"u8"],[10,"VarInt",2324],[6,"PlCredentialProvider",227],[5,"CredentialProviderFunction",227],[5,"AwsCredential",227,2325],[6,"AzureCredential",227,2326],[5,"GcpCredential",227,2327],[5,"InstanceCredentials",2325],[5,"SessionCredentials",2325],[10,"Future",2328],[5,"Box",2329],[5,"Pin",2330],[10,"Fn",2323],[10,"Send",2331],[10,"Sync",2331],[5,"PythonFunction",2332],[8,"PyObject",2333],[10,"IntoCredentialProvider",227],[8,"AwsCredentialProvider",2334],[8,"AzureCredentialProvider",2335],[8,"GcpCredentialProvider",2336],[6,"AmazonS3ConfigKey",372,2337],[6,"AzureConfigKey",372,2338],[6,"GoogleConfigKey",372,2339],[6,"CloudType",372],[10,"AsRef",2321],[10,"Into",2321],[17,"Item"],[10,"IntoIterator",2340],[5,"CsvReader",562,2341],[10,"PhysicalIoExpr",2078],[10,"MmapBytesReader",1474],[8,"SchemaRef",2305],[5,"OwnedBatchedCsvReader",562,2342],[5,"BatchedCsvReader",562,2342],[5,"CsvReadOptions",562,2343],[5,"CsvParseOptions",562,2343],[6,"CsvEncoding",562,2343],[6,"CommentPrefix",562,2343],[6,"NullValues",562,2343],[6,"NullValuesCompiled",823,2343],[5,"Path",2344],[5,"PlSmallStr",2345],[5,"PathBuf",2344],[5,"File",2346],[5,"SchemaInferenceResult",944],[6,"DataType",2347],[5,"Field",2348],[5,"CountLines",823,2349],[6,"Buffer",866],[5,"Series",2350],[8,"PlHashSet",2320],[6,"ReaderBytes",1474],[5,"CsvWriter",971,2351],[5,"BatchedWriter",971,2351],[5,"CsvWriterOptions",971,2352],[5,"SerializeOptions",971,2352],[6,"QuoteStyle",971,2352],[8,"NonZeroUsize",2353],[1,"u64"],[5,"FileCacheEntry",1116,2354],[5,"IpcStreamReader",1137,2355],[5,"IpcWriter",1137,2356],[5,"BatchedWriter",1137,2356],[5,"IpcScanOptions",1137,2357],[5,"IpcReadOptions",1137,2358],[5,"IpcWriterOptions",1137,2356],[6,"IpcCompression",1137,2356],[5,"IpcReaderAsync",1137,2358],[5,"FileMetadata",2359],[1,"i64"],[5,"IpcStreamWriterOption",1137,2355],[5,"IpcReader",1137,2357],[5,"IpcStreamWriter",1137,2355],[8,"ArrowSchemaRef",2303],[5,"CompatLevel",2347],[5,"EncodedData",2360],[5,"JsonWriterOptions",1376],[5,"JsonWriter",1376],[5,"JsonReader",1376],[5,"BatchedWriter",1376],[6,"JsonFormat",1376],[5,"MemSlice",2361],[10,"BufRead",2297],[5,"StructArray",1497,2362],[10,"Array",2363],[6,"ArrowDataType",2364],[10,"Any",2301],[5,"JsonLineReader",1497],[5,"Field",2365],[5,"GrowableStruct",2366],[5,"Bitmap",2367],[10,"Scalar",2368],[5,"StructValueIter",2369],[5,"BitmapIter",2370],[6,"ZipValidity",2371],[6,"PolarsError",2294],[5,"FileMetadata",1603,2372],[6,"ColumnOrder",2373],[5,"ParquetStatistics",1603],[5,"ColumnChunkMetadata",2374],[10,"ExactSizeIterator",2375],[5,"MutableStatistics",2376],[5,"KeyValue",2377],[5,"SchemaDescriptor",2378],[5,"FileMetaData",2377],[6,"ParquetError",2379],[5,"ParquetReader",1656,2380],[5,"BatchedParquetReader",1656,2381],[5,"ParquetAsyncReader",1656,2380],[5,"ParquetOptions",1656,2382],[6,"ParallelStrategy",1656,2382],[5,"RowGroupMetadata",2383],[6,"IsSorted",2384],[8,"FileMetadataRef",1603],[1,"f64"],[6,"PrefilterMaskSetting",1802,2381],[6,"Filter",2385],[5,"ParquetWriter",1824,2386],[5,"BatchedWriter",1824,2387],[5,"StatisticsOptions",1824,2388],[5,"ParquetWriteOptions",1824,2389],[6,"ParquetCompression",1824,2389],[5,"GzipLevel",1824,2389],[5,"BrotliLevel",1824,2389],[5,"ZstdLevel",1824,2389],[8,"RowGroupIterColumns",1824,2390],[10,"Iterator",2391],[5,"FileWriter",2392],[5,"Mutex",2393],[1,"u32"],[1,"i32"],[5,"RuntimeManager",2056],[10,"GetSize",2056],[5,"JoinHandle",2394],[10,"StatsEvaluator",2078],[5,"ColumnStats",2078],[5,"BatchStats",2078],[10,"Sized",2331],[6,"DynByteSourceBuilder",2170],[6,"DynByteSource",2170],[5,"MemSliceByteSource",2170],[5,"ObjectStoreByteSource",2170],[10,"ByteSource",2170],[6,"SupportedCompression",2251],[6,"SplitSlicePosition",2269],[6,"ObjectStoreCredential",227],[5,"Utf8Field",866],[5,"CategoricalField",866],[5,"DatetimeField",866],[15,"Datetime",941]],"r":[[0,2292],[1,2289],[2,2289],[3,2292],[4,2292],[5,2292],[87,2302],[88,2304],[89,2395],[153,2308],[154,2314],[155,2311],[156,2311],[165,2396],[194,2308],[206,2396],[229,2325],[231,2326],[236,2327],[375,2337],[380,2338],[404,2339],[564,2342],[565,2343],[566,2343],[567,2343],[568,2343],[569,2341],[573,2343],[574,2342],[622,2349],[623,2349],[704,944],[826,2349],[827,2343],[833,2397],[845,2397],[854,2341],[855,2397],[863,866],[972,2351],[973,2351],[974,2352],[978,2352],[979,2352],[1116,2398],[1117,2399],[1118,2354],[1125,2398],[1127,2399],[1137,2356],[1138,2356],[1139,2358],[1140,2357],[1141,2358],[1142,2357],[1143,2355],[1144,2355],[1145,2355],[1146,2356],[1147,2356],[1498,2362],[1603,2372],[1621,2376],[1657,2381],[1660,2382],[1661,2380],[1662,2382],[1663,2380],[1687,2381],[1742,2400],[1773,2381],[1805,2381],[1808,2381],[1812,2400],[1817,2401],[1819,2402],[1824,2387],[1826,2389],[1828,2389],[1831,2389],[1832,2389],[1833,2386],[1834,2390],[1836,2388],[1839,2389],[2146,2292],[2147,2292],[2148,0],[2156,2048],[2157,2403],[2158,2403],[2159,2403],[2160,2403],[2162,2403],[2164,2403],[2166,2403],[2167,2403],[2168,2403]],"b":[[309,"impl-From%3CInstanceCredentials%3E-for-AwsCredential"],[311,"impl-From%3CSessionCredentials%3E-for-AwsCredential"],[1502,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1503,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1504,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1505,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1525,"impl-PartialEq-for-StructArray"],[1526,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1552,"impl-StructArray"],[1553,"impl-Array-for-StructArray"],[1556,"impl-StructArray"],[1557,"impl-Array-for-StructArray"],[1569,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1570,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1571,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1572,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1580,"impl-StructArray"],[1581,"impl-Array-for-StructArray"],[1597,"impl-StructArray"],[1598,"impl-Array-for-StructArray"],[2207,"impl-From%3CMemSlice%3E-for-DynByteSource"],[2208,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[2209,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMwGzgAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnABAAugACAMAAAQDFAAIAzQAAANAAAADVAA4A5QAAAOcAAADsAAAA7gAAAPAAAgD0AAEA9wA9ADYBAAA4AQAAPgEJAE4BCABZAQIAXQEXAHsBAQCHAQAAkwEBAJYBAQCsARAAwAE2APwBAwABAggADwIcAC4CAAA1AgQAPgIBAEICLABxAjgAqwIEALcCAAC5AhEA1AIAANYCAgDdAioACQMIABMDBwArAwAAOAMAADsDFABSAwEAVgMAAFgDHQB3AxcAkwMEAJwDIQC/AwEAwwMAAMUDBgDNAwAA1QMXAO8DIQASBAAAFAQCABwEAgAgBAAAIgQFAC4EAgA1BAMAOgQWAF0EBwBmBAIAagQBAG4EBAB0BAAAdwQAAHoEAAB8BAAAfwQDAIQEIgCoBDYA4AQDAO8EDgALBQUAEwU1AEsFAQBRBQEAVQUBAFkFAABcBQEAXwUAAGEFAABnBSQAjQUAAJMFAACVBQQAoQUZAL0FAQDDBQAAxQUHAM4FAQDRBQEA1AUGANwFAQDfBQkA6gUNAPkFAQD9BQAA/wUAAAEGAgAHBgAACQYAABIGAgAWBgAAGQYBABwGDQArBgEALgYAADEGAQA1BggAPwYBAEUGAABHBgcAUgYDAFgGBQBgBgEAbgYCAHIGAwB3BgEAegYAAH0GAAB/BgAAgwY0AL0GCQDMBgAAzgYCANIGAADUBgEA1wYBANoGAwDfBhQA9gYFAP0GAAD/BgUABgcAAAgHAQALBwkAFwcBABoHCAAkBwAAJgcBACkHAAArBwEALgcBADEHKABcBzsAmgcFAKgHDwDABwEAwwcBAMYHAADIBwUA0AcpAP8HAQACCAAACQgCAA0IBAATCAEAFggAABgIBgAhCAQAJwgJADIIBwA8CAIARwgBAFEIAwBYCA0AZwgAAGkIAABtCA8AfggBAIEIAACDCBoAoAgCAKYIAgCqCAoAuQgTAM4IAwDTCAIA1wgAANoIDQDpCAAA7AgEAA=="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPPFPPPPPPPPKPPGGPGPPPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPFPPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPGPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPIGPPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPGGPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJJSFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNOONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Bitwise","","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","Bytes","","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Deserialized","","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","Intersect","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","LazySerde","LeadingOnes","LeadingZeros","Len","LenBytes","LenChars","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","OpaqueColumnUdf","Operator","Or","","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitwise_and","bitwise_count_ones","bitwise_count_zeros","bitwise_leading_ones","bitwise_leading_zeros","bitwise_or","bitwise_trailing_ones","bitwise_trailing_zeros","bitwise_xor","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_literal","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_map_to_array_inner_dtype","try_serialize","","","try_to_compact_string","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","And","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Bitwise","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LeadingOnes","LeadingZeros","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","Or","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Xor","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","CorrCov","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","corr_cov_options","is_corr","rolling_options","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","init","","","into","","","new","","serialize","to_owned","try_deserialize_bytes","try_from","","","try_into","","","try_serialize","","try_serialize_to_bytes","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","escape_regex","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_missing_columns","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","try_new_streaming_if_requested","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_collapse_joins","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_cross","is_full_days","is_ie","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_parse","try_parse_interval","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1728,"polars_lazy::dsl::AggExpr"],[1735,"polars_lazy::dsl::BooleanFunction"],[1738,"polars_lazy::dsl::Expr"],[1773,"polars_lazy::dsl::FunctionExpr"],[1818,"polars_lazy::dsl::StringFunction"],[1838,"polars_lazy::dsl::TemporalFunction"],[1840,"polars_lazy::dsl::binary"],[1861,"polars_lazy::dsl::cat"],[1862,"polars_lazy::dsl::dt"],[1918,"polars_lazy::dsl::function_expr"],[2149,"polars_lazy::dsl::function_expr::BooleanFunction"],[2152,"polars_lazy::dsl::function_expr::FunctionExpr"],[2197,"polars_lazy::dsl::function_expr::StringFunction"],[2217,"polars_lazy::dsl::function_expr::TemporalFunction"],[2219,"polars_lazy::dsl::function_expr::cat"],[2221,"polars_lazy::dsl::function_expr::pow"],[2225,"polars_lazy::dsl::function_expr::rolling"],[2260,"polars_lazy::dsl::function_expr::rolling::RollingFunction"],[2263,"polars_lazy::dsl::function_expr::rolling_by"],[2296,"polars_lazy::dsl::function_expr::trigonometry"],[2340,"polars_lazy::dsl::functions"],[2415,"polars_lazy::dsl::python_udf"],[2480,"polars_lazy::dsl::string"],[2542,"polars_lazy::dsl::udf"],[2548,"polars_lazy::frame"],[3037,"polars_lazy::frame::pivot"],[3039,"polars_lazy::prelude"],[3666,"polars_lazy::prelude::DslPlan"],[3718,"polars_lazy::prelude::LiteralValue"],[3721,"dyn_clone::sealed"],[3722,"polars_plan::dsl::meta"],[3723,"polars_plan::dsl::expr"],[3724,"polars_plan::dsl::struct_"],[3725,"polars_utils::pl_str"],[3726,"alloc::sync"],[3727,"polars_error"],[3728,"core::result"],[3729,"polars_plan::dsl::selector"],[3730,"core::convert"],[3731,"polars_plan::dsl::array"],[3732,"polars_plan::dsl::list"],[3733,"polars_plan::dsl::expr_dyn_fn"],[3734,"polars_core::frame::column"],[3735,"core::option"],[3736,"core::ops::function"],[3737,"core::marker"],[3738,"polars_plan::plans::visitor"],[3739,"polars_plan::dsl::function_expr"],[3740,"polars_core::datatypes::dtype"],[3741,"polars_core::chunked_array::ops::sort::options"],[3742,"polars_plan::dsl::function_expr::schema"],[3743,"polars_core::datatypes::field"],[3744,"core::any"],[3745,"alloc::vec"],[3746,"polars_plan::dsl::binary"],[3747,"core::clone"],[3748,"polars_plan::dsl::udf"],[3749,"polars_core::chunked_array::cast"],[3750,"polars_plan::dsl::cat"],[3751,"polars_plan::dsl::arity"],[3752,"polars_plan::dsl::function_expr::bitwise"],[3753,"polars_plan::dsl::function_expr::boolean"],[3754,"polars_plan::dsl::function_expr::cat"],[3755,"polars_plan::dsl::function_expr::datetime"],[3756,"polars_plan::dsl::function_expr::pow"],[3757,"polars_plan::dsl::function_expr::strings"],[3758,"polars_plan::dsl::function_expr::struct_"],[3759,"polars_plan::dsl::functions::temporal"],[3760,"polars_plan::dsl::options"],[3761,"core::iter::traits::collect"],[3762,"polars_lazy::dsl::eval"],[3763,"polars_core::utils"],[3764,"polars_time::windows::duration"],[3765,"polars_time::windows::group_by"],[3766,"polars_core::datatypes::time_unit"],[3767,"serde::de"],[3768,"polars_core::series"],[3769,"polars_plan::plans"],[3770,"polars_core::series::ops"],[3771,"polars_plan::dsl::dt"],[3772,"core::cmp"],[3773,"polars_lazy::dsl::list"],[3774,"polars_arrow::legacy::kernels::ewm"],[3775,"polars_core::chunked_array::ops"],[3776,"core::fmt"],[3777,"polars_plan::plans::apply"],[3778,"polars_ops::frame::join::iejoin"],[3779,"polars_plan::dsl::function_expr::list"],[3780,"polars_plan::dsl::function_expr::binary"],[3781,"polars_plan::dsl::function_expr::business"],[3782,"polars_plan::dsl::function_expr::array"],[3783,"polars_plan::dsl::function_expr::range"],[3784,"alloc::string"],[3785,"polars_plan::plans::options"],[3786,"polars_schema::schema"],[3787,"core::hash"],[3788,"polars_ops::series::ops::interpolation::interpolate"],[3789,"polars_ops::series::ops::is_between"],[3790,"polars_plan::dsl::name"],[3791,"polars_plan::plans::lit"],[3792,"polars_core::utils::supertype"],[3793,"polars_plan::dsl::python_udf"],[3794,"polars_utils::idx_vec"],[3795,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3796,"polars_ops::series::ops::rank"],[3797,"polars_time::group_by::dynamic"],[3798,"polars_core::chunked_array::ops::rolling_window"],[3799,"polars_core::datatypes"],[3800,"polars_core::chunked_array"],[3801,"polars_time::chunkedarray::rolling_window"],[3802,"polars_core::chunked_array::ops::search_sorted"],[3803,"serde::ser"],[3804,"polars_core::series::series_trait"],[3805,"polars_plan::dsl::string"],[3806,"polars_ops::chunked_array::list::to_struct"],[3807,"compact_str"],[3808,"polars_ops::series::ops::business"],[3809,"polars_arrow::legacy::kernels::time"],[3810,"polars_plan::dsl::function_expr::rolling"],[3811,"polars_plan::dsl::function_expr::rolling_by"],[3812,"polars_plan::dsl::function_expr::trigonometry"],[3813,"polars_core::frame"],[3814,"rayon::iter"],[3815,"polars_utils::python_function"],[3816,"pyo3::types::any"],[3817,"pyo3::instance"],[3818,"polars_utils::arena"],[3819,"polars_plan::plans::ir"],[3820,"polars_plan::plans::aexpr"],[3821,"polars_plan::frame::opt_state"],[3822,"polars_plan::plans::anonymous_scan"],[3823,"polars_lazy::scan::anonymous_scan"],[3824,"polars_core::schema"],[3825,"polars_utils::index"],[3826,"polars_lazy::frame::exitable"],[3827,"polars_utils::aliases"],[3828,"polars_lazy::scan::csv"],[3829,"polars_lazy::scan::ipc"],[3830,"polars_lazy::scan::ndjson"],[3831,"polars_lazy::scan::parquet"],[3832,"polars_lazy::scan::file_list_reader"],[3833,"polars_io::cloud::options"],[3834,"polars_ops::frame::join::args"],[3835,"bitflags::iter"],[3836,"std::path"],[3837,"polars_plan::plans::ir::scan_sources"],[3838,"polars_io::options"],[3839,"polars_io::csv::write::options"],[3840,"polars_io::ipc::write"],[3841,"polars_io::json"],[3842,"polars_io::parquet::write::options"],[3843,"core::num::nonzero"],[3844,"polars_io::csv::read::options"],[3845,"chrono_tz::timezones"],[3846,"polars_core::datatypes::any_value"],[3847,"polars_core::frame::group_by::proxy"],[3848,"std::io"],[3849,"polars_io::parquet::write::writer"],[3850,"chrono::naive::datetime"],[3851,"polars_plan::dsl::functions::selectors"],[3852,"polars_plan::dsl::functions::horizontal"],[3853,"polars_plan::dsl::functions::arity"],[3854,"polars_plan::dsl"],[3855,"polars_plan::dsl::functions::range"],[3856,"polars_plan::dsl::functions::index"],[3857,"polars_plan::dsl::functions::coerce"],[3858,"polars_plan::dsl::functions::syntactic_sugar"],[3859,"polars_plan::dsl::functions::business"],[3860,"polars_plan::dsl::functions::concat"],[3861,"polars_plan::dsl::functions::correlation"],[3862,"polars_plan::dsl::functions::repeat"],[3863,"polars_utils::python_function::serde_wrap"],[3864,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gh0EfGf422666Ib7`777H`0Gl79`69``9`9AKbG`92;``Gn<3``<<:`:`3<4443<94Gd0======444`4432=8==Gb<5`6>996>>>><`=><I````?777=Hb0``Cj0?9>0<0?``0?05Gj`3==1:::19?j22Ah`Gh000000<00000<6`=5=24Dl`993>>5``355Ef06?0016161`>>>160>60>>>7019>6`20046>``0Gf?HnH`099939`:94Gl::::::8`;::1::0:1:2`::70:::0`8::::::8188`111?15:`111111`:``78;5:1:`8`00111:0::0000000>>:40`::`:1`:500`88``;04301FhFjFlFn9<G`Gb:BfGd;>Gj9Gn;HbCjHdHfHhHjHlHnI`IbIdAhF`hl1111j0400`AlAn2`;?2102`22`222`2`22222221021022`2`Dd<3DhDl``5`5`95555555559Ff5348O`8FhFjFlFn6;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF```````AlAnj00021`0`000`0Il01````>=<1Bf00?><;:972Ff5Dd5hO`lFhFjFlFnDl<G`GbEf==GdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`DljG`GbEfBf0000GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj00FfAlDd4hO`lFhFjFlFnDl;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jAn1`1```1Dl22G`GbEfBf0GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhj000Gb00Ef00Gd00Gf00Gh00Gj00Gl00Gn00H`00Hb00Hh00Hj00Hl00Hn00I`00Ib00Id00Ah00Kl0j0008000Al11l002222`An33Bf44DhFbEnLf88G`GbEf07Gd0GfGh0Gj0Gl0Gn0H`0Hb0Cj0HdHfHhHjHlHnI`IbIdAhF``67`jFfAlDdAnhO`lFhFjFlFnDl<<<<<<<<<<<<<<G`GbEf0Bf000000000000GdGfGhGjGlGnH`HbCj0000HdHfHhHjHlHn0I`IbIdAh0000F`Bf1`j`An101Al12FfJjBdDdLf77hDl99GbEfGdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj0HdHf25`FfAlDd6hO`lFhFjFlFnDl=G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`0``j0FfAlDdAnhO`lFhFjFlFnDl<G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jNjAnhEf4110444444144`4`4114Al3lO`7`57`577`777777707`7Dd0Bf090209`99`191111G``58:``8:``58::HdHf0`7:<`Hh21=2=8;==>==1===55421?>==`=`=Id?>FjFn=j0000`0>0::0`00`000`00;`00900F`=An2222``2222222222222222222h33Hl0<42244:9Dl5<GbEf?????GdGfGhGjGlGnH`HbCjHhHj>HnI`IbIdAhAn0j1Al211111111210211`1021181`113O`0`132`BfEf5444`FhFl`HdHf198763Fj3FnDl;G`Gb9:GdGfGhGjGlGnH`HbCj?>HhHjHlHnI`IbIdAhF`jDd1EfGdGhGjGlGnH`HbCjAlAnO`==Ff3=2h2lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`Dd0j11DhEnBd3EfGdGhGjGlGnH`HbCjFfAl?AnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF``hAnAl1j01200061206Ff2Dd45O`lFhFjFlFnDl9G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AKdAKfAKh2102AKjAKlAKnAL`ALbALd0ALfALh4ALjALlALnAM`3AMb528AMd1AMf11098432323570;5AMhAMjAMlAMnAN`ANbANdANfANhANjANlANn087;87;7;AO`AOb8AOdAOfAOh0?1AOjAOlAOnB@`4AMhB@bB@dB@fB@hB@jB@l:=;B@nBA`BAbBAdBAfBAh54BAj321BAlBAnBB`03721BBb0`Ed0000000000000000000``Kf000000000000000000000000000000000000000000000000000000CjGh0Gf112222222H`0Gl44``4`404`Gn515515222152Gd0666666222226662363666666333Hb077477`772Gj855584887777777477777451582255888858844484844414878464558888`184888888188588485888488848888885555358`5555558`1858`44555848844444442284888584414645`````AKjAKlAKnAMhAMjAMlAMnAN`ANbANdANfANhANjANlANn087;87;7;AO`AOb8AOdAOfAOh0?1AOjAOlAOnB@`4AMhB@bB@dB@fB@hB@jB@l:=;B@nBA`BAbBAdBAfBAh54BAj321BAlBAnBB`03721BBb0`GjGn0`0ABd0000`00000000000000000000000000000BBd00ABf000`0000000000000000000000000000ABh00000000000000`0000000000000000000000000000````Hd``````````````````````````0Hf`````10`````````100`1010```````10````10101```````ACdOhACj2102122221021022102222221022010210210222102102102102102`AAf000000000000000000000000000000000000000000000000000000000000`F`0000`ADh000000````````0`000000```0AEdABnADfADnAEhAEjAElAEn866580ADj77699999999087654321908765432197731877876543219876543219876543219AF`053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AG`99299843999999916475372646464;9293`9916453;9929164753999999973;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;92:9876543;;9999993292:9876543;246649999999696666666464646616644969119966164919664464646966916496699`````AFh0AIhAIj0Kb3`011120``1`00111300030311111`0````3``AHn0133``20032``12``4`114211122222221`AFfA@bJdAFn84AH`AHbAHd:A@`AHf;AIlACb<888ADl0007;:9AJh9AFh>AJf:98AIh87AIj76KbAFfA@bJd8AFn8AHn8AH`AHbAHd:A@`AHf;AIlACb<;:98AFh8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AJh:19AJf987AIh76AIj65KbAFfA@bJd7AFn9AHn8AH`AHbAHd:A@`AHf;AIlACb<3<<;:98AFh8765?43>21=1=<;:AJh:19AJf987AIh76AIj65KbAFfA@bJdAFn9AHnAH`AHbAHd:A@`AHf;AIlACb;;;:::999888AFh00888777666555333222111<<;::ADl:1199876AIh65AIj545?>=AJh==4<AJf<;:3982276Kb73AJbAFfA@bJdAFn;AHnAH`AHbAHd=A@`AHf>AIlACb86;6;:;:9?8AFh8?765AIh54AIj43Kb?>=AJh=4<AJf<;:498376225?5?53=?>AFfObJd36?>=;6<00040AHn111AFnADl5A@b8=444608`=AJbAHf33:8264>5AH`AHbAHdAIhA@`5AIjAIlACbKb8=2=AFf:>>140<Jd?AFhAHn<;:98=76542105;=22223?2AJhAFn32AJf?>=<;AHf;:987A@b743652AH`AHbAHdAIhA@`6AIjAIlACbKbJd00AFhAHnAFf=3AJhAFn43AJf?>=<;AHf;:9824A@b843762AH`AHbAHdAIhA@`6AIjAIlACbKbJd0=>=8;BBf0BBhBBjBBlBBnBC`BCbBCdBCf55BChBCjBCl14;3BCn:BD`49BDbBDd0>BDfBBf240;4BDh;13:624733?=BBj0BBl>BDj00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}?????????0{b{{b{c}}}{}}000000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{{G`{c}}}}}{{G`{c}}}{EhEh}}{{{b{Gb}}}Gb}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Cj}}}Cj}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000000{bf}00000000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjIj}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}2{{IljInB`}j}0{{j{Dn{J`}}{Bl{c}}B`B`}j{{Jb{n}}}}{{jjJdJf}j}{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Jj}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}Hd}{{}Hf}{{}Hj}{{}Hl}{{}Hn}{{}I`}{{}Id}{jj}{In{{b{c}}}{}}0000000000000000{{{b{{Bf{c}}}}}b{}}11111111111111111111{In{{b{Cdc}}}{}}000000000000000000000000000000000000{c{{Af{Dl}}}Jl}{c{{Af{j}}}Jl}{c{{Af{{G`{e}}}}}Jl{JnEh}}{c{{Af{Gb}}}Jl}{c{{Af{Ef}}}Jl}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jl}{c{{Af{{Bf{K`}}}}}Jl}{c{{Af{{Bf{{Ab{En}}}}}}}Jl}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jl}{c{{Af{{Bf{{Ab{Kb}}}}}}}Jl}{c{{Af{Gd}}}Jl}{c{{Af{Gf}}}Jl}{c{{Af{Gh}}}Jl}{c{{Af{Gj}}}Jl}{c{{Af{Gl}}}Jl}{c{{Af{Gn}}}Jl}{c{{Af{H`}}}Jl}{c{{Af{Hb}}}Jl}{c{{Af{Cj}}}Jl}{c{{Af{Hh}}}Jl}{c{{Af{Hj}}}Jl}{c{{Af{Hl}}}Jl}{c{{Af{Hn}}}Jl}{c{{Af{I`}}}Jl}{c{{Af{Ib}}}Jl}{c{{Af{Id}}}Jl}{c{{Af{Ah}}}Jl}{{AnClKd}j}{{jClKd}j}{{jj}}{{jc}j{{Aj{j}}}}{Inf}000000000000000000000000000000000000{jj}{Anj}1`{jKf}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jJ`B`}j}{{{b{Dl}}{b{Dl}}}B`}{{{b{j}}{b{j}}}B`}:{{{b{{G`{c}}}}{b{{G`{c}}}}}B`{KhEh}}{{{b{Gb}}{b{Gb}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`Kj}{{{b{{Bf{K`}}}}{b{{Bf{K`}}}}}B`}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Gn}}{b{Gn}}}B`}{{{b{H`}}{b{H`}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{I`}}{b{I`}}}B`}{{{b{Ib}}{b{Ib}}}B`}{{{b{Id}}{b{Id}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000000000{{KljB`}j}0{{jKn}j}{{jjJd}j}11`{{jc}j{{Jb{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}{Alj}1{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}<<{{jL`}j}={{}j}{Anj}88{{}{{Bf{{Ab{Bd}}}}}}9{{jj}j}{{{b{Dh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Fb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{En}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Lf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{j}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{G`{c}}}}{b{CdLb}}}{{Af{fLd}}}Eh}{{{b{Gb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ef}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{Bf{c}}}}{b{CdLb}}}{{Af{fLd}}}{}}{{{b{Gd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Gh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gl}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{H`}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hb}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Cj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{I`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ib}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Id}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ah}}{b{CdLb}}}{{Af{fLd}}}}{{{b{F`}}{b{CdLb}}}{{Af{fLd}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{Ebj}{Lhj}{Dlj}{Ljj}{Llj}{Elj}{B`j}{Clj}{{{b{E`}}}j}{Ijj}{J`j}{Lnj}{M`j}==={MbEf}>{Md{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}{Mf{{Bf{{Ab{Dh}}}}}}{Gl{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Hb{{Bf{{Ab{Dh}}}}}}{H`{{Bf{{Ab{Dh}}}}}}{Mh{{Bf{{Ab{Dh}}}}}}{Gh{{Bf{{Ab{Dh}}}}}}{Mj{{Bf{{Ab{Dh}}}}}}{Ml{{Bf{{Ab{Dh}}}}}}{cc{}}00000000{MfCj}{H`Cj}{GhCj}3{GjCj}44444{I`Hn}55555{{{b{E`}}}Ah}{jAh}{nAh}{MnAh}9{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}N`}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jInIn}j}{{AljB`}j}43{Ffj}{{{b{Jj}}{b{{Nb{Cn}}}}Nd{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}In}{{{b{Lf}}{b{{Nb{Cn}}}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}88{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fNf}{{jEbEbEbEb}j}{{{b{j}}{b{Cdc}}}fNf}{{{b{Gb}}{b{Cdc}}}fNf}{{{b{Ef}}{b{Cdc}}}fNf}{{{b{Gd}}{b{Cdc}}}fNf}{{{b{Gf}}{b{Cdc}}}fNf}{{{b{Gh}}{b{Cdc}}}fNf}{{{b{Gj}}{b{Cdc}}}fNf}{{{b{Gl}}{b{Cdc}}}fNf}{{{b{Gn}}{b{Cdc}}}fNf}{{{b{H`}}{b{Cdc}}}fNf}{{{b{Hb}}{b{Cdc}}}fNf}{{{b{Cj}}{b{Cdc}}}fNf}{{{b{Hh}}{b{Cdc}}}fNf}{{{b{Hj}}{b{Cdc}}}fNf}{{{b{Hl}}{b{Cdc}}}fNf}{{{b{Hn}}{b{Cdc}}}fNf}{{{b{I`}}{b{Cdc}}}fNf}{{{b{Ib}}{b{Cdc}}}fNf}{{{b{Id}}{b{Cdc}}}fNf}{{{b{Ah}}{b{Cdc}}}fNf}{{Anj}j}{{j{Bl{In}}}j}{{j{Bl{j}}{Bl{In}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}In}000000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jNh}j}{{jj}j}{{}c{}}000000000000000000000000000000000000{{{b{j}}}}{NjAn}{AnAn}{{hB`}{{Af{{`{Nl}}Ad}}}}{{{b{Ef}}}B`}{{jccNn}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}02000000330{{AljB`}j}{{AnjB`}j}{lj}{O`j}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjOb}{{jJ`}j}:;;:;;{{O`c}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{O`{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Of}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jOhB`}j}1111{{{G`{{Bf{{Ab{Dh}}}}}}}{{Af{{Bf{{Ab{Dh}}}}Ad}}}}{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jO`}`44`{j}{{jc}j{{Aj{j}}}}0<{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Hd}{{}Hf}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{Oj{{b{j}}}}}}}f}{{j{b{Cd{Oj{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ol{eD`}}}}I`}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjIj}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{O`{b{E`}}}j}05`{{j{Dn{J`}}{Bl{c}}B`B`B`}j{{Jb{n}}}}{{jIn{Bl{c}}B`B`B`}j{{Jb{n}}}}{{{b{E`}}jOn}j}{{jjOn}j}9{{jA@`{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}}j}`{Alj}{Anj}{jj}00{{jA@b}j}{{jjHh}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}A@d}j}{{jInc}j{{Ch{{b{Cd{A@h{A@f}}}}}{{Bj{{Bl{J`}}}}}}C`CbA@j}}{{jA@d}j}{{jjA@l}j}101010{{jOnJ`A@d}j}{{jjOnJ`A@l}j}{{jInB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLh}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@n}j{{Aj{j}}}}``{{{b{Dl}}c}AfAA`}{{{b{j}}c}AfAA`}{{{b{{G`{c}}}}e}Af{AAbEh}AA`}{{{b{Gb}}c}AfAA`}{{{b{Ef}}c}AfAA`}{{{b{{Bf{{Ab{Dh}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Kb}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Bd}}}}}}c}AfAA`}{{{b{{Bf{{Ab{En}}}}}}c}AfAA`}{{{b{{Bf{K`}}}}c}AfAA`}{{{b{Gd}}c}AfAA`}{{{b{Gf}}c}AfAA`}{{{b{Gh}}c}AfAA`}{{{b{Gj}}c}AfAA`}{{{b{Gl}}c}AfAA`}{{{b{Gn}}c}AfAA`}{{{b{H`}}c}AfAA`}{{{b{Hb}}c}AfAA`}{{{b{Cj}}c}AfAA`}{{{b{Hh}}c}AfAA`}{{{b{Hj}}c}AfAA`}{{{b{Hl}}c}AfAA`}{{{b{Hn}}c}AfAA`}{{{b{I`}}c}AfAA`}{{{b{Ib}}c}AfAA`}{{{b{Id}}c}AfAA`}{{{b{Ah}}c}AfAA`}{{Anc}j{{Aj{j}}}}0{{jAAd}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIjB`}j}8{{AlIj}j}{{AnIj}j}{{jIj}j}{jAAf}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{O`{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{In}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjJdJf}j}```{{AnIn}j}{{{b{j}}{b{{Nb{Cn}}}}Nd}{{Af{DfAd}}}}={O`j}{bc{}}00000000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMn}000000000{{Al{Bl{{Ab{Bn}}}}}{{Af{jAd}}}}{{AnAAh}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}};{{{b{Dh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{b{{Af{AAjAAl}}}}000000000{bAAn}000000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlIj}j}{{AnIj}j}{{jIj}j}`{{}c{}}000000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Hdj}Hd}0{{Hfj}Hf}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{Hfjjj}Hf}{{Hdjjj}Hd}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{HdJh}Hd}{{Hd{Bl{n}}}Hd}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}3{cc{}}87{{}In}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}3``{{Kfj{Ej{B`}}{Dn{El}}AB`}j}{Kfj}=<{{KfJh}j}1{{KfjJh}j}{{Kfn}j}333=<;3:3983333333333{{Kfj}j}44{{Kf{Bl{n}}jABb}j}15{{Kf{b{E`}}}j}65066666662:98;6656`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABd}}}ABd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABd}}}Jl}{Inf}{{{b{ABd}}{b{ABd}}}B`}{{{b{ABd}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABd}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABd}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7```````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABf}}}ABf}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABf}}}Jl}{Inf}{{{b{ABf}}{b{ABf}}}B`}{{{b{ABf}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABf}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABf}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABh}}}Jl}{Inf}{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABh}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABh}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{ABl{{Dn{ABj}}}}}{{AC`{}{{If{ABn}}}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cACb}{{ABl{ABn}}}{{Bb{{A`{ABn}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjIj}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jjJdJf}j}0{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjIj}j}{{{b{E`}}jOn}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHh}j}0``{{jjIjB`}j}6{{jjJdJf}j}0````````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Oh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ACd}}ABj}{{Af{ABjAd}}}}{{{b{ACd}}}ACd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}00{In{{b{Cdc}}}{}}00{c{{Af{ACd}}}Jl}{Inf}00{{{b{ACd}}{b{ACd}}}B`}{{b{b{c}}}B`{}}00{{{b{ACd}}{b{CdLb}}}{{Af{fLd}}}}{cc{}}00{{{ACh{ACf}}}ACd}{{{b{ACj}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{}In}00{{}c{}}00{{{ACh{ACf}}{Bl{Cn}}B`B`}Oh}{{{Bl{Cn}}}ACj}{{{b{ACd}}c}AfAA`}{bc{}}{{{b{{A`{Ij}}}}}{{Af{ACdAd}}}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Oh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACj}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACd}}}{{Af{{Dn{Ij}}Ad}}}}{bAAn}00;;;`{{AAfB`}j}{AAfj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{AAfjB`}j}{{AAfj}j}1{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}37{{AAfjIn}j}4{{AAf{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}In}{{}c{}}{{AAf{b{E`}}B`}j}{{AAf{Bl{Cn}}{Bl{In}}}j}:>>{{AAfInACl}j}0{{AAfjjB`}j}0{{AAfjjB`Cl}j}{AAfj}{{AAfjj}j}?;;?;??????{{AAfCnHjj}j}{{AAfj}j}{{AAfHj}j}{{AAf{Bl{Jh}}{Bl{n}}Hjj}j}{{AAfIn}j}{{AAfjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}{{}c{}}8``````````````````````````````````{{bd}f}00000000{{ABnc}{{ABl{ABj}}}{{Bn{ACn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{Bj{{ABl{f}}}}}}}}{{ABnB`}ABn}{{ADfc}ABn{{Bb{{A`{j}}}}}}{{}ADh}`{{ADjB`}ADj}{{{Ab{ADl}}ADn}{{ABl{ABn}}}}{{ABnABncc}ABn{{Aj{j}}}}{{ADfcAE`}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}10{{{b{ADh}}}Lh}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{ABnABn}``{{{b{AEd}}}f}{{ABn{AEf{{b{E`}}Cn}}B`}ABn}{{ABnCnB`}ABn}{{{b{AEd}}}AEd}{{{b{ABn}}}ABn}{{{b{ADf}}}ADf}{{{b{ADn}}}ADn}{{{b{AEh}}}AEh}{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{ADh}}}ADh}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AF`}}}{{Bl{{b{AFb}}}}}}0{{{b{AEh}}}{{Bl{{b{AFb}}}}}}{{{b{AEl}}}{{Bl{{b{AFb}}}}}}``{{ADjAFd}ADj}{ABn{{ABl{ABj}}}}{ABn{{ABl{AEd}}}}{{{b{CdABn}}}{{ABl{AE`}}}}{ADhADh}{{{b{AF`}}{Dn{ABn}}}{{ABl{ABn}}}}0{{{b{AEh}}{Dn{ABn}}}{{ABl{ABn}}}}{{{b{ADh}}ADh}B`}{ABnABn}{{ABnABn{Bl{n}}}ABn}{{}ABn}{{}ADn}{{}AEj}{{}AEn}{{}ADh}{In{{b{c}}}{}}000000000{In{{b{Cdc}}}{}}000000000{{{b{ABn}}}{{ABl{Mn}}}}000{{ADhADh}ADh}{Inf}{{{b{CdAEd}}}f}1{{ABne}ABn{{Aj{Ah}}}{{Ih{}{{If{c}}}}}}222222220{{ABn{Bl{{Dn{j}}}}}ABn}8{{{b{ABn}}B`}{{ABl{Mn}}}}{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdADh}}c}f{{Ih{}{{If{ADh}}}}}}{{{b{AEd}}}{{Bl{{ABl{ABj}}}}}}{{ABnIn}{{ABl{ABj}}}}{{{b{AEd}}}{{ABl{ABj}}}}{{ABnc}ABn{{Aj{j}}}}0{{ABnj}ABn}{ADjABn}{AF`{{ABl{ABn}}}}0{AEh{{ABl{ABn}}}}{AEl{{ABl{ABn}}}}210{ABnABn}{{{b{ADh}}{b{CdLb}}}{{Af{fLd}}}}0000{{ADjB`}ADj}{cc{}}0{ADfABn}{KbABn}22222222{Lh{{Bl{ADh}}}}{LhADh}00{cADh{{Ih{}{{If{ADh}}}}}}{{{b{E`}}}{{Bl{ADh}}}}{{ABnABncc}ABn{{Aj{j}}}}{{{b{ABn}}}ADh}{{{b{AF`}}}B`}0{{{b{AEh}}}B`}`{{ABne}ADf{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABnjcAFf}ADf{{Bb{{A`{j}}}}}}1{{ADf{Bl{In}}}ABn}``{{ADjAFh}ADj}```{{}In}0000000008{{{b{CdADh}}ADh}f}{{ADhADh}ADh}{{{b{ADh}}ADh}B`}{{}c{}}000000000{ADh}{{{b{ADh}}}B`}0{{{b{ADh}}}{{AFj{ADh}}}}{{{b{ADh}}}{{AFl{ADh}}}}{{ABnABnccAFn}ABn{{Bb{{A`{j}}}}}}{ABnADj}{{ADjB`}ADj}{{ADj{Dn{j}}}ABn}{ABnABn}{AG`ABn}1{{ABnABncc}ABn{{Aj{j}}}}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABnAEb}ABn}``{{AElB`}AEl}`{{ABncAGb{Bl{{Ab{Lf}}}}{Bl{{b{E`}}}}}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ABnACdAGb{Bl{AE`}}B`}ABn}777{{ABnABnc}{{ABl{ABn}}}{{Aj{n}}}}8{{{b{AF`}}}{{Bl{In}}}}{{{b{AEh}}}{{Bl{In}}}}{{{b{AEl}}}{{Bl{In}}}}````>{cAEh{{Bb{AGd}}}}{cAEl{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}}AEh}{{{Ab{{A`{AGf}}}}}AEl}{AGhAEh}{AGhAEl}{ADhADh}{ABnABn}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{ACn}}}}``{ABn{{ABl{{Ol{ABjABj}}}}}}{{ABnjOn}ABn}{{{b{AF`}}}B`}{{{b{AEh}}}B`}{{{b{AEl}}}B`}``{{{b{CdADh}}ADh}f}{{ABneiB`}ABn{{Bb{E`}}}{{Ih{}{{If{c}}}}}{{Bb{E`}}}{{Ih{}{{If{g}}}}}}98{{ABnjcA@b}ADf{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{Bl{{b{AGj}}}}}}{{{b{AEh}}}{{Bl{{b{AGj}}}}}}{{{b{AEl}}}{{Bl{{b{AGj}}}}}}```{{AGlAGnB`}ABn}{{cAEj}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEj}{{ABl{ABn}}}}{{AGhAEj}{{ABl{ABn}}}}{{cAEn}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEn}{{ABl{ABn}}}}{{AGhAEn}{{ABl{ABn}}}}``{{}ADh}{{{b{CdABn}}{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{AE`}}}}{{ABnc}ABn{{Bb{{A`{j}}}}}}0{{ABnABncc}ABn{{Aj{j}}}}{{{b{CdADh}}ADhB`}f}{{{b{ABn}}{ADb{AD`}}{ADb{ADd}}}f}{{ABnc}ABn{{Aj{j}}}}{{ABnce}ABn{{Aj{j}}}{{Aj{j}}}}{{ABncAH`}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHb}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHb}{{ABl{f}}}}{{ABncAHd}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHf}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHf}{{ABl{f}}}}`{{ABnClAEb}ABn}{{ABncDb}ABn{{Jb{n}}}}{{ABncDb}ABn{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{b{AGh}}}}{{{b{AEh}}}{{b{AGh}}}}{{{b{AEl}}}{{b{AGh}}}}{{ABnIj}ABn}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}{{ADjc}ADj{{Aj{n}}}}{ABnABn}3{{ABnAEb}ABn}{{ADf{Bl{In}}}ABn}{ABn{{ABl{AHh}}}}0{{{b{ABn}}B`}{{ABl{Mn}}}}{bc{}}000000007{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{{{b{CdABn}}AHj}{{Bl{{ABl{{Bl{ABj}}}}}}}}{bAAn}000000000={{ABn{Bl{{Dn{Mn}}}}AHl}ABn}{{ABn{Bl{e}}AHl}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABn{Bl{{Dn{n}}}}AHl}ABn}1{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABnId}ABn}`{{ADjAHn}ADj}{{ABnIj}ABn}{{}c{}}000000000{{ADjABn}ADj}{{AEl{Bl{AI`}}}AEl}{{AEhB`}AEh}{{AEh{Bl{AFb}}}AEh}{{AEl{Bl{AFb}}}AEl}{{ABnB`}ABn}0{{ABnj}ABn}{{ABnc}ABn{{Bb{{A`{j}}}}}}022{{AEh{Bl{n}}}AEh}{{ABnc}ABn{{Bb{{A`{ABn}}}}}}7{{AEh{Bl{AE`}}}AEh}{{AEhAIb}AEh}{{AEhIj}AEh}:::{{AElB`}AEl}5{{AEl{Bl{n}}}AEl}{{AEh{Bl{In}}}AEh}>=={{AF`c}AF`{{Aj{{Bl{In}}}}}}{{AEhc}AEh{{Aj{{Bl{In}}}}}}2{{AElc}AEl{{Aj{{Bl{In}}}}}}{{AEl{Bl{In}}}AEl}>{{AEh{Bl{AId}}}AEh}{{ABnADh}ABn}{{AF`{Ab{{A`{AGf}}}}}AF`}0{{ABnB`}ABn}0{{AEh{Bl{Ij}}}AEh}{{AEhB`}AEh}{{AF`B`}AF`}1=3{{AF`c}AF`{{Aj{{Bl{AGj}}}}}}{{ABnc{Bl{AEb}}}ABn{{Aj{n}}}}{{AEh{Bl{AGj}}}AEh}{{AEhc}AEh{{Aj{{Bl{AGj}}}}}}{{AEl{Bl{AGj}}}AEl}{{AElc}AEl{{Aj{{Bl{AGj}}}}}}{{AEh{Bl{AE`}}}AEh}{{AEl{Bl{AE`}}}AEl}{{AEhc}{{ABl{AEh}}}{{Bn{AGl}{{Bj{{ABl{AGl}}}}}}}}1{{AEhIj}AEh}={{AEhIn}AEh}0>{{AF`AGh}AF`}{{AEhAGh}AEh}{{AElAGh}AEl}{{ABnB`}ABn}{{AEhB`}AEh}01{ABnABn}{{{b{ABj}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{ABl{ABj}}}{{Aj{n}}}{{Ih{}{{If{c}}}}}{{Aj{n}}}{{Ih{}{{If{g}}}}}{{Aj{n}}}{{Ih{}{{If{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{Jd}}Cl{Bl{{b{AIf}}}}}{{Af{ClAd}}}}00{{{b{ADl}}}B`}00{{{b{ADl}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AFf}}}AFf}{{{b{A@b}}}A@b}{{{b{Jd}}}Jd}{{{b{AFn}}}AFn}{{{b{AFh}}}AFh}{{{b{AHn}}}AHn}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AHd}}}AHd}{{{b{AIh}}}AIh}{{{b{A@`}}}A@`}{{{b{AHf}}}AHf}{{{b{AIj}}}AIj}{{{b{AIl}}}AIl}{{{b{ACb}}}ACb}{{{b{Kb}}}Kb}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{Jd}}{b{Jd}}}AIn}`{{b{b{c}}}AIn{}}``{{{b{Kb}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{}AFf}{{}A@b}{{}AFn}{{}AHn}{{}AH`}{{}AHb}{{}AHd}{{}A@`}{{}AHf}{{}AIl}{{}ACb}{{}Kb}{In{{b{c}}}{}}00000000000000000{In{{b{Cdc}}}{}}00000000000000000`{{{b{Kb}}}{{Af{MnAd}}}}0{c{{Af{AFf}}}Jl}{c{{Af{A@b}}}Jl}{c{{Af{Jd}}}Jl}{c{{Af{AFn}}}Jl}{c{{Af{AFh}}}Jl}{c{{Af{AHn}}}Jl}{c{{Af{AH`}}}Jl}{c{{Af{AHb}}}Jl}{c{{Af{AHd}}}Jl}{c{{Af{AIh}}}Jl}{c{{Af{A@`}}}Jl}{c{{Af{AHf}}}Jl}{c{{Af{AIj}}}Jl}{c{{Af{AIl}}}Jl}{c{{Af{ACb}}}Jl}{c{{Af{Kb}}}Jl}`{{{b{Kb}}}{{Af{{`{Nl}}Ad}}}}{Inf}00000000000000000{{{b{AFf}}{b{AFf}}}B`}{{{b{A@b}}{b{A@b}}}B`}{{{b{Jd}}{b{Jd}}}B`}{{{b{AFn}}{b{AFn}}}B`}{{{b{AFh}}{b{AFh}}}B`}{{{b{AHn}}{b{AHn}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AHb}}{b{AHb}}}B`}{{{b{AHd}}{b{AHd}}}B`}{{{b{AIh}}{b{AIh}}}B`}{{{b{A@`}}{b{A@`}}}B`}{{{b{AHf}}{b{AHf}}}B`}{{{b{AIj}}{b{AIj}}}B`}{{{b{AIl}}{b{AIl}}}B`}{{{b{ACb}}{b{ACb}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AFf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@b}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Jd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{ADl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AHn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AH`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{ACb}}{b{CdLb}}}{{Af{fLd}}}}`{cc{}}0000{AFhAFn}1111111111{AJ`AIj}222`{{{b{AIj}}}Cn}{{{b{AJb}}{Dn{Bh}}{b{AFf}}}{{Af{{Ol{Bh{Dn{Bh}}AJd}}Ad}}}}{{{b{AFf}}{b{Cdc}}}fNf}{{{b{A@b}}{b{Cdc}}}fNf}{{{b{Jd}}{b{Cdc}}}fNf}{{{b{AFn}}{b{Cdc}}}fNf}{{{b{AFh}}{b{Cdc}}}fNf}{{{b{AHn}}{b{Cdc}}}fNf}{{{b{AH`}}{b{Cdc}}}fNf}{{{b{AHb}}{b{Cdc}}}fNf}{{{b{AHd}}{b{Cdc}}}fNf}{{{b{AIh}}{b{Cdc}}}fNf}{{{b{A@`}}{b{Cdc}}}fNf}{{{b{AHf}}{b{Cdc}}}fNf}{{{b{AIj}}{b{Cdc}}}fNf}{{{b{AIl}}{b{Cdc}}}fNf}{{{b{ACb}}{b{Cdc}}}fNf}``````{{}In}00000000000000000{{}c{}}00000000000000000{{{b{Kb}}}}{{{b{AFh}}}B`}{{{b{Jd}}{Bl{{b{E`}}}}}B`}1{{{b{Jd}}}B`}2{{{b{AIj}}}B`}{{{b{AHn}}{b{AFh}}}{{Af{fAd}}}}2``{Obj}{Jdj}{AJfj}{AIjj}````{AIjAIj}`{{{b{Jd}}}Cl}8{{JdCl}Jd}`1{{{b{AHn}}}B`}{Jd};{ClJd}{AFhAFn}{{{b{ADl}}AJh}{{Af{{Bl{ABj}}Ad}}}}````{{{b{E`}}}Jd}`{{{b{Jd}}{b{Jd}}}{{Bl{AIn}}}}```{Kb{{Af{{Dn{Ij}}Ad}}}}`{{{b{AJb}}{Dn{Bh}}{b{A@b}}}{{Af{{Ol{Bh{Dn{Bh}}AJd}}Ad}}}}`{{{b{ADl}}AJh}{{Af{ABjAd}}}}{{{b{ADl}}{Bl{In}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{AFf}}c}AfAA`}{{{b{A@b}}c}AfAA`}{{{b{Jd}}c}AfAA`}{{{b{AFn}}c}AfAA`}{{{b{AFh}}c}AfAA`}{{{b{AHn}}c}AfAA`}{{{b{AH`}}c}AfAA`}{{{b{AHb}}c}AfAA`}{{{b{AHd}}c}AfAA`}{{{b{AIh}}c}AfAA`}{{{b{A@`}}c}AfAA`}{{{b{AHf}}c}AfAA`}{{{b{AIj}}c}AfAA`}{{{b{AIl}}c}AfAA`}{{{b{ACb}}c}AfAA`}{{{b{Kb}}c}AfAA`}`{{{b{AFn}}}B`}````{{{b{AFn}}}{{b{n}}}}`{Kb{{Af{AHhAd}}}}{{{b{AIj}}}{{Bl{AJ`}}}}{bc{}}000000000000000{bMn}00`{{{b{AHb}}c}{{AJj{c}}}AJl}{{{b{AHf}}c}{{AJn{c}}}AJl}{{{b{Jd}}Cl{Bl{{b{AIf}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AK`}}}}}{{Bn{AK`}{{Bj{Cl}}}}}}{{{b{Jd}}Cl{Bl{{b{AIf}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}00000000000000000{{}{{Af{c}}}{}}00000000000000000{{{b{E`}}}{{Af{JdAd}}}}0{b{{Af{AAjAAl}}}}00{bAAn}00000000000000000`{{}c{}}00000000000000000{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{AFnAFd}AFn}`{{AFn{Bl{n}}}AFn}{{{b{AHb}}ABjc}{{Af{fAd}}}AJl}{{{b{AHf}}ABjc}{{Af{fAd}}}AJl}```````````````````````````````````````````````````````","D":"GLn","p":[[1,"reference"],[5,"Private",3721],[1,"unit"],[5,"MetaNameSpace",5,3722],[6,"Expr",5,3723],[5,"StructNameSpace",5,3724],[5,"PlSmallStr",3725],[1,"slice"],[5,"Arc",3726],[6,"PolarsError",3727],[6,"Result",3728],[6,"Selector",5,3729],[10,"Into",3730],[5,"ArrayNameSpace",5,3731],[5,"ListNameSpace",5,3732],[1,"bool"],[10,"AsRef",3730],[10,"FunctionOutputField",5,3733],[5,"SpecialEq",5,3733],[6,"Column",3734],[17,"Output"],[6,"Option",3735],[10,"Fn",3736],[10,"Send",3737],[10,"Sync",3737],[0,"mut"],[6,"VisitRecursion",3738],[10,"FnMut",3736],[6,"FunctionExpr",5,3739],[1,"i64"],[6,"DataType",3740],[5,"SortOptions",3741],[5,"SortMultipleOptions",3741],[5,"FieldsMapper",5,3742],[5,"Field",3743],[10,"ColumnsUdf",5,3733],[10,"Any",3744],[6,"AggExpr",5,3723],[5,"Vec",3745],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1840,3746],[6,"Operator",5,3723],[10,"Clone",3747],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3733],[5,"UserDefinedFunction",5,3748],[10,"ColumnBinaryUdf",5,3733],[6,"CastOptions",3749],[5,"CategoricalNameSpace",5,3750],[5,"When",5,3751],[5,"Then",5,3751],[5,"ChainedWhen",5,3751],[5,"ChainedThen",5,3751],[6,"LazySerde",5,3723],[6,"Excluded",5,3723],[6,"BitwiseFunction",5,3752],[6,"BitwiseAggFunction",5,3752],[6,"BooleanFunction",5,3753],[6,"CategoricalFunction",5,3754],[6,"TemporalFunction",5,3755],[6,"PowFunction",5,3756],[6,"StringFunction",5,3757],[6,"StructFunction",5,3758],[5,"DatetimeArgs",5,3759],[5,"DurationArgs",5,3759],[5,"RollingCovOptions",5,3760],[5,"StrptimeOptions",5,3760],[5,"JoinOptions",5,3760],[6,"WindowType",5,3760],[6,"WindowMapping",5,3760],[6,"NestedType",5,3760],[5,"UnpivotArgsDSL",5,3760],[17,"Item"],[10,"IntoIterator",3761],[1,"u8"],[10,"ExprEvalExtension",5,3762],[1,"usize"],[1,"f64"],[10,"IntoVec",3763],[5,"Duration",3039,3764],[6,"ClosedWindow",3765],[6,"TimeUnit",3766],[10,"BinaryUdfOutputField",5,3733],[10,"Deserializer",3767],[10,"Deserialize",3767],[5,"Series",3768],[6,"DslPlan",3039,3769],[6,"NullBehavior",3770],[5,"DateLikeNameSpace",1862,3771],[10,"PartialEq",3772],[10,"Sized",3737],[10,"ListNameSpaceExtension",5,3773],[5,"EWMOptions",3774],[6,"FillNullStrategy",3775],[5,"Formatter",3776],[5,"Error",3776],[10,"UdfSchema",5,3777],[1,"u32"],[1,"i8"],[1,"i16"],[1,"f32"],[1,"u16"],[6,"InequalityOperator",3778],[6,"ListFunction",3779],[6,"BinaryFunction",3780],[6,"BusinessFunction",3781],[6,"ArrayFunction",3782],[6,"RangeFunction",3783],[5,"String",3784],[5,"FunctionOptions",3785],[5,"Schema",3786],[6,"Context",3769],[10,"Hasher",3787],[6,"InterpolationMethod",3788],[10,"IntoListNameSpace",5,3773],[10,"Display",3776],[6,"ClosedInterval",3789],[5,"ExprNameNameSpace",5,3790],[10,"Literal",3039,3791],[10,"FnOnce",3736],[5,"SuperTypeOptions",3792],[5,"PythonUdfExpression",2415,3793],[5,"UnitVec",3794],[1,"tuple"],[6,"QuantileMethod",3795],[5,"RankOptions",3039,3796],[5,"RollingGroupOptions",3039,3797],[5,"RollingOptionsFixedWindow",3798],[5,"Float64Type",3799],[5,"ChunkedArray",3800],[10,"Copy",3737],[5,"RollingOptionsDynamicWindow",3801],[6,"SearchSortedSide",3802],[10,"Serializer",3803],[10,"Serialize",3803],[6,"IsSorted",3804],[5,"StringNameSpace",2480,3805],[6,"ListToStructArgs",3806],[5,"CompactString",3807],[6,"ToCompactStringError",3807],[5,"TypeId",3744],[6,"Roll",3808],[6,"NonExistent",3809],[6,"RollingFunction",2225,3810],[6,"RollingFunctionBy",2263,3811],[6,"TrigonometricFunction",2296,3812],[5,"DataFrame",3813],[8,"PolarsResult",3727],[5,"LazyFrame",2548],[10,"IntoParallelIterator",3814],[5,"UnionArgs",3039,3785],[5,"PythonFunction",2415,3815],[5,"PyAny",3816],[5,"Py",3817],[5,"PythonGetOutput",2415,3793],[1,"char"],[5,"Node",3818],[6,"IR",3819],[5,"Arena",3818],[6,"AExpr",3820],[5,"LazyGroupBy",2548],[5,"OptFlags",2548,3821],[5,"JoinBuilder",2548],[10,"AnonymousScan",3039,3822],[5,"ScanArgsAnonymous",2548,3823],[8,"SchemaRef",3824],[8,"IdxSize",3825],[5,"InProcessQuery",2548,3826],[8,"PlHashMap",3827],[5,"LazyCsvReader",2548,3828],[5,"ScanArgsIpc",2548,3829],[5,"LazyJsonLineReader",2548,3830],[5,"ScanArgsParquet",2548,3831],[10,"LazyFileListReader",2548,3832],[5,"CloudOptions",3833],[6,"JoinCoalesce",3834],[5,"DynamicGroupOptions",3039,3797],[6,"JoinType",3039,3834],[5,"Iter",3835],[5,"IterNames",3835],[5,"JoinArgs",3039,3834],[10,"IntoLazy",2548],[8,"AllowedOptimizations",2548,3821],[5,"Path",3836],[5,"PathBuf",3836],[6,"ScanSources",3837],[5,"RowIndex",3838],[8,"Schema",3824],[8,"PyObject",3817],[5,"CsvWriterOptions",3039,3839],[5,"IpcWriterOptions",3039,3840],[5,"JsonWriterOptions",3039,3841],[5,"ParquetWriteOptions",3039,3842],[5,"IRPlan",3819],[6,"SinkType",3785],[6,"UniqueKeepStrategy",3813],[6,"JoinValidation",3039,3834],[8,"NonZeroUsize",3843],[6,"CsvEncoding",3844],[6,"NullValues",3844],[6,"Tz",3845],[6,"RankMethod",3039,3796],[6,"LiteralValue",3039,3791],[5,"AnonymousScanOptions",3039,3785],[6,"Ordering",3772],[6,"AnyValue",3846],[10,"PolarsTemporalGroupby",3039,3797],[6,"GroupsProxy",3847],[5,"Null",3039,3791],[5,"AnonymousScanArgs",3039,3822],[5,"IpcWriter",3840],[10,"Write",3848],[5,"ParquetWriter",3849],[5,"NaiveDateTime",3850],[8,"OpaqueColumnUdf",5],[15,"Quantile",1728],[15,"Min",1728],[15,"Max",1728],[15,"IsBetween",2149],[15,"Any",2149],[15,"All",2149],[15,"SortBy",1738],[15,"Filter",1738],[15,"Cast",1738],[15,"Sort",1738],[15,"Gather",1738],[15,"RenameAlias",1738],[15,"Ternary",1738],[15,"Function",1738],[15,"Window",1738],[15,"AnonymousFunction",1738],[15,"Slice",1738],[15,"BinaryExpr",1738],[15,"QCut",2152],[15,"Entropy",2152],[15,"Log",2152],[15,"Hist",2152],[15,"Cut",2152],[15,"Correlation",2152],[15,"Round",2152],[15,"TopK",2152],[15,"TopKBy",2152],[15,"RoundSF",2152],[15,"EwmMeanBy",2152],[15,"Clip",2152],[15,"BackwardFill",2152],[15,"ForwardFill",2152],[15,"Random",2152],[15,"GatherEvery",2152],[15,"ValueCounts",2152],[15,"Rank",2152],[15,"EwmMean",2152],[15,"EwmStd",2152],[15,"EwmVar",2152],[15,"ReplaceStrict",2152],[15,"CumCount",2152],[15,"CumSum",2152],[15,"CumProd",2152],[15,"CumMin",2152],[15,"CumMax",2152],[15,"ConcatHorizontal",2197],[15,"ConcatVertical",2197],[15,"ExtractGroups",2197],[15,"JsonDecode",2197],[15,"PadStart",2197],[15,"PadEnd",2197],[15,"SplitExact",2197],[15,"Contains",2197],[15,"Find",2197],[15,"Replace",2197],[15,"DatetimeFunction",2217],[15,"CorrCov",2260],[15,"GroupBy",3666],[15,"Union",3666],[15,"Sort",3666],[15,"Scan",3666],[15,"ExtContext",3666],[15,"DataFrameScan",3666],[15,"IR",3666],[15,"Select",3666],[15,"HStack",3666],[15,"MapFunction",3666],[15,"Cache",3666],[15,"Filter",3666],[15,"Distinct",3666],[15,"Slice",3666],[15,"Sink",3666],[15,"Join",3666],[15,"HConcat",3666],[15,"PythonScan",3666],[15,"Range",3718]],"r":[[8,3723],[23,3731],[32,3733],[35,3752],[36,3752],[38,3753],[45,3754],[46,3750],[50,3751],[51,3751],[55,3733],[57,3733],[78,3759],[90,3759],[101,3723],[106,3723],[107,3762],[108,3790],[116,3742],[117,3790],[127,3739],[128,3733],[134,3733],[149,3773],[165,3760],[172,3723],[179,3732],[180,3773],[195,3722],[214,3760],[221,3723],[222,3723],[234,3756],[246,3733],[258,3760],[267,3729],[279,3733],[287,3757],[294,3760],[296,3758],[297,3724],[305,3755],[307,3751],[329,3777],[332,3760],[335,3748],[340,3751],[343,3760],[344,3760],[392,3851],[396,3852],[403,3852],[406,3853],[410,3854],[412,3855],[427,3856],[429,3856],[435,3857],[436,3858],[438,3854],[440,3751],[528,3859],[535,3858],[538,3854],[635,3852],[636,3851],[637,3851],[638,3860],[639,3860],[640,3860],[649,3861],[651,3852],[655,3852],[660,3855],[661,3759],[662,3855],[663,3855],[825,3854],[827,3851],[828,3851],[829,3759],[934,3854],[980,3852],[983,3860],[1059,3854],[1106,3851],[1145,3855],[1146,3855],[1204,3858],[1206,3858],[1216,3854],[1219,3854],[1223,3791],[1233,3853],[1244,3854],[1247,3854],[1255,3858],[1259,3852],[1260,3858],[1263,3852],[1264,3858],[1272,3858],[1276,3852],[1303,3858],[1305,3854],[1318,3861],[1325,3854],[1328,3858],[1332,3852],[1336,3862],[1349,3861],[1350,3861],[1430,3861],[1438,3854],[1444,3858],[1448,3852],[1455,3751],[1458,3855],[1642,3854],[1697,3751],[1840,3746],[1861,3750],[1862,3771],[1936,3752],[1937,3752],[1939,3753],[1943,3754],[1993,3739],[2058,3756],[2098,3757],[2106,3758],[2111,3755],[2144,3739],[2145,3739],[2146,3739],[2147,3739],[2148,3739],[2219,3754],[2223,3756],[2230,3810],[2267,3811],[2311,3812],[2340,3759],[2341,3759],[2342,3851],[2343,3852],[2345,3852],[2346,3853],[2347,3855],[2348,3856],[2349,3856],[2350,3857],[2351,3858],[2352,3858],[2353,3852],[2354,3851],[2356,3851],[2358,3860],[2361,3860],[2362,3860],[2363,3861],[2364,3852],[2365,3852],[2366,3855],[2367,3855],[2368,3759],[2369,3855],[2370,3855],[2373,3851],[2374,3851],[2375,3759],[2376,3852],[2377,3860],[2380,3851],[2381,3855],[2382,3855],[2383,3858],[2384,3858],[2385,3853],[2386,3858],[2387,3858],[2388,3858],[2392,3858],[2397,3858],[2398,3861],[2399,3858],[2400,3852],[2401,3862],[2402,3861],[2403,3861],[2406,3861],[2407,3858],[2408,3855],[2409,3855],[2415,3793],[2416,3793],[2417,3863],[2419,3815],[2420,3793],[2421,3793],[2480,3805],[2542,3748],[2548,3821],[2556,3826],[2559,3828],[2560,3832],[2563,3830],[2565,3821],[2572,3823],[2573,3829],[2574,3831],[3039,3822],[3040,3822],[3041,3785],[3049,3839],[3056,3769],[3057,3764],[3059,3797],[3077,3840],[3079,3834],[3080,3834],[3081,3834],[3082,3841],[3084,3791],[3085,3791],[3091,3791],[3092,3791],[3098,3842],[3099,3797],[3102,3796],[3103,3796],[3105,3797],[3121,3785],[3522,3864]],"b":[[668,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[669,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[670,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[759,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[760,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[761,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[762,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[763,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[832,"impl-PartialEq-for-Expr"],[833,"impl-Expr"],[837,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[838,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[945,"impl-Display-for-Expr"],[946,"impl-Debug-for-Expr"],[949,"impl-Display-for-Operator"],[950,"impl-Debug-for-Operator"],[952,"impl-Display-for-BitwiseFunction"],[953,"impl-Debug-for-BitwiseFunction"],[955,"impl-Display-for-BooleanFunction"],[956,"impl-Debug-for-BooleanFunction"],[957,"impl-Display-for-CategoricalFunction"],[958,"impl-Debug-for-CategoricalFunction"],[959,"impl-Display-for-TemporalFunction"],[960,"impl-Debug-for-TemporalFunction"],[961,"impl-Display-for-PowFunction"],[962,"impl-Debug-for-PowFunction"],[963,"impl-Display-for-StringFunction"],[964,"impl-Debug-for-StringFunction"],[965,"impl-Debug-for-StructFunction"],[966,"impl-Display-for-StructFunction"],[967,"impl-Display-for-FunctionExpr"],[968,"impl-Debug-for-FunctionExpr"],[997,"impl-From%3Cu64%3E-for-Expr"],[998,"impl-From%3Cu32%3E-for-Expr"],[999,"impl-From%3CAggExpr%3E-for-Expr"],[1000,"impl-From%3Ci8%3E-for-Expr"],[1001,"impl-From%3Ci16%3E-for-Expr"],[1002,"impl-From%3Ci32%3E-for-Expr"],[1003,"impl-From%3Cbool%3E-for-Expr"],[1004,"impl-From%3Ci64%3E-for-Expr"],[1005,"impl-From%3C%26str%3E-for-Expr"],[1006,"impl-From%3Cu8%3E-for-Expr"],[1007,"impl-From%3Cf64%3E-for-Expr"],[1008,"impl-From%3Cf32%3E-for-Expr"],[1009,"impl-From%3Cu16%3E-for-Expr"],[1015,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1016,"impl-From%3CBitwiseFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1017,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1018,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1019,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1020,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1021,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1022,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1023,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1024,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1025,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1026,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1036,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[1037,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[1038,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[1040,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[1052,"impl-From%3C%26str%3E-for-Selector"],[1053,"impl-From%3CExpr%3E-for-Selector"],[1054,"impl-From%3CPlSmallStr%3E-for-Selector"],[1055,"impl-From%3CString%3E-for-Selector"],[1078,"impl-Expr"],[1079,"impl-Hash-for-Expr"],[1388,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1389,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1390,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1391,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[1392,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[2246,"impl-Display-for-RollingFunction"],[2247,"impl-Debug-for-RollingFunction"],[2282,"impl-Display-for-RollingFunctionBy"],[2283,"impl-Debug-for-RollingFunctionBy"],[2326,"impl-Debug-for-TrigonometricFunction"],[2327,"impl-Display-for-TrigonometricFunction"],[2598,"impl-OptFlags"],[2599,"impl-Flags-for-OptFlags"],[2736,"impl-Octal-for-OptFlags"],[2737,"impl-LowerHex-for-OptFlags"],[2738,"impl-UpperHex-for-OptFlags"],[2739,"impl-Binary-for-OptFlags"],[2740,"impl-Debug-for-OptFlags"],[2744,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2745,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2755,"impl-OptFlags"],[2756,"impl-Flags-for-OptFlags"],[2997,"impl-LazyFileListReader-for-LazyCsvReader"],[2998,"impl-LazyCsvReader"],[2999,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3000,"impl-LazyJsonLineReader"],[3016,"impl-LazyCsvReader"],[3017,"impl-LazyFileListReader-for-LazyCsvReader"],[3018,"impl-LazyJsonLineReader"],[3019,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3382,"impl-Display-for-Duration"],[3383,"impl-Debug-for-Duration"],[3386,"impl-Display-for-JoinType"],[3387,"impl-Debug-for-JoinType"],[3388,"impl-Debug-for-JoinValidation"],[3389,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKIKDgEEABMAGQAVADAAAgA1AAIAOQAAADsAEwBQAAoAXAAIAGYAAwBsAAAAbgAZAIkAGwCmAAMAqwAIALUADgDFABUA3AAGAOQAKAAOAQkAGQEQACsBBwA1ARoAUQEDAFYBAABYASsAhQEBAIsBAACOAQEAkgEAAJgBAACaAQAApQEAAKgBAACvAQEAsgEBALcBAAC6AQAAxAFKABECAAATAgAAFQIBABsCAAAiAlkAfwIAAJkCDQCoAmUAEAMAABIDJAA4AwAAOgMAAEADAQBDAxUAWgM4AJsDAACfAwEApQMAAKsDAACuAyYA1gMAAOYDDAD2AwAA+AMLAA0EAgARBAAAFwQAAB0EAwAiBAAAJAQAACkEAQAuBAQANgQAADgEEwBPBAEAUgQAAFQEJACjBAIApwQBAKsEAAC+BAAAxgQAANMEAADWBAUA3wQAAOIEAADnBAAA8wQAAPYEAgD+BAIAAgUDAAsFAQAPBQIAFAUAABYFAQAcBQAAIwUAACUFAQAsBQAALgUAADYFAQA8BQAAPgUAAEAFAABFBQIAXwUFAGYFHACMBQAAkwUAAJoFAACfBQAAoQUBAKQFAACqBQEAsAUAALIFAAC0BQIAuwUeANsFCgDqBUkANgYAADkGMgB3BgAAeQYAAHsGJgClBgEAqgYAALcGAAC7BgEAwAYTANYGAADYBgAA2gYBAN0GAQDgBgYA6AZIADIHAwA3BwIAPAcCAEIHAwBKBwEAUwcCAFkHAABbBwAAaAcAAHcHAwB/B0kByggBAM0IHwDuCAEA8QgnABoJAQAdCQcAKQkAADcJAABECQEASwkBAFYJAgBaCQMAYwkDAGsJBgBzCQEAdgkbAJUJBACdCRMAsgkDALkJAgC9CQAAwAkAAMUJAgDKCQEA6gkDAP0JAwAECgEADQoCABEKCQAeCgAAIAoAACgKAAArChQAQQoBAEYKGgBlCgEAaQoAAG4KAAByChgAkAoCAJQKBwCsCgAArgoBALEKBAC5CgEAxQoAAMsKAgDTCgEA1goMAPEKAAD5CgAA+woBAAALAQADCwAABQsAAAkLAAAOCwMAEwsFABwLAQAiCwMALgsDADMLAQA4CwMAPQsAAEALAABJCwAATgsBAFgLAQBbCwgAZQsfAIcLAACJCwAAjAsBAI8LCQCaCwAAnAsBAKYLAQCvCwEAtgsAALgLAAC6CwAAygsAAMwLAADXCwEA3gsHAOkLAADsCwEA7wsAAPELAwD3CwAA+gsAAP4LAwAGDAAACAwGABIMAgAWDAAAGQwKACUMAgAqDAAALAwAADIMEwBJDFoAqAyLADUNEwBODQAAWQ0AAF0NAABfDREAcg0AAHUNEQCZDQMAng0CAKINAAClDQMArA0FALMNAQC3DQAAug0CAL4NAQDCDQAAxA0BAMkNFQDgDXYAWA4EAF4OKwA="}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHHHNNNNNNNNNNNNNNHHNNHHHHHHHHHNHHNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_cross","is_ie","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","count_ones","count_zeros","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_positive_idx_uncertain_col","is_sorted","","leading_ones","leading_zeros","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","trailing_ones","trailing_zeros","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[236,"polars_ops::prelude"],[238,"polars_ops::series"],[296,"polars_ops::chunked_array::binary"],[297,"polars_core::datatypes"],[298,"polars_ops::chunked_array::binary::namespace"],[299,"polars_ops::chunked_array::scatter"],[300,"polars_utils::index"],[301,"polars_core::series"],[302,"polars_error"],[303,"core::marker"],[304,"core::option"],[305,"core::iter::traits::collect"],[306,"polars_ops::chunked_array::list::namespace"],[307,"polars_core::datatypes::aliases"],[308,"polars_core::frame::column"],[309,"polars_core::chunked_array::ops::sort::options"],[310,"polars_core::frame"],[311,"dyn_clone::sealed"],[312,"polars_utils::pl_str"],[313,"polars_ops::frame::join::hash_join"],[314,"polars_ops::frame::join::args"],[315,"polars_ops::frame::join::cross_join"],[316,"core::fmt"],[317,"core::convert"],[318,"core::hash"],[319,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[320,"polars_arrow::array::primitive"],[321,"alloc::string"],[322,"core::result"],[323,"compact_str"],[324,"core::any"],[325,"polars_ops::series::ops::arg_min_max"],[326,"polars_ops::series::ops"],[327,"polars_core::chunked_array::ops::search_sorted"],[328,"polars_ops::series::ops::various"],[329,"polars_ops::frame::join::general"],[330,"polars_ops::series::ops::clip"],[331,"polars_ops::series::ops::horizontal"],[332,"polars_ops::series::ops::index"],[333,"polars_ops::series::ops::bitwise"],[334,"polars_ops::series::ops::negate"],[335,"polars_ops::series::ops::not"],[336,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`25432543254325432255443325443322543Ej3654F`0004476514765666514154`444447656547654765654765444``Gf`00```0Gb0Gd22```222````2222Gh033333333``00`````````3``33300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}0000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{cc{}}{DlDf}111{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}00{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}={{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`{{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{{d{Ad}}}{{Af{Ad}}}}0{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}0{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{C`}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0??{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{CbDb}{{Af{Ad}}}}2{dc{}}22{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0","D":"En","p":[[10,"AsBinary",4,296],[1,"reference"],[8,"BinaryChunked",297],[10,"BinaryNameSpaceImpl",4,298],[1,"u8"],[1,"slice"],[8,"BooleanChunked",297],[10,"ChunkedSet",4,299],[8,"IdxSize",300],[5,"Series",301],[8,"PolarsResult",302],[10,"Copy",303],[17,"Item"],[6,"Option",304],[10,"IntoIterator",305],[8,"UInt32Chunked",297],[10,"AsList",25],[8,"ListChunked",297],[10,"ListNameSpaceImpl",25,306],[1,"str"],[1,"bool"],[8,"StringChunked",297],[8,"IdxCa",307],[6,"Column",308],[1,"i64"],[1,"usize"],[5,"SortOptions",309],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",310],[5,"Private",311],[1,"unit"],[5,"PlSmallStr",312],[10,"JoinDispatch",80,313],[5,"JoinArgs",80,314],[0,"mut"],[6,"JoinCoalesce",80,314],[6,"JoinType",80,314],[6,"JoinValidation",80,314],[10,"CrossJoin",80,315],[1,"tuple"],[8,"ChunkJoinOptIds",80,314],[5,"Formatter",316],[8,"Result",316],[10,"DataFrameJoinOps",80],[10,"Into",317],[10,"Hasher",318],[10,"SeriesJoin",80,319],[8,"InnerJoinIds",80,314],[5,"PrimitiveArray",320],[8,"LeftJoinIds",80,314],[5,"String",321],[6,"Result",322],[5,"CompactString",323],[6,"ToCompactStringError",323],[5,"TypeId",324],[10,"ArgAgg",238,325],[10,"SeriesSealed",238,326],[6,"SearchSortedSide",238,327],[10,"SeriesMethods",238,328],[5,"Error",316]],"r":[[4,296],[5,298],[6,299],[26,306],[80,314],[81,314],[84,315],[88,314],[89,314],[90,314],[91,313],[93,314],[94,314],[97,314],[103,319],[108,329],[111,329],[114,329],[144,313],[236,80],[237,76],[239,325],[242,327],[243,328],[244,326],[251,330],[252,330],[253,330],[257,331],[258,332],[259,333],[260,333],[275,332],[276,332],[279,333],[280,333],[281,331],[282,331],[283,331],[284,334],[285,335],[286,336],[287,331],[289,333],[290,333]],"b":[[171,"impl-Display-for-JoinType"],[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinValidation"],[174,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAjALEAAAC2AAwAyAADAM0AAADPACAA8QAFAPkAAgD/ABAAEQEBABgBDgA="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::plans::options"],[122,"polars_plan::plans"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj12312312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{{}Bj}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",32],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",32,121],[1,"bool"],[6,"Context",32,122],[5,"DefaultFunctionRegistry",32],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[24,127],[33,122],[36,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgATAFIABABaAAAAXQAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKPNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","Time","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_parse","try_parse_interval","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[57,"polars_time::chunkedarray::string::infer"],[83,"polars_time::prelude"],[286,"polars_time::series"],[307,"polars_utils::pl_str"],[308,"chrono::naive::datetime"],[309,"polars_time::windows::duration"],[310,"polars_time::windows::group_by"],[311,"polars_core::datatypes::time_unit"],[312,"polars_arrow::legacy::time_zone"],[313,"core::option"],[314,"polars_core::chunked_array::logical::datetime"],[315,"polars_error"],[316,"polars_time::round"],[317,"polars_core::datatypes"],[318,"chrono::naive::time"],[319,"polars_core::chunked_array::logical::time"],[320,"polars_time::truncate"],[321,"polars_time::upsample"],[322,"polars_core::frame"],[323,"polars_core::utils"],[324,"dyn_clone::sealed"],[325,"polars_time::chunkedarray::string::patterns"],[326,"core::fmt"],[327,"core::hash"],[328,"core::result"],[329,"core::any"],[330,"core::clone"],[331,"polars_time::windows::bounds"],[332,"polars_time::windows::window"],[333,"core::cmp"],[334,"polars_core::datatypes::dtype"],[335,"polars_core::frame::group_by::proxy"],[336,"alloc::vec"],[337,"alloc::string"],[338,"core::ops::function"],[339,"compact_str"],[340,"polars_core::series"],[341,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``00Bn11111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<>>33221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<<<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0```````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}0{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}0000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{{{n{Bd}}}{{Ad{f}}}}0{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",307],[5,"NaiveDateTime",308],[5,"Duration",83,309],[6,"ClosedWindow",83,310],[6,"TimeUnit",311],[6,"Tz",312],[1,"reference"],[6,"Option",313],[8,"DatetimeChunked",314],[8,"PolarsResult",315],[1,"bool"],[10,"PolarsRound",0,316],[8,"StringChunked",317],[5,"NaiveTime",318],[8,"TimeChunked",319],[10,"PolarsTruncate",0,320],[10,"PolarsUpsample",0,321],[1,"str"],[5,"DataFrame",322],[10,"IntoVec",323],[5,"Private",324],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,325],[1,"usize"],[5,"Formatter",326],[8,"Result",326],[10,"Hasher",327],[6,"Result",328],[5,"TypeId",329],[5,"DatetimeInfer",57],[10,"Clone",330],[10,"PolarsNumericType",317],[10,"StrpTimeParser",57],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",57],[1,"i64"],[5,"Bounds",83,331],[6,"Label",83,310],[6,"StartBy",83,310],[5,"Window",83,332],[6,"Ordering",333],[6,"DataType",334],[5,"BoundsIter",83,332],[8,"GroupsSlice",335],[8,"TimeZone",334],[5,"Vec",336],[1,"tuple"],[5,"String",337],[17,"Output"],[10,"Fn",338],[5,"CompactString",339],[6,"ToCompactStringError",339],[1,"u32"],[10,"AsSeries",286],[5,"Series",340],[10,"TemporalMethods",286],[8,"Int32Chunked",317],[8,"Int8Chunked",317],[8,"BooleanChunked",317],[8,"Int16Chunked",317]],"r":[[1,310],[2,309],[5,316],[6,320],[7,321],[9,332],[11,341],[12,341],[18,341],[22,24],[30,325],[84,331],[85,332],[86,310],[89,309],[91,310],[99,310],[101,286],[105,332],[174,309],[175,309],[205,310],[206,310]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFwAAAAkADQAFABQAAAAXABgAMQACADUAEQBIAAEASwATAGAACQBrAFcAygAAAMwAAQDQAAoA4gABAOYAAgDqAAAA7QACAPEAAQD2AAgAAAEAAAIBAAAEAR0AJgEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCCQCRKMMHHHRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNNKMHHHFKFNNNNNNNNNNNNNNMNNNNNNNHNNNHNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIKFIKRIKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNJSFFKNNNNNNNNNNNNNHNNNNNNNNNNNNNNNHNMNNNNNMNNNKKKKMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","algebraic_ops","aliases","arena","binary_search","cache","cardinality_sketch","cell","chunks","clmul","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","python_function","slice","sort","sync","sys","total_ord","unitvec","vec","Abs","AbsDiff","abs_diff","max_abs_diff","alg_add_f64","alg_mul_f64","alg_sum_f64","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","last_node","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","CardinalitySketch","borrow","borrow_mut","clone","clone_into","clone_to_uninit","combine","default","deref","deref_mut","drop","estimate","from","init","insert","into","new","to_owned","try_from","try_into","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","Chunks","as_slice","borrow","borrow_mut","chunk_size","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","from","init","into","into_iter","new","next","next_back","size_hint","skip_in_place","to_owned","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","portable_prefix_xorsum_inclusive","prefix_xorsum","prefix_xorsum_inclusive","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","nan_value","FloorDivMod","wrapping_floor_div_mod","arc_map","range_portion","try_arc_map","BytesHash","DirtyHash","HashPartitioner","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","dirty_hash","","drop","","eq","equivalent","","fmt","folded_multiply","from","","hash","hash_to_partition","","init","","into","","is_null","new","","num_partitions","peel_total_ord","to_owned","","to_total_ord","tot_eq","tot_hash","try_from","","try_into","","type_id","","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clear","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","AtomicIdxSize","Bounded","ChunkId","IdxSize","Indexable","Item","NonZeroIdxSize","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","into_py_dict_bound","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PySerializeWrap","PythonFunction","TrySerializeToBytes","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deref","","deref_mut","","deserialize","","deserialize_pyobject_bytes_maybe_cloudpickle","drop","","eq","equivalent","","fmt","from","","","init","","into","","serialize","","serialize_pyobject_with_cloudpickle_fallback","to_owned","try_deserialize_bytes","","try_from","","try_into","","try_serialize_to_bytes","","type_id","","Extrema","Slice2Uninit","SliceAble","SortedSlice","as_uninit","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::algebraic_ops"],[53,"polars_utils::aliases"],[71,"polars_utils::arena"],[138,"polars_utils::binary_search"],[143,"polars_utils::cache"],[180,"polars_utils::cardinality_sketch"],[201,"polars_utils::cell"],[221,"polars_utils::chunks"],[246,"polars_utils::clmul"],[252,"polars_utils::cpuid"],[254,"polars_utils::fixedringbuffer"],[277,"polars_utils::float"],[284,"polars_utils::floor_divmod"],[286,"polars_utils::functions"],[289,"polars_utils::hashing"],[341,"polars_utils::idx_vec"],[385,"polars_utils::index"],[450,"polars_utils::io"],[453,"polars_utils::itertools"],[463,"polars_utils::itertools::enumerate_idx"],[490,"polars_utils::mem"],[495,"polars_utils::min_max"],[502,"polars_utils::mmap"],[603,"polars_utils::nulls"],[608,"polars_utils::ord"],[610,"polars_utils::partitioned"],[629,"polars_utils::pl_str"],[687,"polars_utils::priority"],[710,"polars_utils::python_function"],[756,"polars_utils::slice"],[767,"polars_utils::sort"],[769,"polars_utils::sync"],[796,"polars_utils::sys"],[810,"polars_utils::total_ord"],[860,"polars_utils::vec"],[874,"num_traits"],[875,"core::cmp"],[876,"core::marker"],[877,"core::fmt"],[878,"core::iter::traits::collect"],[879,"core::clone"],[880,"core::result"],[881,"serde::de"],[882,"core::option"],[883,"core::hash"],[884,"core::default"],[885,"core::ops::function"],[886,"serde::ser"],[887,"core::any"],[888,"core::borrow"],[889,"alloc::sync"],[890,"core::ops::range"],[891,"alloc::vec"],[892,"core::slice::iter"],[893,"polars_error"],[894,"std::path"],[895,"std::io::error"],[896,"std::fs"],[897,"core::iter::traits::iterator"],[898,"core::ops::arith"],[899,"num_traits::cast"],[900,"num_traits::identities"],[901,"pyo3::marker"],[902,"pyo3::types::dict"],[903,"pyo3::instance"],[904,"core::iter::traits::exact_size"],[905,"core::iter::traits::double_ended"],[906,"memmap2"],[907,"memmap2::advice"],[908,"polars_utils::mmap::private"],[909,"bytes::bytes"],[910,"std::io"],[911,"hashbrown::map"],[912,"hashbrown::raw_entry"],[913,"std::ffi::os_str"],[914,"core::convert"],[915,"compact_str"],[916,"alloc::string"],[917,"alloc::borrow"],[918,"alloc::boxed"],[919,"polars_utils::python_function::serde_wrap"],[920,"core::mem::maybe_uninit"],[921,"rayon_core::thread_pool"]],"i":"``````````````````````````````````````````````d`00```ACb```````0AjAlACdACf43210``B`Bd101101010100010101010110000101111110010111110111011101010110111`Dn``0``EjEd100000101010110000100101001001010`F`0000000000000000000`Fd000000000000000000`Fh00000000000000000000000`````````Fl000000000000000000000`Fn00000`G```````GfGh101010101010Gj2212222`212`1212122112212222121212``Gn00000000000000000000000000000000000000000`````I``````HlHn10`101010101010111010110221101010Id122021If2Ih443434343````Jb0`000000`Jd0000000000000000000000000``````Kl00000Ld````Kn0Lb12012Lf123013030303223301230123011`23012333001303300330230123012220110300020330302301230123012Ib0`00```Ml00000000000000000Nd0`0000000000000000000000000000000000000000000000000000000`Oj000000000000000000000`````OnOl10000101010`100000100101010`0A@`121210121````A@fA@j`A@l0A@n0```AAd0000000000000000000000000``AAf00000000000ABd````0`AAj0``00000000000000000000000101AA`AAl11AAn02213333```ABh``00ABj`ABlABn1AC`","f":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}{{AbAb}Ab}0{cAb{{Af{}{{Ad{Ab}}}}}}````````22222{Ahc{}}{Ah{{Aj{ce}}}{}{}}{Ah{{Al{c}}}{}}22``{{{Bb{An{B`{c}}}}c}Bd{}}{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{An{B`{c}}}}}Bf{}}{{{Bb{Bd}}}Bd}{{{Bb{{B`{c}}}}}{{B`{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{{{Bb{Bd}}{Bb{Bd}}}Bj}{{Bb{Bb{c}}}Bj{}}{{}Bd}{{}{{B`{c}}}{}}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{c{{Bl{Bd}}}Bn}{c{{Bl{{B`{e}}}}}BnC`}{AhBf}0{{{Bb{An{B`{c}}}}Bd}BdBh}{{{Bb{Bd}}{Bb{Bd}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Bd}}{Bb{AnCd}}}Cf}{{{Bb{{B`{c}}}}{Bb{AnCd}}}Cfl}{cc{}}0{{{Bb{{B`{c}}}}Bd}{{Bb{c}}}{}}{{{Bb{An{B`{c}}}}{Ch{Bd}}}{{Ch{{Bb{Anc}}}}}{}}{{{Bb{An{B`{c}}}}Bd}{{Bb{Anc}}}{}}{{{Bb{{B`{c}}}}{Bb{c}}}{{Cj{Bd}}}{}}3{{{Bb{Bd}}{Bb{Anc}}}BfCl}{{}Ah}0{{}c{}}0{{{Bb{{B`{c}}}}}Cb{}}{{{Bb{An{B`{c}}}}}{{Cj{Bd}}}{}}{{{Bb{{B`{c}}}}}Ah{}}{{}{{B`{c}}}{}}{{{Bb{Bd}}{Bb{Bd}}}{{Cj{Bj}}}}{{{Bb{An{B`{c}}}}}{{Cj{c}}}{}}{{{Bb{An{B`{c}}}}Bdc}c{}}{{{Bb{An{B`{c}}}}Bde}BfCn{{Db{c}{{D`{c}}}}}}{{{Bb{Bd}}c}BlDd}{{{Bb{{B`{c}}}}e}BlDfDd}{{{Bb{An{B`{c}}}}BdBd}Bf{}}{{{Bb{An{B`{c}}}}Bd}cCn}{Bbc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{{{Bb{An{B`{c}}}}Bde}{{Bl{Bf`}}}Cn{{Dh{c}{{D`{{Bl{c`}}}}}}}}{BbDj}0{{{Bb{{B`{c}}}}}Dl{}}{Ah{{B`{c}}}{}}`{{{Bb{Dn}}e}{{Bl{AhAh}}}{}{{Dh{{Bb{c}}}{{D`{Bj}}}}}}{{{Bb{{E`{c}}}}c}AhEb}0{{{Bb{Dn}}e}Ah{}{{Dh{{Bb{c}}}{{D`{Cb}}}}}}``{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{{Ed{ce}}}}}{{Ed{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{}{{Ed{ce}}}{EfEh}{}}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{AhBf}0{{{Bb{An{Ej{ceg}}}}cCb}e{EfEhBh}j{{Dh{c}{{D`{e}}}}}}{cc{}}0{{{Bb{{Ed{eg}}}}{Bb{c}}}{{Cj{{Bb{g}}}}}{EfEhEl}{{En{c}}EfEh}{}}{{{Bb{An{Ed{eg}}}}{Bb{c}}}{{Cj{{Bb{Ang}}}}}{EfEhEl}{{En{c}}EfEh}{}}{{{Bb{An{Ed{eg}}}}{Bb{c}}i}{{Bb{Ang}}}{}{{En{c}}EfEh}{}{{Db{{Bb{e}}}{{D`{g}}}}}}{{}Ah}0{{{Bb{An{Ed{ce}}}}ce}{{Bb{Ane}}}{EfEh}{}}{{}c{}}0{{gAh}{{Ej{ceg}}}{EfEhBh}j{{Dh{c}{{D`{e}}}}}}{Ah{{Ed{ce}}}{EfEh}{}}{Bbc{}}{c{{Bl{e}}}{}{}}0{{{Bb{An{Ed{eg}}}}{Bb{c}}k}{{Bl{{Bb{Ang}}i}}}{}{{En{c}}EfEh}{}{}{{Db{{Bb{e}}}{{D`{{Bl{gi}}}}}}}}{{}{{Bl{c}}}{}}0{BbDj}0`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{F`}}}F`}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{AnF`}}{Bb{F`}}}Bf}{{}F`}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{F`}}}Ah}{cc{}}{{}Ah}{{{Bb{AnF`}}Fb}Bf}{{}c{}}8{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{}{{Fd{c}}}Cn}>=<{c{{Fd{c}}}{}};{Ffc{}}{{{Bb{{Fd{c}}}}}{}El}{{{Bb{An{Fd{c}}}}}{{Bb{Anc}}}El}=;{{{Fd{c}}}c{}}4{{}};:9`{{{Bb{{Fh{c}}}}}{{Bb{{E`{c}}}}}{}}98{{{Bb{{Fh{c}}}}}Ah{}}{{{Bb{{Fh{c}}}}}{{Fh{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Fh{c}}}}{Bb{AnCd}}}Cfl}{cc{}}{{}Ah}{{}c{}}0{{{Bb{{E`{c}}}}Ah}{{Fh{c}}}{}}{{{Bb{An{Fh{c}}}}}{{Cj{e}}}{}{}}0{{{Bb{{Fh{c}}}}}{{Fj{Ah{Cj{Ah}}}}}{}}{{{Bb{An{Fh{c}}}}Ah}Bf{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{FbFb}Fb}0{FbFb}000{{}Cb}0`{{{Bb{{Fl{c}}}}}{{Fj{{Bb{{E`{c}}}}{Bb{{E`{c}}}}}}}{}}{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Fl{c}}}}}Ah{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{{{Bb{An{Fl{c}}}}}Bf{}}{AhBf}{{{Bb{An{Fl{c}}}}cAh}Ahj}{cc{}}{{}Ah}{{}c{}}{{{Bb{{Fl{c}}}}}Cb{}}09{Ah{{Fl{c}}}{}}{{{Bb{An{Fl{c}}}}}{{Cj{c}}}{}}{{{Bb{An{Fl{c}}}}c}{{Cj{Bf}}}{}}<{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}`{{}Cb}0{{{Bb{Fn}}}Cb}10{{}Fn}`{{G`G`}{{Fj{G`G`}}}}{{{Gb{c}}e}{{Gb{c}}}Bh{{Dh{c}{{D`{c}}}}}}{{AhAh{Gd{Ah}}}{{Gd{Ah}}}}{{{Gb{c}}g}{{Bl{{Gb{c}}e}}}Bh{}{{Dh{c}{{D`{{Bl{ce}}}}}}}}```{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{Gf}}}Gf}{{{Bb{Gh}}}Gh}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{{{Bb{Gj}}}Fb}{{{Bb{Gf}}}Fb}{AhBf}0{{{Bb{Gf}}{Bb{Gf}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Gf}}{Bb{AnCd}}}Cf}{{FbFb}Fb}{cc{}}0{{{Bb{Gf}}{Bb{Anc}}}BfCl}{{FbAh}Ah}{{{Bb{Gh}}Fb}Ah}{{}Ah}0{{}c{}}0{{{Bb{Gf}}}Cb}{{{Cj{{Bb{{E`{Gl}}}}}}Fb}Gf}{{AhFb}Gh}{{{Bb{Gh}}}Ah}{ce{}{}}{Bbc{}}0{{{Bb{Gf}}}c{}}{{{Bb{Gf}}{Bb{Gf}}}Cb}<{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{BbDj}0{Gfc{}}``{{{Bb{An{Gn{c}}}}}{{Bb{An{E`{c}}}}}{}}0{{{Bb{{Gn{c}}}}}{{Bb{{E`{c}}}}}{}}0{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Gn{c}}}}}Ah{}}{{{Bb{An{Gn{c}}}}}Bf{}}{{{Bb{{Gn{c}}}}}{{Gn{c}}}{}}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{}{{Gn{c}}}{}}{{{Bb{{Gn{c}}}}}{{Bb{e}}}{}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}8{{{Bb{{Gn{c}}}}{Bb{{Gn{c}}}}}CbH`}{{Bb{Bb{c}}}Cb{}}0{{{Bb{An{Gn{c}}}}e}Bf{}{{Af{}{{Ad{c}}}}}}{{{Bb{{Gn{c}}}}{Bb{AnCd}}}Cfl}{{{Bb{{E`{c}}}}}{{Gn{c}}}Bh}{cc{}}{{{Hb{c}}}{{Gn{c}}}{}}{e{{Gn{c}}}{}{{Af{}{{Ad{c}}}}}}{{}Ah}{{}c{}}{{{Bb{{Gn{c}}}}}Cb{}}{{{Bb{{Gn{c}}}}}{{Hd{c}}}{}}{{{Bb{An{Gn{c}}}}}{{Hf{c}}}{}}{{{Bb{{Gn{c}}}}}Ah{}}{{}{{Gn{c}}}{}}{{{Bb{An{Gn{c}}}}}{{Cj{c}}}{}}{{{Bb{An{Gn{c}}}}c}Bf{}}0{{{Bb{An{Gn{c}}}}Ah}Bf{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{Ah{{Gn{c}}}{}}```````````{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{{E`{Hh}}}}Hh}{{Hj{Bf}}}}{{{Bb{Hl}}}Hl}{{{Bb{Hn}}}Hn}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{AhBf}0{{{Bb{Hl}}{Bb{Hl}}}Cb}{{Bb{Bb{c}}}Cb{}}0{Hn{{Fj{HhHh}}}}{{{Bb{Hl}}{Bb{AnCd}}}Cf}{{{Bb{Hn}}{Bb{AnCd}}}Cf}{cc{}}{HhHl}1{{{Bb{{I`{}{{Ad{c}}}}}}Ah}cIb}0{{{Bb{Hl}}}Hh}{{}Ah}0`{{{Bb{AnHn}}}{{Bb{AnFb}}}}{{}c{}}0{{{Bb{Id}}}Cb}{{{Bb{Hn}}}Cb}{{{Bb{Hl}}}Cb}{{{Bb{c}}}Cb{}}{{{Bb{Id}}}Ah}{{}Hl}{{}Hn}{{{Bb{If}}}Ah}{{HhHh}Hn}{{IhFb}Hh}{{{Bb{Hl}}}{{Cj{Hh}}}}{Bbc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{BbDj}0{{{Bb{Ij}}Il}In}{{{Bb{Ij}}}{{Hj{J`}}}}0`{JbCb}{Jb{{Hb{c}}}{}}`{Jb{{Jd{JbHh}}}}{Jb{{Jd{JbDl}}}}{{Jbcg}CbAf{}{{Dh{e}{{D`{Cb}}}}}}{{Jbcg}{{Cj{Bj}}}Af{}{{Dh{e}{{D`{{Cj{Bj}}}}}}}}{Jb{{Bl{ce}}}{}{}}{Jb{{Bl{{Hb{c}}e}}}{}{}}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Jd{ce}}}}}{{Jd{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Jd{ce}}}AhJf{{Jh{}{{D`{}}}}JjJlJnj}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Jd{ce}}}}{Bb{AnCd}}}Cfll}{cc{}}{{}Ah}{{}c{}}0{K`{{Kd{Kb}}}}{{{Bb{{Jd{ce}}}}}AhKf{{Jh{}{{D`{}}}}JjJlJnj}}{c{{Jd{ce}}}{}Kh}{{{Bb{An{Jd{ce}}}}}{{Cj{g}}}Jf{{Jh{}{{D`{}}}}JjJlJnj}{}}{{{Bb{An{Jd{ce}}}}}{{Cj{{Fj{e}}}}}{KfKj}{{Jh{}{{D`{}}}}JjJlJnj}}{{{Bb{An{Jd{ce}}}}Ah}{{Cj{g}}}Jf{{Jh{}{{D`{}}}}JjJlJnj}{}}{{{Bb{An{Jd{ce}}}}Ah}{{Cj{{Fj{e}}}}}{KfKj}{{Jh{}{{D`{}}}}JjJlJnj}}{{{Bb{{Jd{ce}}}}}{{Fj{Ah{Cj{Ah}}}}}Jf{{Jh{}{{D`{}}}}JjJlJnj}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{{Bb{{E`{Gl}}}}}Bf}000{{{Bb{{E`{c}}}}}{{Bb{An{E`{c}}}}}j}`{{KlKl}Kl}000{{{Bb{Kl}}{Bb{Kl}}}Cb}0`````{{{Bb{Kn}}L`}{{Bl{BfIl}}}}{{{Bb{Kn}}L`AhAh}{{Bl{BfIl}}}}{{{Bb{Lb}}}Gl}{{{Bb{Kn}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Ld}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Lb}}}{{Bb{{E`{Gl}}}}}}{Bb{{Bb{c}}}{}}000{{{Bb{An}}}{{Bb{Anc}}}{}}000{{{Bb{Ld}}}Ld}{{{Bb{Lf}}}Lf}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{{}Ld}{Ah{{Bb{c}}}{}}:{{{Bb{Ld}}}{{Bb{c}}}{}}111{Ah{{Bb{Anc}}}{}}000{AhBf}00{{{Bb{AnLb}}}Bf}1{{{Bb{J`}}}{{Hj{Bf}}}}{{{Bb{Kn}}{Bb{AnCd}}}{{Bl{BfLh}}}}{{{Bb{Ld}}{Bb{AnCd}}}Cf}{{{Bb{Lf}}{Bb{AnCd}}}Cf}{{{Bb{Lb}}{Bb{AnCd}}}Cf}{cc{}}{{{Hb{Gl}}}Ld}{LjLd}22{LdLf}31{LjLf}{{{Bb{J`}}}{{Hj{Ld}}}}{{{Gb{Lb}}}Ld}{c{{Ll{Lf}}}Ln}{{{Bb{{E`{Gl}}}}}Lf}{{{Bb{{E`{Gl}}}}}Ld}8{{{Hb{Gl}}}Lf}{{}Ah}000{{}c{}}000{{{Bb{Kn}}}{{Bl{BfIl}}}}{Kn{{Bl{M`Il}}}}{c{{Bl{KnIl}}}Mb}<{{{Bb{J`}}}{{Hj{Lb}}}}{{{Bb{J`}}Md}{{Hj{Lb}}}}{{{Bb{Lf}}}Ah}{{{Bb{Ld}}}Bf}{{{Bb{AnLf}}{Bb{An{E`{Gl}}}}}{{Ll{Ah}}}}{{{Bb{AnLf}}Ah}Ld}3{{{Bb{AnKn}}AhMf}{{Bl{BfIl}}}}{{{Bb{AnLf}}Mh}{{Ll{Fb}}}}{{{Bb{Ld}}{Gd{Ah}}}Ld}{Bbc{}}0{Ld{{Hb{Gl}}}}8{c{{Bl{e}}}{}{}}000{{}{{Bl{c}}}{}}000{BbDj}000{{{Bb{Kn}}}{{Bl{BfIl}}}}```{{{Bb{{Ib{}{{Mj{c}}}}}}}Cb{}}{{{Ib{}{{Mj{c}}}}}c{}}{{{Bb{c}}{Bb{c}}}Bj{hFn}}0`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{cc{}}{{}Ah}{{{Bb{{Ml{ceg}}}}}{{Bb{{E`{{Mn{ceg}}}}}}}{}{}{}}{{{Bb{An{Ml{ceg}}}}}{{Bb{An{Hb{{Mn{ceg}}}}}}}{}{}{}}{{}c{}}{{{Hb{{Mn{ceg}}}}}{{Ml{ceg}}}{}{}{}}{{{Bb{{Ml{ceg}}}}Fb}{{N`{ceg}}}{}{}{}}{{{Bb{{Ml{ceg}}}}Fb}{{Fj{{N`{ceg}}Ah}}}{}{}{}}{{{Bb{An{Ml{ceg}}}}Fb}{{Fj{{Nb{ceg}}Ah}}}{}{}{}}{{{Bb{An{Ml{ceg}}}}Fb}{{Nb{ceg}}}{}{}{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}```{{{Bb{Nd}}}{{Bb{Nf}}}}{{{Bb{Nd}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Nd}}}{{Bb{Ij}}}}{{{Bb{Nd}}}{{Bb{Nh}}}}00{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{Nd}}}Nd}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{Nd}}{Bb{Nd}}}Bj}{{Bb{Bb{c}}}Bj{}}{{}Nd}{Ah{{Bb{c}}}{}}{{{Bb{Nd}}}{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{c{{Bl{Nd}}}Bn}{AhBf}{{{Bb{Nd}}{Bb{c}}}Cb{{Nj{Nh}}El}}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Nd}}{Bb{AnCd}}}Cf}0{cc{}}{NlNd}{NnNd}{{{Bb{Nn}}}Nd}{{{Bb{Nh}}}Nd}{cNd{{Af{}{{Ad{{O`{Nh}}}}}}}}{cNd{{Af{}{{Ad{{Ob{Nh}}}}}}}}{cNd{{Af{}{{Ad{Nn}}}}}}{cNd{{Af{}{{Ad{Nd}}}}}}{cNd{{Af{}{{Ad{{Bb{Nh}}}}}}}}{cNd{{Af{}{{Ad{{Bb{Od}}}}}}}}{cNd{{Af{}{{Ad{Od}}}}}}{cNd{{Af{}{{Ad{{Bb{Nd}}}}}}}}88:{{{Bb{Nd}}{Bb{Anc}}}BfCl}{{}Ah}{{}c{}}{NdNn}{{{Bb{Nd}}{Bb{Nd}}}{{Cj{Bj}}}}{{{Bb{Nd}}c}BlDd}{Bbc{}}{BbNn}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{Bb{{Bl{NlOf}}}}{BbDj}{{{Bb{AnNd}}Od}Cf}{{{Bb{AnNd}}Oh}Cf}{{{Bb{AnNd}}{Bb{Nh}}}Cf}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Oj{ce}}}}}{{Oj{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{{Oj{ce}}}}{Bb{{Oj{ce}}}}}Bj{EbEh}{}}{{Bb{Bb{c}}}Bj{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Oj{ce}}}}{Bb{{Oj{ce}}}}}CbEh{}}{{Bb{Bb{c}}}Cb{}}0{{{Bb{{Oj{ce}}}}{Bb{AnCd}}}Cfll}{cc{}}{{}Ah}{{}c{}}{{{Bb{{Oj{ce}}}}{Bb{{Oj{ce}}}}}{{Cj{Bj}}}{EbEh}{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}`````{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{Ol}}}Ol}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{c{{Bl{{On{e}}}}}BnA@`}{c{{Bl{Ol}}}Bn}{{{Bb{{E`{Gl}}}}}{{Hj{c}}}{{A@d{A@b}}}}{AhBf}0{{{Bb{Ol}}{Bb{Ol}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Ol}}{Bb{AnCd}}}Cf}{cc{}}0{A@bOl}{{}Ah}0{{}c{}}0{{{Bb{{On{{Bb{c}}}}}}e}BlA@`Dd}{{{Bb{Ol}}c}BlDd}{{{Bb{A@b}}}{{Hj{{Hb{Gl}}}}}}{Bbc{}}{{{Bb{{E`{Gl}}}}}{{Hj{A@`}}}}{{{Bb{{E`{Gl}}}}}{{Hj{Ol}}}}{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{{{Bb{A@`}}}{{Hj{{Hb{Gl}}}}}}{{{Bb{Ol}}}{{Hj{{Hb{Gl}}}}}}{BbDj}0````{{{Bb{A@f}}}{{Bb{{E`{{A@h{c}}}}}}}{}}{{{Bb{A@j}}}Cb}{{{Bb{{E`{Gl}}}}}Fb}{{{Bb{A@l}}}{{Cj{{Bb{c}}}}}{}}0{{{Bb{A@n}}{Gd{Ah}}}A@n}0{{e{Bb{An{Hb{Gl}}}}Ah}{{Bb{An{E`{g}}}}}{AA`j}{{Af{}{{Ad{c}}}}}{Jjj}}{{{Bb{AAb}}{Bb{{E`{{Fj{HhHh}}}}}}{Bb{An{Hb{Hh}}}}}Bf}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{AAd{c}}}}}{{AAd{c}}}{}}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{{{Bb{{AAd{c}}}}}{{Bb{c}}}{}}{AhBf}{{{Bb{{AAd{c}}}}{Bb{{AAd{c}}}}}CbH`}{{Bb{Bb{c}}}Cb{}}0{{{Bb{{AAd{c}}}}{Bb{AnCd}}}Cfl}{{}{{AAd{c}}}{}}{cc{}}1{{{Bb{{AAd{c}}}}}{}{}}{{}Ah}{{}c{}}{{{Bb{{AAd{c}}}}}Cb{}}55{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}``{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{AAf}}}Fb}><;876```````54{AAhAAh}{AbAb}{{{Bb{{AAj{c}}}}}{{AAj{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}BjAA`}{{Bb{Bb{c}}}Bj{}}:9{{{Bb{{AAj{c}}}}}FbGj}9{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}CbAAl}{{Bb{Bb{c}}}Cb{}}0{cc{}}{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}CbAA`}0{{{Bb{{AAj{c}}}}{Bb{Ane}}}BfAAnCl}{{}Ah}{{}c{}}{{{Bb{{AAj{c}}}}}CbIb}447{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}{{Cj{Bj}}}AA`}{ce{}{}}{Bbc{}}{{{Bb{{ABd{}{{AB`{c}}{ABb{e}}}}}}}c{EfEh}{}}{{{Bb{AA`}}{Bb{AA`}}}Bj}{{{Bb{AAl}}{Bb{AAl}}}Cb}{{{Bb{AA`}}{Bb{AA`}}}Cb}0{{{Bb{AAn}}{Bb{Anc}}}BfCl}{{{Bb{{E`{AAn}}}}{Bb{Anc}}}BfCl}223{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{{AAj{c}}}eIb{}}``````{{{Bb{{ABh{}{{ABf{c}}}}}}g}{{Hb{e}}}{}{}{{Dh{{Bb{c}}}{{D`{e}}}}}}{{{ABh{}{{ABf{c}}}}g}{{Hb{e}}}{}{}{{Dh{c}{{D`{e}}}}}}{{{Bb{AnABj}}Ahc}Bfj}{{{Bb{An{Hb{c}}}}{Bb{An{Hb{e}}}}g}Bf{}{}{{Dh{ce}{{D`{{Cj{{Fj{ce}}}}}}}}}}{ABl{{Fj{AhAh}}}}{{{Bb{AnABn}}c}Bf{}}{{{Bb{ABl}}}{{Fj{AhAh}}}}{{AhAb}AC`}","D":"A@l","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",874],[10,"PartialOrd",875],[10,"Copy",876],[10,"Debug",877],[10,"Send",876],[10,"Sync",876],[1,"f64"],[17,"Item"],[10,"IntoIterator",878],[1,"usize"],[8,"PlHashMap",53],[8,"PlHashSet",53],[0,"mut"],[5,"Arena",71],[1,"reference"],[5,"Node",71],[1,"unit"],[10,"Clone",879],[6,"Ordering",875],[6,"Result",880],[10,"Deserializer",881],[10,"Deserialize",881],[1,"bool"],[5,"Formatter",877],[8,"Result",877],[1,"array"],[6,"Option",882],[10,"Hasher",883],[10,"Default",884],[17,"Output"],[10,"FnOnce",885],[10,"Serializer",886],[10,"Serialize",886],[10,"FnMut",885],[5,"TypeId",887],[1,"u32"],[10,"ExponentialSearch",138],[1,"slice"],[10,"Ord",875],[5,"FastFixedCache",143],[10,"Hash",883],[10,"Eq",875],[5,"FastCachedFunc",143],[10,"Sized",876],[10,"Borrow",888],[5,"CardinalitySketch",180],[1,"u64"],[5,"SyncUnsafeCell",201],[1,"never"],[5,"Chunks",221],[1,"tuple"],[5,"FixedRingBuffer",254],[10,"IsFloat",277],[10,"FloorDivMod",284],[5,"Arc",889],[5,"Range",890],[5,"BytesHash",289],[5,"HashPartitioner",289],[10,"DirtyHash",289],[1,"u8"],[5,"UnitVec",341],[10,"PartialEq",875],[5,"Vec",891],[5,"Iter",892],[5,"IterMut",892],[8,"IdxSize",385],[8,"PolarsResult",893],[5,"NullableIdxSize",385],[5,"ChunkId",385],[10,"Indexable",385],[10,"IsNull",603],[10,"Bounded",385],[10,"NullCount",385],[10,"ToIdx",385],[5,"Path",894],[5,"Error",895],[6,"PolarsError",893],[5,"File",896],[10,"Itertools",453],[5,"EnumerateIdx",463],[10,"Iterator",897],[10,"Add",898],[10,"FromPrimitive",899],[10,"AddAssign",898],[10,"One",900],[5,"Python",901],[5,"PyDict",902],[5,"Bound",903],[10,"ExactSizeIterator",904],[10,"Zero",900],[10,"DoubleEndedIterator",905],[10,"MinMax",495],[5,"Mmap",502,906],[6,"Advice",907],[5,"MMapSemaphore",502],[5,"MemSlice",502,908],[5,"MemReader",502],[5,"Error",877],[5,"Bytes",909],[8,"Result",895],[10,"Read",910],[5,"MmapMut",906],[10,"MmapAsRawDesc",906],[5,"MmapOptions",906],[5,"RemapOptions",906],[6,"SeekFrom",910],[17,"Inner"],[5,"PartitionedHashMap",610],[5,"HashMap",911],[5,"RawEntryBuilder",912],[5,"RawEntryBuilderMut",912],[5,"PlSmallStr",629],[5,"OsStr",913],[1,"str"],[10,"AsRef",914],[5,"CompactString",915],[5,"String",916],[6,"Cow",917],[5,"Box",918],[1,"char"],[6,"ToCompactStringError",915],[5,"Arguments",877],[5,"Priority",687],[5,"PythonFunction",710],[5,"PySerializeWrap",710,919],[10,"TrySerializeToBytes",710,919],[8,"PyObject",903],[10,"From",914],[10,"Slice2Uninit",756],[20,"MaybeUninit",920],[10,"SortedSlice",756],[10,"Extrema",756],[10,"SliceAble",756],[10,"TotalOrd",810],[5,"ThreadPool",921],[5,"SyncPtr",769],[5,"MemInfo",796],[1,"f32"],[5,"TotalOrdWrap",810],[10,"TotalEq",810],[10,"TotalHash",810],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",810],[17,"ItemIn"],[10,"ConvertVec",860],[10,"ResizeFaster",860],[10,"IntoRawParts",860],[10,"PushUnchecked",860],[10,"CapacityByFactor",860],[10,"InitHashMaps",53],[8,"PlIndexMap",53],[8,"PlIndexSet",53]],"r":[[0,385],[1,385],[505,908],[506,906],[710,919],[712,919],[714,919]],"b":[[365,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[367,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[549,"impl-From%3CVec%3Cu8%3E%3E-for-MemSlice"],[550,"impl-From%3CBytes%3E-for-MemSlice"],[632,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[633,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[634,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[635,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[654,"impl-Debug-for-PlSmallStr"],[655,"impl-Display-for-PlSmallStr"],[657,"impl-From%3CCompactString%3E-for-PlSmallStr"],[658,"impl-From%3CString%3E-for-PlSmallStr"],[659,"impl-From%3C%26String%3E-for-PlSmallStr"],[660,"impl-From%3C%26str%3E-for-PlSmallStr"],[661,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[662,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[663,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[664,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[665,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[666,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[667,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[668,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOQCVwAAAAkACwBcAGoAAABsAAEAbwACAHQAGACPAAAAkQAPAKMABQCrAAkAtgAKAMIAAADFAAQAywABAM4AAgDTAAAA1gAAANsAAgDfAAoA6wAAAO0AEQABAQYACgEAAAwBAwASAQMAFwEKACMBGAA+AQEAQQEBAEUBAQBIAQ4AWAEWAHABAgB0AQYAfAEnAKUBAACnAQAAqQEEALABFQDHAQAAyQEEANEBCQDcAQAA3gEDAOMBBwDwAQgA/gEmACYCAQAqAgAALgICADUCAwBAAgMARQICAEkCAABLAgEATgIMAFwCBABjAgUAagICAG4CCQB5AhcAkgIQAKQCCwCxAg0AwAIAAMICBADIAgAAygIAAMwCEwDiAgIA5wIXAAADAAADAwYACwMFABIDAgAWAwAAGAMFAB8DBAAmAwAAKAMDADADAwA2AwsAQwMDAEgDGQBjAwIAZwMAAGkDAQA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[425733,203043,55999,84228,9557,3387,8607,28489]}